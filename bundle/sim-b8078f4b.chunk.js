import{bO as t,K as e,q as n,r as a,du as i,dv as r,dw as s,dx as o,cZ as l,G as h,bA as d,bD as m,bF as g,bp as u,A as c,T as f,d as p,a2 as S,a as b,ai as T,aJ as E,ag as y,F as w,aj as C}from"./raid_sim_action-2e58abdd.chunk.js";import{B as v,m as A,j as R,i as P,t as W,b as x,c as O,a as k,I as N,a1 as M,T as B,s as D}from"./individual_sim_ui-35391952.chunk.js";const H={name:"Arms",data:t.create({talentsString:"3022032023335100102012213231251-305-2033",glyphs:e.create({major1:n.GlyphOfRending,major2:n.GlyphOfMortalStrike,major3:n.GlyphOfExecution,minor1:a.GlyphOfThunderClap,minor2:a.GlyphOfCommand,minor3:a.GlyphOfCharge})})},I={name:"Fury",data:t.create({talentsString:"32002301233-305053000520310053120500351",glyphs:e.create({major1:n.GlyphOfWhirlwind,major2:n.GlyphOfHeroicStrike,major3:n.GlyphOfExecution,minor1:a.GlyphOfBattle,minor2:a.GlyphOfBloodrage,minor3:a.GlyphOfCharge})})},G=i.create({useRend:!1,useMs:!0,useCleave:!1,prioritizeWw:!0,sunderArmor:r.SunderArmorNone,msRageThreshold:35,hsRageThreshold:30,rendHealthThresholdAbove:20,rendRageThresholdBelow:100,slamRageThreshold:25,rendCdThreshold:0,useHsDuringExecute:!0,useBtDuringExecute:!0,useWwDuringExecute:!0,useSlamOverExecute:!0,spamExecute:!0,stanceOption:s.DefaultStance}),F=i.create({useRend:!0,useMs:!0,useCleave:!1,sunderArmor:r.SunderArmorNone,msRageThreshold:355,slamRageThreshold:25,hsRageThreshold:50,rendCdThreshold:0,useHsDuringExecute:!0,spamExecute:!0,stanceOption:s.DefaultStance}),U=o.create({startingRage:0,useRecklessness:!0,useShatteringThrow:!0,shout:l.WarriorShoutCommanding}),j=h.create({flask:d.FlaskOfEndlessRage,food:m.FoodSpicedWormBurger,defaultPotion:g.IndestructiblePotion,prepopPotion:g.PotionOfSpeed}),z={name:"P1 Pre-Raid Fury Preset",tooltip:v,enableWhen:t=>0!=t.getTalentTree(),gear:u.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42645,\n\t\t\t"gems": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44195,\n\t\t\t"enchant": 3808\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 39606,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t40003,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44203,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39609,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40037,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40694,\n\t\t\t"gems": [\n\t\t\t\t42149,\n\t\t\t\t42149\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44205,\n\t\t\t"enchant": 3823\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t40037,\n\t\t\t\t40037\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42642,\n\t\t\t"gems": [\n\t\t\t\t42149\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 37852,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{\n\t\t\t"id": 37852,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{\n\t\t\t"id": 37191\n\t\t}\n\t]}')},J={name:"P1 Fury Preset",tooltip:v,enableWhen:t=>0!=t.getTalentTree(),gear:u.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41285,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40530,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t40037\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 40539,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39765,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40541,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40205,\n\t\t\t"gems": [\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40529,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t40022\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 43993,\n\t\t\t"gems": [\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40717\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{\n\t\t\t"id": 40385\n\t\t}\n\t]}')},K={name:"P1 Pre-Raid Arms Preset",tooltip:v,enableWhen:t=>0==t.getTalentTree(),gear:u.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41285,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42645,\n\t\t\t"gems": [\n\t\t\t\t40002\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44195,\n\t\t\t"enchant": 3808\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 39606,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t40002,\n\t\t\t\t40002\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41355,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39609,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40037,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40694,\n\t\t\t"gems": [\n\t\t\t\t42149,\n\t\t\t\t42149\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37193,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t40002,\n\t\t\t\t40037\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t40086,\n\t\t\t\t40002\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42642,\n\t\t\t"gems": [\n\t\t\t\t42149\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 37852,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 37191\n\t\t}\n\t]}')},_={name:"P1 Arms Preset",tooltip:v,enableWhen:t=>0==t.getTalentTree(),gear:u.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 40528,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42153\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40530,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t40038\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 40539,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42153\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t40002,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40541,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40205,\n\t\t\t"gems": [\n\t\t\t\t42153\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40318,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t49110,\n\t\t\t\t40038\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 43993,\n\t\t\t"gems": [\n\t\t\t\t40002\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40474\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 40385\n\t\t}\n\t]}')},q=A({fieldName:"useRecklessness",id:c.fromSpellId(1719)}),Z=A({fieldName:"useShatteringThrow",id:c.fromSpellId(64382)}),L=R({fieldName:"startingRage",label:"Starting Rage",labelTooltip:"Initial rage at the start of each iteration."}),Q=P({fieldName:"munch",label:"Munching",labelTooltip:'Apply "munching" to Deep Wounds'}),V=W({fieldName:"shout",values:[{color:"c79c6e",value:l.WarriorShoutNone},{actionId:c.fromSpellId(2048),value:l.WarriorShoutBattle},{actionId:c.fromSpellId(469),value:l.WarriorShoutCommanding}]}),X={inputs:[x({fieldName:"useMs",label:"Use Mortal Strike",labelTooltip:"Use Mortal Strike when rage threshold is met.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().mortalStrike}),x({fieldName:"useCleave",label:"Use Cleave",labelTooltip:"Use Cleave instead of Heroic Strike."}),x({fieldName:"useRend",label:"Use Rend",labelTooltip:"Use Rend when rage threshold is met and the debuff duration is less than refresh time.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),x({fieldName:"prioritizeWw",label:"Prioritize WW",labelTooltip:"Prioritize Whirlwind over Bloodthirst.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().bloodthirst}),O({fieldName:"msRageThreshold",label:"Mortal Strike rage threshold",labelTooltip:"Mortal Strike when rage is above:",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().mortalStrike}),O({fieldName:"slamRageThreshold",label:"Slam rage threshold",labelTooltip:"Slam when rage is above:",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().mortalStrike}),O({fieldName:"hsRageThreshold",label:"HS rage threshold",labelTooltip:"Heroic Strike when rage is above:"}),O({fieldName:"rendHealthThresholdAbove",label:"Rend health threshold (%)",labelTooltip:"Rend will only be used when boss health is above this value in %.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getRotation().useRend&&t.getTalents().bloodthirst}),O({fieldName:"rendRageThresholdBelow",label:"Rend rage threshold below",labelTooltip:"Rend will only be used when rage is smaller than this value.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getRotation().useRend&&t.getTalents().bloodthirst}),O({fieldName:"rendCdThreshold",label:"Rend Refresh Time",labelTooltip:"Refresh Rend when the remaining duration is less than this amount of time (seconds).",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>1==t.getRotation().useRend}),x({fieldName:"useHsDuringExecute",label:"HS during Execute Phase",labelTooltip:"Use Heroic Strike during Execute Phase."}),x({fieldName:"useBtDuringExecute",label:"BT during Execute Phase",labelTooltip:"Use Bloodthirst during Execute Phase.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().bloodthirst}),x({fieldName:"useWwDuringExecute",label:"WW during Execute Phase",labelTooltip:"Use Whirlwind during Execute Phase.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().bloodthirst}),x({fieldName:"useSlamOverExecute",label:"Slam Over Execute",labelTooltip:"Use Slam Over Execute when Bloodsurge Procs in Execute Phase.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().bloodthirst}),x({fieldName:"spamExecute",label:"Spam Execute",labelTooltip:"Use Execute whenever possible during Execute Phase.",changeEmitter:t=>f.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().mortalStrike}),k({fieldName:"sunderArmor",label:"Sunder Armor",values:[{name:"Never",value:r.SunderArmorNone},{name:"Help Stack",value:r.SunderArmorHelpStack},{name:"Maintain Debuff",value:r.SunderArmorMaintain}]}),k({fieldName:"stanceOption",label:"Stance Option",labelTooltip:"Stance to stay on. The default for Fury (Bloodthirst) is Berserker Stance and Battle Stance for everything else.",values:[{name:"Default",value:s.DefaultStance},{name:"Battle Stance",value:s.BattleStance},{name:"Berserker Stance",value:s.BerserkerStance}]}),x({fieldName:"maintainDemoShout",label:"Maintain Demo Shout",labelTooltip:"Keep Demo Shout active on the primary target."}),x({fieldName:"maintainThunderClap",label:"Maintain Thunder Clap",labelTooltip:"Keep Thunder Clap active on the primary target."})]};class Y extends N{constructor(t,e){super(t,e,{cssClass:"warrior-sim-ui",knownIssues:[],epStats:[p.StatStrength,p.StatAgility,p.StatAttackPower,p.StatExpertise,p.StatMeleeHit,p.StatMeleeCrit,p.StatMeleeHaste,p.StatArmorPenetration,p.StatArmor],epPseudoStats:[S.PseudoStatMainHandDps,S.PseudoStatOffHandDps],epReferenceStat:p.StatAttackPower,displayStats:[p.StatHealth,p.StatStamina,p.StatStrength,p.StatAgility,p.StatAttackPower,p.StatExpertise,p.StatMeleeHit,p.StatMeleeCrit,p.StatMeleeHaste,p.StatArmorPenetration,p.StatArmor],modifyDisplayStats:t=>{let e=new b;return t.getInFrontOfTarget()||(e=e.addStat(p.StatExpertise,4*t.getTalents().weaponMastery*M)),{talents:e}},defaults:{gear:J.gear,epWeights:b.fromMap({[p.StatStrength]:2.72,[p.StatAgility]:1.82,[p.StatAttackPower]:1,[p.StatExpertise]:2.55,[p.StatMeleeHit]:.79,[p.StatMeleeCrit]:2.12,[p.StatMeleeHaste]:1.72,[p.StatArmorPenetration]:2.17,[p.StatArmor]:.03},{[S.PseudoStatMainHandDps]:6.29,[S.PseudoStatOffHandDps]:3.58}),consumes:j,rotation:G,talents:I.data,specOptions:U,raidBuffs:T.create({giftOfTheWild:E.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:E.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:E.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:E.TristateEffectImproved,stoneskinTotem:E.TristateEffectImproved}),partyBuffs:y.create({heroicPresence:!1}),individualBuffs:w.create({blessingOfKings:!0,blessingOfMight:E.TristateEffectImproved}),debuffs:C.create({bloodFrenzy:!0,heartOfTheCrusader:!0,mangle:!0,sunderArmor:!0,curseOfWeakness:E.TristateEffectRegular,faerieFire:E.TristateEffectImproved})},playerIconInputs:[V,q,Z],rotationInputs:X,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[L,Q,B,D]},encounterPicker:{showExecuteProportion:!0},presets:{talents:[H,I],gear:[z,J,K,_]}})}}export{F as A,U as D,I as F,_ as P,Y as W,H as a,j as b,G as c,J as d};
//# sourceMappingURL=sim-b8078f4b.chunk.js.map
