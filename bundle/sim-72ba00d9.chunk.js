import{bV as t,T as n,bW as e,bX as a,bY as o,bZ as i,b_ as l,A as s,b$ as r,c0 as m,ak as h,al as d,bO as g,K as u,t as c,u as p,c1 as f,c2 as y,aZ as b,bv as S,G as T,bA as R,bD as C,bF as E,bz as w,bE as A,bp as D,d as v,a2 as O,a as P,ai as B,aJ as W,ag as G,F,aj as I}from"./raid_sim_action-2e58abdd.chunk.js";import{i as H,j as U,c as k,b as M,a as N,k as z,B as j,I as x,l as J,n as _,o as V,p as K,q as Z,r as q,T as L,s as X}from"./individual_sim_ui-35391952.chunk.js";const Y=H({fieldName:"unholyFrenzyTarget",label:"Self Unholy Frenzy",labelTooltip:"Cast Unholy Frenzy on yourself.",extraCssClasses:["within-raid-sim-hide"],getValue:t=>t.getSpecOptions().unholyFrenzyTarget?.targetIndex!=h,setValue:(t,n,e)=>{const a=n.getSpecOptions();a.unholyFrenzyTarget=d.create({targetIndex:e?0:h}),n.setSpecOptions(t,a)},showWhen:t=>t.getTalents().hysteria,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),$=U({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),Q=U({fieldName:"petUptime",label:"Ghoul Uptime (%)",labelTooltip:"Percent of the fight duration for which your ghoul will be on target.",percent:!0,showWhen:t=>t.getTalents().masterOfGhouls}),tt=H({fieldName:"precastGhoulFrenzy",label:"Pre-Cast Ghoul Frenzy",labelTooltip:"Cast Ghoul Frenzy 10 seconds before combat starts.",showWhen:t=>t.getTalents().summonGargoyle&&t.getTalents().ghoulFrenzy,changeEmitter:t=>n.onAny([t.specOptionsChangeEmitter,t.rotationChangeEmitter,t.talentsChangeEmitter])}),nt=H({fieldName:"precastHornOfWinter",label:"Pre-Cast Horn of Winter",labelTooltip:"Precast Horn of Winter for 10 extra runic power before fight."});k({fieldName:"diseaseRefreshDuration",label:"Disease Refresh Duration",labelTooltip:"Minimum duration for refreshing a disease."});const et=M({fieldName:"useDeathAndDecay",label:"Death and Decay",labelTooltip:"Use Death and Decay based rotation.",showWhen:t=>t.getTalents().summonGargoyle&&t.getTalents().scourgeStrike&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])});N({fieldName:"deathAndDecayPrio",label:"Death and Decay Prio",labelTooltip:"<p>Chose how to prioritize death and decay usage:</p>\t\t<p><b>Max Rune Downtime</b>: Prioritizes spending runes over holding them for death and decay</p>\t\t<p><b>Max Dnd Uptime</b>: Prioritizes dnd uptime and can hold runes for longer then rune grace</p>",values:[{name:"Max Rune Downtime",value:t.MaxRuneDowntime},{name:"Max Dnd Uptime",value:t.MaxDndUptime}],showWhen:t=>t.getTalents().summonGargoyle&&(t.getRotation().useDeathAndDecay||!t.getTalents().scourgeStrike)&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])});const at=M({fieldName:"useEmpowerRuneWeapon",label:"Empower Rune Weapon",labelTooltip:"Use Empower Rune Weapon in rotation.",showWhen:t=>!t.getRotation().autoRotation&&t.getRotation().frostRotationType!=m.Custom}),ot=M({fieldName:"useGargoyle",label:"Summon Gargoyle",labelTooltip:"Use Summon Gargoyle in rotation.",changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation}),it=M({fieldName:"holdErwArmy",label:"Hold ERW for AotD",labelTooltip:"Hold Empower Rune Weapon for after Summon Gargoyle to guarantee maximized snapshot for Army of the Dead.",changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>!t.getRotation().autoRotation&&t.getRotation().useEmpowerRuneWeapon&&t.getRotation().armyOfTheDead==o.AsMajorCd}),lt=N({fieldName:"blPresence",label:"Bloodlust Presence",labelTooltip:"Presence during bloodlust.",values:[{name:"Blood",value:e.Blood},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),st=M({fieldName:"btGhoulFrenzy",label:"BT Ghoul Frenzy",labelTooltip:"Use Ghoul Frenzy only with Blood Tap.",showWhen:t=>t.getTalents().ghoulFrenzy&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),rt=N({fieldName:"firstDisease",label:"First Disease",labelTooltip:"Chose which disease to apply first.",values:[{name:"Frost Fever",value:a.FrostFever},{name:"Blood Plague",value:a.BloodPlague}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),mt=N({fieldName:"armyOfTheDead",label:"Army of the Dead",labelTooltip:"Chose how to use Army of the Dead.",values:[{name:"Do not use",value:o.DoNotUse},{name:"Pre pull",value:o.PreCast},{name:"As Major CD",value:o.AsMajorCd}],showWhen:t=>!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),ht=N({fieldName:"startingPresence",label:"Starting Presence",labelTooltip:"Chose the presence you start combat in.",values:[{name:"Blood",value:e.Blood},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),dt=N({fieldName:"presence",label:"Fight Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:e.Blood},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),gt=N({fieldName:"bloodRuneFiller",label:"Blood Rune Filler",labelTooltip:"Chose what to spend your free blood runes on.",values:[{name:"Blood Strike",value:i.BloodStrike},{name:"Blood Boil",value:i.BloodBoil}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),ut=N({fieldName:"bloodTap",label:"Blood Tap",labelTooltip:"Chose what to spend your Blood Tap on.",values:[{name:"Ghoul Frenzy",value:l.GhoulFrenzy},{name:"Icy Touch",value:l.IcyTouch},{name:"Blood Strike",value:l.BloodStrikeBT},{name:"Blood Boil",value:l.BloodBoilBT}],showWhen:t=>t.getTalents().summonGargoyle&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),ct=M({fieldName:"useAms",label:"Use AMS",labelTooltip:"Use AMS around predicted damage for a RP gain.",showWhen:t=>t.getTalents().howlingBlast&&!t.getRotation().autoRotation&&t.getRotation().frostRotationType!=m.Custom,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),pt=k({fieldName:"avgAmsSuccessRate",label:"Avg AMS Success %",labelTooltip:"Chance for damage to be taken during the 5 second window of AMS.",showWhen:t=>1==t.getRotation().useAms&&!t.getRotation().autoRotation&&t.getTalents().howlingBlast&&t.getRotation().frostRotationType!=m.Custom,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),ft=k({fieldName:"avgAmsHit",label:"Avg AMS Hit",labelTooltip:"How much on average (+-10%) the character is hit for when AMS is successful.",showWhen:t=>1==t.getRotation().useAms&&!t.getRotation().autoRotation&&t.getTalents().howlingBlast&&t.getRotation().frostRotationType!=m.Custom,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),yt=k({fieldName:"oblitDelayDuration",label:"Oblit Delay (ms)",labelTooltip:"How long a FS/HB/HW can delay a Oblit by.",showWhen:t=>t.getTalents().howlingBlast&&!t.getRotation().autoRotation&&t.getRotation().frostRotationType!=m.Custom,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),bt=M({fieldName:"autoRotation",label:"Automatic Rotation",labelTooltip:"Have sim automatically adjust rotation based on the scenario. This is still in development and currently only works for Unholy.",changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>!t.getTalents().howlingBlast}),St=M({fieldName:"desyncRotation",label:"Use Desync Rotation",labelTooltip:"Use the Desync Rotation.",showWhen:t=>t.getTalents().howlingBlast&&!t.getRotation().autoRotation&&t.sim.getShowExperimental(),changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Tt=N({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:e.Blood},{name:"Frost",value:e.Frost},{name:"Unholy",value:e.Unholy}],showWhen:t=>t.getTalents().howlingBlast&&!t.getRotation().autoRotation,changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),Rt=z({fieldName:"frostCustomRotation",numColumns:4,values:[{actionId:s.fromSpellId(49909),value:r.CustomIcyTouch},{actionId:s.fromSpellId(49921),value:r.CustomPlagueStrike},{actionId:s.fromSpellId(50842),value:r.CustomPestilence},{actionId:s.fromSpellId(51425),value:r.CustomObliterate},{actionId:s.fromSpellId(51411),value:r.CustomHowlingBlast},{actionId:s.fromSpellId(59057),value:r.CustomHowlingBlastRime},{actionId:s.fromSpellId(49941),value:r.CustomBloodBoil},{actionId:s.fromSpellId(49930),value:r.CustomBloodStrike},{actionId:s.fromSpellId(49938),value:r.CustomDeathAndDecay},{actionId:s.fromSpellId(57623),value:r.CustomHornOfWinter},{actionId:s.fromSpellId(51271),value:r.CustomUnbreakableArmor},{actionId:s.fromSpellId(45529),value:r.CustomBloodTap},{actionId:s.fromSpellId(47568),value:r.CustomEmpoweredRuneWeapon},{actionId:s.fromSpellId(55268),value:r.CustomFrostStrike}],showWhen:t=>t.getRotation().frostRotationType==m.Custom}),Ct={inputs:[N({fieldName:"frostRotationType",label:"Rotation Type",values:[{name:"Single Target",value:m.SingleTarget},{name:"Custom",value:m.Custom}],changeEmitter:t=>n.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter]),showWhen:t=>t.getTalents().howlingBlast&&!t.getRotation().autoRotation}),Tt,bt,st,ot,at,it,ut,mt,rt,ht,lt,dt,gt,et,yt,ct,pt,ft,St,Rt]},Et={name:"Frost BL",data:g.create({talentsString:"23050005-32005350352203012300033101351",glyphs:u.create({major1:c.GlyphOfObliterate,major2:c.GlyphOfFrostStrike,major3:c.GlyphOfDisease,minor1:p.GlyphOfHornOfWinter,minor2:p.GlyphOfPestilence,minor3:p.GlyphOfRaiseDead})})},wt={name:"Frost UH",data:g.create({talentsString:"01-32002350342203012300033101351-230200305003",glyphs:u.create({major1:c.GlyphOfObliterate,major2:c.GlyphOfFrostStrike,major3:c.GlyphOfDisease,minor1:p.GlyphOfHornOfWinter,minor2:p.GlyphOfPestilence,minor3:p.GlyphOfRaiseDead})})},At={name:"Unholy DW",data:g.create({talentsString:"-320043500002-2300303050032152000150013133051",glyphs:u.create({major1:c.GlyphOfTheGhoul,major2:c.GlyphOfDarkDeath,major3:c.GlyphOfDeathAndDecay,minor1:p.GlyphOfHornOfWinter,minor2:p.GlyphOfPestilence,minor3:p.GlyphOfRaiseDead})})},Dt={name:"Unholy 2H",data:g.create({talentsString:"-320050500002-2300303150032152000150013133151",glyphs:u.create({major1:c.GlyphOfTheGhoul,major2:c.GlyphOfDarkDeath,major3:c.GlyphOfIcyTouch,minor1:p.GlyphOfHornOfWinter,minor2:p.GlyphOfPestilence,minor3:p.GlyphOfRaiseDead})})};g.create({talentsString:"2305020530003303231023101351--230220305003",glyphs:u.create({major1:c.GlyphOfDancingRuneWeapon,major2:c.GlyphOfDeathStrike,major3:c.GlyphOfDarkDeath,minor1:p.GlyphOfHornOfWinter,minor2:p.GlyphOfPestilence,minor3:p.GlyphOfRaiseDead})});const vt=f.create({useDeathAndDecay:!0,btGhoulFrenzy:!1,refreshHornOfWinter:!1,useGargoyle:!0,useEmpowerRuneWeapon:!0,holdErwArmy:!1,armyOfTheDead:o.AsMajorCd,startingPresence:e.Unholy,blPresence:e.Blood,presence:e.Blood,bloodRuneFiller:i.BloodBoil,useAms:!1,oblitDelayDuration:1e3}),Ot=y.create({startingRunicPower:0,petUptime:1,precastGhoulFrenzy:!1,precastHornOfWinter:!0,unholyFrenzyTarget:d.create({targetIndex:h})}),Pt=f.create({useDeathAndDecay:!1,btGhoulFrenzy:!1,refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,startingPresence:e.Blood,presence:e.Blood,bloodRuneFiller:i.BloodBoil,useAms:!1,avgAmsSuccessRate:1,avgAmsHit:1e4,oblitDelayDuration:1e3,frostRotationType:m.SingleTarget,frostCustomRotation:b.create({spells:[S.create({spell:r.CustomDeathAndDecay}),S.create({spell:r.CustomIcyTouch}),S.create({spell:r.CustomPlagueStrike}),S.create({spell:r.CustomPestilence}),S.create({spell:r.CustomHowlingBlastRime}),S.create({spell:r.CustomHowlingBlast}),S.create({spell:r.CustomBloodBoil}),S.create({spell:r.CustomObliterate}),S.create({spell:r.CustomFrostStrike})]})}),Bt=y.create({startingRunicPower:0,petUptime:1,precastHornOfWinter:!0,unholyFrenzyTarget:d.create({targetIndex:h})});f.create({refreshHornOfWinter:!1,useEmpowerRuneWeapon:!0,startingPresence:e.Blood,bloodRuneFiller:i.BloodStrike,useAms:!1}),y.create({startingRunicPower:0,petUptime:1,precastHornOfWinter:!0,unholyFrenzyTarget:d.create({targetIndex:h})});const Wt={},Gt=T.create({flask:R.FlaskOfEndlessRage,food:C.FoodDragonfinFilet,defaultPotion:E.PotionOfSpeed,petFood:w.PetFoodSpicedMammothTreats,prepopPotion:E.PotionOfSpeed,thermalSapper:!0,fillerExplosive:A.ExplosiveSaroniteBomb}),Ft={name:"Pre-Raid 2H Unholy",toolbar:j,enableWhen:t=>2==t.getTalentTree()&&0==t.getTalents().nervesOfColdSteel,gear:D.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41400,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37397\n\t\t},\n\t\t{\n\t\t\t"id": 37627,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 39617,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41355,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39618,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40688,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37193,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 44935\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 41257,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 40867\n\t\t}\n  ]}')},It={name:"P1 2H Unholy",toolbar:j,enableWhen:t=>2==t.getTalentTree()&&0==t.getTalents().nervesOfColdSteel,gear:D.fromJsonString('{ "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41400,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40552,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40038,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40556,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 39401\n\t\t},\n\t\t{\n\t\t\t"id": 40075\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40384,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 40207\n\t\t}\n  ]}')},Ht={name:"Pre-Raid DW Unholy",toolbar:j,enableWhen:t=>2==t.getTalentTree()&&t.getTalents().nervesOfColdSteel>0,gear:D.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41400,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37397\n\t\t},\n\t\t{\n\t\t\t"id": 37627,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 39617,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41355,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39618,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40688,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37193,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 44935\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 41383,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40703,\n\t\t\t"enchant": 3790\n\t\t},\n\t\t{\n\t\t\t"id": 40867\n\t\t}\n  ]}')},Ut={name:"P1 DW Unholy",toolbar:j,enableWhen:t=>2==t.getTalentTree()&&t.getTalents().nervesOfColdSteel>0,gear:D.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39421\n\t\t},\n\t\t{\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40347,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40294,\n\t\t\t"enchant": 3823\n\t\t},\n\t\t{\n\t\t\t"id": 39706,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39401\n\t\t},\n\t\t{\n\t\t\t"id": 40075\n\t\t},\n\t\t{\n\t\t\t"id": 37390\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40402,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40491,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 42620\n\t\t}\n  ]}')},kt={name:"Pre-Raid Frost",tooltip:j,enableWhen:t=>1==t.getTalentTree(),gear:D.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 41386,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42645,\n\t\t\t"gems": [\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 34388,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37647,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 39617,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 41355,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39618,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37171,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37193,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44306,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 42642,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44935\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 41383,\n\t\t\t"enchant": 3370\n\t\t},\n\t\t{\n\t\t\t"id": 43611,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40715\n\t\t}\n  ]}')},Mt={name:"P1 Frost",tooltip:j,enableWhen:t=>1==t.getTalentTree(),gear:D.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40552,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40556,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 39401\n\t\t},\n\t\t{\n\t\t\t"id": 40075\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40189,\n\t\t\t"enchant": 3370\n\t\t},\n\t\t{\n\t\t\t"id": 40189,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40207\n\t\t}\n  ]}')},Nt={name:"P1 Frost Sub Unh",tooltip:j,enableWhen:t=>1==t.getTalentTree(),gear:D.fromJsonString('{   "items": [\n\t\t{\n\t\t\t"id": 44006,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40557,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3831\n\t\t},\n\t\t{\n\t\t\t"id": 40550,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40330,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40552,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t40058,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40278,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t42142\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40556,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t42142,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40591,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 39401\n\t\t},\n\t\t{\n\t\t\t"id": 40075\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40189,\n\t\t\t"enchant": 3370\n\t\t},\n\t\t{\n\t\t\t"id": 40189,\n\t\t\t"enchant": 3368\n\t\t},\n\t\t{\n\t\t\t"id": 40207\n\t\t}\n  ]}')};class zt extends x{constructor(t,n){super(t,n,{cssClass:"deathknight-sim-ui",knownIssues:["Blood dps is not implemented.","Frost Rotation logic is not fully tuned yet.","Army of the Dead scaling needs to be fine-tuned."],epStats:[v.StatStrength,v.StatArmor,v.StatAgility,v.StatAttackPower,v.StatExpertise,v.StatMeleeHit,v.StatMeleeCrit,v.StatMeleeHaste,v.StatArmorPenetration,v.StatSpellHit,v.StatSpellCrit,v.StatSpellHaste],epPseudoStats:[O.PseudoStatMainHandDps,O.PseudoStatOffHandDps],epReferenceStat:v.StatAttackPower,displayStats:[v.StatHealth,v.StatArmor,v.StatStrength,v.StatAgility,v.StatSpellHit,v.StatSpellCrit,v.StatAttackPower,v.StatMeleeHit,v.StatMeleeCrit,v.StatMeleeHaste,v.StatArmorPenetration,v.StatExpertise],defaults:{gear:Ut.gear,epWeights:P.fromMap({[v.StatStrength]:3.22,[v.StatAgility]:.62,[v.StatArmor]:.01,[v.StatAttackPower]:1,[v.StatExpertise]:1.13,[v.StatMeleeHaste]:1.85,[v.StatMeleeHit]:1.92,[v.StatMeleeCrit]:.76,[v.StatArmorPenetration]:.77,[v.StatSpellHit]:.8,[v.StatSpellCrit]:.34},{[O.PseudoStatMainHandDps]:3.1,[O.PseudoStatOffHandDps]:1.79}),consumes:Gt,rotation:vt,talents:At.data,specOptions:Ot,raidBuffs:B.create({giftOfTheWild:W.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:W.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:W.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:W.TristateEffectImproved,stoneskinTotem:W.TristateEffectImproved,moonkinAura:W.TristateEffectRegular,wrathOfAirTotem:!0,powerWordFortitude:W.TristateEffectImproved}),partyBuffs:G.create({heroicPresence:!1}),individualBuffs:F.create({blessingOfKings:!0,blessingOfMight:W.TristateEffectImproved}),debuffs:I.create({bloodFrenzy:!0,faerieFire:W.TristateEffectImproved,sunderArmor:!0,ebonPlaguebringer:!0,mangle:!0,heartOfTheCrusader:!0,shadowMastery:!0})},playerIconInputs:[],rotationInputs:Ct,petConsumeInputs:[J],includeBuffDebuffInputs:[_,V],excludeBuffDebuffInputs:[K,Z,q],otherInputs:{inputs:[Y,$,Q,tt,nt,L,X]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[Et,wt,At,Dt],gear:[kt,Mt,Nt,Ht,Ft,Ut,It]}})}}export{zt as D,Et as F,Wt as O,Mt as P,At as U,Pt as a,Bt as b,Gt as c,vt as d,Ot as e,Ut as f};
//# sourceMappingURL=sim-72ba00d9.chunk.js.map
