import{A as t,ak as e,al as a,cw as n,T as i,cx as s,bO as r,K as o,D as l,e as d,cy as c,cz as m,G as p,bA as g,bD as f,bF as h,bp as u,d as b,a2 as S,a as T,ai as y,aJ as w,ag as v,F as R,aj as O}from"./raid_sim_action-2e58abdd.chunk.js";import{m as k,j as A,i as W,b as M,a as P,c as E,B,I as F,J as N,E as I,K as x,T as C,s as H}from"./individual_sim_ui-35391952.chunk.js";k({fieldName:"innervateTarget",id:t.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:t=>t.getSpecOptions().innervateTarget?.targetIndex!=e,setValue:(t,n,i)=>{const s=n.getSpecOptions();s.innervateTarget=a.create({targetIndex:i?0:e}),n.setSpecOptions(t,s)}});const j=A({fieldName:"latencyMs",label:"Latency",labelTooltip:"Player latency, in milliseconds. Adds a delay to actions that cannot be spell queued."}),D=W({fieldName:"prepopOoc",label:"Pre-pop Clearcasting",labelTooltip:"Start fight with clearcasting active",showWhen:t=>t.getTalents().omenOfClarity,changeEmitter:t=>i.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),G=W({fieldName:"prePopBerserk",label:"Pre-pop Berserk",labelTooltip:"Pre pop berserk 1 sec before fight",showWhen:t=>t.getTalents().berserk,changeEmitter:t=>i.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),U=W({fieldName:"assumeBleedActive",label:"Assume Bleed Always Active",labelTooltip:"Assume bleed always exists for 'Rend and Tear' calculations. Otherwise will only calculate based on own rip/rake/lacerate."}),z={inputs:[M({fieldName:"maintainFaerieFire",label:"Maintain Faerie Fire",labelTooltip:"Use Faerie Fire whenever it is not active on the target."}),P({fieldName:"bearWeaveType",label:"Bearweaving",values:[{name:"None",value:n.None},{name:"Mangle",value:n.Mangle},{name:"Lacerate",value:n.Lacerate}]}),M({fieldName:"snekWeave",label:"Snek Weave",labelTooltip:"Reset swing timer using albino snek, when going from bear to cat",showWhen:t=>t.getRotation().bearWeaveType!=n.None}),M({fieldName:"flowerWeave",label:"Flower Weave",labelTooltip:"Fish for clearcasting during rotation with gotw",showWhen:t=>t.getRotation().bearWeaveType==n.None}),E({fieldName:"raidTargets",label:"GotW Raid Targets",labelTooltip:"Raid size to assume for clearcast proc chance (can include pets as well, so 25 man raid potentically can be ~30)",showWhen:t=>t.getRotation().bearWeaveType==n.None&&1==t.getRotation().flowerWeave}),E({fieldName:"hotUptime",label:"Revitalize Hot Uptime",labelTooltip:"Hot uptime percentage to assume when theorizing energy gains",percent:!0,showWhen:t=>1==t.getRotation().useBite&&t.getRotation().biteModeType==s.Analytical}),E({fieldName:"maxRoarOffset",label:"Roar Offset",labelTooltip:"Targeted offset in Rip/Roar timings"}),M({fieldName:"useBite",label:"Bite during rotation",labelTooltip:"Use bite during rotation rather than just at end"}),M({fieldName:"useRake",label:"Use Rake",labelTooltip:"Use rake during rotation"}),E({fieldName:"biteTime",label:"Bite Time",labelTooltip:"Min seconds on Rip/Roar to bite",showWhen:t=>1==t.getRotation().useBite&&t.getRotation().biteModeType==s.Emperical})]},J={name:"Standard",data:r.create({talentsString:"-503202132322010053120230310511-205503012",glyphs:o.create({major1:l.GlyphOfRip,major2:l.GlyphOfSavageRoar,major3:l.GlyphOfShred,minor1:d.GlyphOfDash,minor2:d.GlyphOfTheWild,minor3:d.GlyphOfUnburdenedRebirth})})},L=c.create({bearWeaveType:n.Lacerate,minCombosForRip:5,minCombosForBite:5,useRake:!0,useBite:!0,mangleSpam:!1,biteModeType:s.Emperical,biteTime:10,berserkBiteThresh:30,powerbear:!1,maxRoarOffset:14,maintainFaerieFire:!0,hotUptime:0,snekWeave:!1,flowerWeave:!1,raidTargets:30}),_=m.create({latencyMs:100,prepopOoc:!0,assumeBleedActive:!1}),K=p.create({flask:g.FlaskOfEndlessRage,food:f.FoodDragonfinFilet,defaultPotion:h.PotionOfSpeed}),V={name:"PreRaid",tooltip:B,gear:u.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 42550,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40678\n\t\t},\n\t\t{\n\t\t\t"id": 37139,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37840,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 37219,\n\t\t\t"enchant": 3832\n\t\t},\n\t\t{\n\t\t\t"id": 44203,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37409,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40694,\n\t\t\t"gems": [\n\t\t\t\t49110,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 37644,\n\t\t\t"enchant": 3823\n\t\t},\n\t\t{\n\t\t\t"id": 44297,\n\t\t\t"enchant": 3606\n\t\t},\n\t\t{\n\t\t\t"id": 37642\n\t\t},\n\t\t{\n\t\t\t"id": 37624\n\t\t},\n\t\t{\n\t\t\t"id": 40684\n\t\t},\n\t\t{\n\t\t\t"id": 37166\n\t\t},\n\t\t{\n\t\t\t"id": 37883,\n\t\t\t"enchant": 3827\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 40713\n\t\t}\n  ]}')},q={name:"P1 Preset",tooltip:B,gear:u.fromJsonString('{"items": [\n\t\t{\n\t\t\t"id": 40473,\n\t\t\t"enchant": 3817,\n\t\t\t"gems": [\n\t\t\t\t41398,\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44664,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40494,\n\t\t\t"enchant": 3808,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40403,\n\t\t\t"enchant": 3605\n\t\t},\n\t\t{\n\t\t\t"id": 40539,\n\t\t\t"enchant": 3832,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 39765,\n\t\t\t"enchant": 3845,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40541,\n\t\t\t"enchant": 3604,\n\t\t\t"gems": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40205,\n\t\t\t"gems": [\n\t\t\t\t39996\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 44011,\n\t\t\t"enchant": 3823,\n\t\t\t"gems": [\n\t\t\t\t39996,\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40243,\n\t\t\t"enchant": 3606,\n\t\t\t"gems": [\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"id": 40474\n\t\t},\n\t\t{\n\t\t\t"id": 40717\n\t\t},\n\t\t{\n\t\t\t"id": 42987\n\t\t},\n\t\t{\n\t\t\t"id": 40256\n\t\t},\n\t\t{\n\t\t\t"id": 40388,\n\t\t\t"enchant": 3789\n\t\t},\n\t\t{},\n\t\t{\n\t\t\t"id": 39757\n\t\t}\n\t]}')};class Q extends F{constructor(t,e){super(t,e,{cssClass:"feral-druid-sim-ui",knownIssues:[],warnings:[],epStats:[b.StatStrength,b.StatAgility,b.StatAttackPower,b.StatMeleeHit,b.StatMeleeCrit,b.StatMeleeHaste,b.StatArmorPenetration,b.StatExpertise],epPseudoStats:[S.PseudoStatMainHandDps],epReferenceStat:b.StatAttackPower,displayStats:[b.StatHealth,b.StatStrength,b.StatAgility,b.StatAttackPower,b.StatMeleeHit,b.StatMeleeCrit,b.StatMeleeHaste,b.StatArmorPenetration,b.StatExpertise,b.StatMana],defaults:{gear:q.gear,epWeights:T.fromMap({[b.StatStrength]:2.4,[b.StatAgility]:2.39,[b.StatAttackPower]:1,[b.StatMeleeHit]:2.51,[b.StatMeleeCrit]:2.23,[b.StatMeleeHaste]:1.83,[b.StatArmorPenetration]:2.08,[b.StatExpertise]:2.44},{[S.PseudoStatMainHandDps]:0}),consumes:K,rotation:L,talents:J.data,specOptions:_,raidBuffs:y.create({arcaneBrilliance:!0,giftOfTheWild:w.TristateEffectImproved,bloodlust:!0,manaSpringTotem:w.TristateEffectRegular,strengthOfEarthTotem:w.TristateEffectImproved,battleShout:w.TristateEffectImproved,unleashedRage:!0,icyTalons:!0,swiftRetribution:!0,sanctifiedRetribution:!0}),partyBuffs:v.create({}),individualBuffs:R.create({blessingOfKings:!0,blessingOfMight:w.TristateEffectImproved}),debuffs:O.create({judgementOfWisdom:!0,bloodFrenzy:!0,giftOfArthas:!0,exposeArmor:!0,faerieFire:w.TristateEffectImproved,sunderArmor:!0,curseOfWeakness:w.TristateEffectRegular,heartOfTheCrusader:!0})},playerIconInputs:[],rotationInputs:z,includeBuffDebuffInputs:[N,I,x],excludeBuffDebuffInputs:[],otherInputs:{inputs:[j,D,G,U,C,H]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[J],gear:[V,q]}})}}export{L as D,Q as F,q as P,J as S,_ as a,K as b};
//# sourceMappingURL=sim-3aad1c56.chunk.js.map
