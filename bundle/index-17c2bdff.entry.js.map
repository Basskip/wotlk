{"version":3,"file":"index-17c2bdff.entry.js","sources":["../../../ui/core/components/raid_target_picker.ts","../../../ui/raid/presets.ts","../../../ui/raid/buff_bot.ts","../../../ui/raid/assignments_picker.ts","../../../ui/raid/blessings_picker.ts","../../../ui/raid/raid_picker.ts","../../../ui/raid/tanks_picker.ts","../../../ui/raid/import_export.ts","../../../ui/raid/raid_sim_ui.ts","../../../ui/raid/index.ts"],"sourcesContent":["import { Component } from '../components/component.js';\nimport { Input, InputConfig } from '../components/input.js';\nimport { Player } from '../player.js';\nimport { Raid } from '../raid.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { RaidTarget } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { newRaidTarget, emptyRaidTarget } from '../proto_utils/utils.js';\n\ndeclare var tippy: any;\n\nexport interface RaidTargetPickerConfig<ModObject> extends InputConfig<ModObject, RaidTarget> {\n\tnoTargetLabel: string,\n\tcompChangeEmitter: TypedEvent<void>,\n}\n\nexport interface RaidTargetElemOption {\n\ticonUrl: string,\n\ttext: string,\n\tcolor: string,\n\tisDropdown: boolean,\n};\n\nexport interface RaidTargetOption extends RaidTargetElemOption {\n\tvalue: Player<any> | null,\n};\n\n// Dropdown menu for selecting a player.\nexport class RaidTargetPicker<ModObject> extends Input<ModObject, RaidTarget> {\n\tprivate readonly config: RaidTargetPickerConfig<ModObject>;\n\tprivate readonly raid: Raid;\n\tprivate readonly noTargetOption: RaidTargetOption;\n\n\tprivate curPlayer: Player<any> | null;\n\tprivate curRaidTarget: RaidTarget;\n\n\tprivate currentOptions: Array<RaidTargetOption>;\n\n\tprivate readonly buttonElem: HTMLElement;\n\tprivate readonly dropdownElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, raid: Raid, modObj: ModObject, config: RaidTargetPickerConfig<ModObject>) {\n\t\tsuper(parent, 'raid-target-picker-root', modObj, config);\n\t\tthis.rootElem.classList.add('dropdown-root');\n\t\tthis.config = config;\n\t\tthis.raid = raid;\n\t\tthis.curPlayer = this.raid.getPlayerFromRaidTarget(config.getValue(modObj));\n\t\tthis.curRaidTarget = this.getInputValue();\n\n\t\tthis.noTargetOption = {\n\t\t\ticonUrl: '',\n\t\t\ttext: config.noTargetLabel,\n\t\t\tcolor: 'black',\n\t\t\tvalue: null,\n\t\t\tisDropdown: true,\n\t\t};\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"dropdown-button raid-target-picker-button\"></div>\n\t\t\t<div class=\"dropdown-panel raid-target-picker-dropdown\"></div>\n    `;\n\n\t\tthis.buttonElem = this.rootElem.getElementsByClassName('raid-target-picker-button')[0] as HTMLElement;\n\t\tthis.dropdownElem = this.rootElem.getElementsByClassName('raid-target-picker-dropdown')[0] as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tthis.currentOptions = [];\n\t\tthis.updateOptions(TypedEvent.nextEventID());\n\t\tconfig.compChangeEmitter.on(eventID => {\n\t\t\tthis.updateOptions(eventID);\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tprivate makeTargetOptions(): Array<RaidTargetOption> {\n\t\tconst playerOptions = this.raid.getPlayers().filter(player => player != null).map(player => {\n\t\t\treturn {\n\t\t\t\ticonUrl: player!.getTalentTreeIcon(),\n\t\t\t\ttext: player!.getLabel(),\n\t\t\t\tcolor: player!.getClassColor(),\n\t\t\t\tisDropdown: true,\n\t\t\t\tvalue: player,\n\t\t\t};\n\t\t});\n\t\treturn [this.noTargetOption].concat(playerOptions);\n\t}\n\n\tprivate updateOptions(eventID: EventID) {\n\t\tthis.currentOptions = this.makeTargetOptions();\n\n\t\tthis.dropdownElem.innerHTML = '';\n\t\tthis.currentOptions.forEach(option => this.dropdownElem.appendChild(this.makeOption(option)));\n\n\t\tconst prevRaidTarget = this.curRaidTarget;\n\t\tthis.curRaidTarget = this.getInputValue();\n\t\tif (!RaidTarget.equals(prevRaidTarget, this.curRaidTarget)) {\n\t\t\tthis.inputChanged(eventID);\n\t\t} else {\n\t\t\tthis.setInputValue(this.curRaidTarget);\n\t\t}\n\t}\n\n\tprivate makeOption(data: RaidTargetOption): HTMLElement {\n\t\tconst option = RaidTargetPicker.makeOptionElem(data);\n\n\t\toption.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\tthis.curPlayer = data.value;\n\t\t\tthis.curRaidTarget = this.getInputValue();\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\n\t\treturn option;\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.buttonElem;\n\t}\n\n\tgetInputValue(): RaidTarget {\n\t\tif (this.curPlayer) {\n\t\t\treturn this.curPlayer.makeRaidTarget();\n\t\t} else {\n\t\t\treturn emptyRaidTarget();\n\t\t}\n\t}\n\n\tsetInputValue(newValue: RaidTarget) {\n\t\tthis.curRaidTarget = RaidTarget.clone(newValue);\n\t\tthis.curPlayer = this.raid.getPlayerFromRaidTarget(this.curRaidTarget);\n\n\t\tconst optionData = this.currentOptions.find(optionData => optionData.value == this.curPlayer);\n\t\tif (!optionData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.buttonElem.innerHTML = '';\n\t\tthis.buttonElem.appendChild(RaidTargetPicker.makeOptionElem(optionData));\n\t}\n\n\tstatic makeOptionElem(data: RaidTargetElemOption): HTMLElement {\n\t\tconst optionContainer = document.createElement('div');\n\t\toptionContainer.classList.add('dropdown-option-container');\n\n\t\tconst option = document.createElement('div');\n\t\toption.classList.add('raid-target-picker-option');\n\t\toptionContainer.appendChild(option);\n\t\tif (data.isDropdown) {\n\t\t\toption.classList.add('dropdown-option');\n\t\t}\n\n\t\tif (data.color) {\n\t\t\toption.style.backgroundColor = data.color;\n\t\t}\n\n\t\tif (data.iconUrl) {\n\t\t\tconst icon = document.createElement('img');\n\t\t\ticon.src = data.iconUrl;\n\t\t\ticon.classList.add('raid-target-picker-icon');\n\t\t\toption.appendChild(icon);\n\t\t}\n\n\t\tif (data.text) {\n\t\t\tconst label = document.createElement('span');\n\t\t\tlabel.textContent = data.text;\n\t\t\tlabel.classList.add('raid-target-picker-label');\n\t\t\toption.appendChild(label);\n\t\t}\n\n\t\treturn optionContainer;\n\t}\n}\n","import { IndividualSimUI, OtherDefaults } from '../core/individual_sim_ui.js';\nimport { Raid as RaidProto } from '../core/proto/api.js';\nimport { Party as PartyProto } from '../core/proto/api.js';\nimport { Class } from '../core/proto/common.js';\nimport { Consumes } from '../core/proto/common.js';\n\nimport { Encounter as EncounterProto } from '../core/proto/common.js';\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Race } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js';\nimport { Faction } from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport { SpecOptions } from '../core/proto_utils/utils.js';\nimport { SpecRotation } from '../core/proto_utils/utils.js';\nimport { playerToSpec } from '../core/proto_utils/utils.js';\nimport { specIconsLarge } from '../core/proto_utils/utils.js';\nimport { specNames } from '../core/proto_utils/utils.js';\nimport { talentTreeIcons } from '../core/proto_utils/utils.js';\nimport { NO_TARGET } from '../core/proto_utils/utils.js';\nimport { Player } from '../core/player.js';\n\nimport { BuffBot } from './buff_bot.js';\n\nimport * as DeathknightPresets from '../deathknight/presets.js';\nimport * as BalanceDruidPresets from '../balance_druid/presets.js';\nimport * as FeralDruidPresets from '../feral_druid/presets.js';\nimport * as FeralTankDruidPresets from '../feral_tank_druid/presets.js';\nimport * as ElementalShamanPresets from '../elemental_shaman/presets.js';\nimport * as EnhancementShamanPresets from '../enhancement_shaman/presets.js';\nimport * as HunterPresets from '../hunter/presets.js';\nimport * as MagePresets from '../mage/presets.js';\nimport * as RoguePresets from '../rogue/presets.js';\nimport * as RetributionPaladinPresets from '../retribution_paladin/presets.js';\nimport * as ProtectionPaladinPresets from '../protection_paladin/presets.js';\nimport * as ShadowPriestPresets from '../shadow_priest/presets.js';\nimport * as SmitePriestPresets from '../smite_priest/presets.js';\nimport * as WarriorPresets from '../warrior/presets.js';\nimport * as ProtectionWarriorPresets from '../protection_warrior/presets.js';\nimport * as WarlockPresets from '../warlock/presets.js';\n\n\nimport { BalanceDruidSimUI } from '../balance_druid/sim.js';\nimport { FeralDruidSimUI } from '../feral_druid/sim.js';\nimport { FeralTankDruidSimUI } from '../feral_tank_druid/sim.js';\nimport { EnhancementShamanSimUI } from '../enhancement_shaman/sim.js';\nimport { ElementalShamanSimUI } from '../elemental_shaman/sim.js';\nimport { HunterSimUI } from '../hunter/sim.js';\nimport { MageSimUI } from '../mage/sim.js';\nimport { RogueSimUI } from '../rogue/sim.js';\nimport { RetributionPaladinSimUI } from '../retribution_paladin/sim.js';\nimport { ProtectionPaladinSimUI } from '../protection_paladin/sim.js';\nimport { ShadowPriestSimUI } from '../shadow_priest/sim.js';\nimport { SmitePriestSimUI } from '../smite_priest/sim.js';\nimport { WarriorSimUI } from '../warrior/sim.js';\nimport { ProtectionWarriorSimUI } from '../protection_warrior/sim.js';\nimport { WarlockSimUI } from '../warlock/sim.js';\nimport { DeathknightSimUI } from '../deathknight/sim.js';\n\nexport const specSimFactories: Partial<Record<Spec, (parentElem: HTMLElement, player: Player<any>) => IndividualSimUI<any>>> = {\n\t[Spec.SpecDeathknight]: (parentElem: HTMLElement, player: Player<any>) => new DeathknightSimUI(parentElem, player),\n\t[Spec.SpecBalanceDruid]: (parentElem: HTMLElement, player: Player<any>) => new BalanceDruidSimUI(parentElem, player),\n\t[Spec.SpecFeralDruid]: (parentElem: HTMLElement, player: Player<any>) => new FeralDruidSimUI(parentElem, player),\n\t[Spec.SpecFeralTankDruid]: (parentElem: HTMLElement, player: Player<any>) => new FeralTankDruidSimUI(parentElem, player),\n\t[Spec.SpecElementalShaman]: (parentElem: HTMLElement, player: Player<any>) => new ElementalShamanSimUI(parentElem, player),\n\t[Spec.SpecEnhancementShaman]: (parentElem: HTMLElement, player: Player<any>) => new EnhancementShamanSimUI(parentElem, player),\n\t[Spec.SpecHunter]: (parentElem: HTMLElement, player: Player<any>) => new HunterSimUI(parentElem, player),\n\t[Spec.SpecMage]: (parentElem: HTMLElement, player: Player<any>) => new MageSimUI(parentElem, player),\n\t[Spec.SpecRogue]: (parentElem: HTMLElement, player: Player<any>) => new RogueSimUI(parentElem, player),\n\t[Spec.SpecRetributionPaladin]: (parentElem: HTMLElement, player: Player<any>) => new RetributionPaladinSimUI(parentElem, player),\n\t[Spec.SpecProtectionPaladin]: (parentElem: HTMLElement, player: Player<any>) => new ProtectionPaladinSimUI(parentElem, player),\n\t[Spec.SpecShadowPriest]: (parentElem: HTMLElement, player: Player<any>) => new ShadowPriestSimUI(parentElem, player),\n\t[Spec.SpecSmitePriest]: (parentElem: HTMLElement, player: Player<any>) => new SmitePriestSimUI(parentElem, player),\n\t[Spec.SpecWarrior]: (parentElem: HTMLElement, player: Player<any>) => new WarriorSimUI(parentElem, player),\n\t[Spec.SpecProtectionWarrior]: (parentElem: HTMLElement, player: Player<any>) => new ProtectionWarriorSimUI(parentElem, player),\n\t[Spec.SpecWarlock]: (parentElem: HTMLElement, player: Player<any>) => new WarlockSimUI(parentElem, player),\n};\n\n// Configuration necessary for creating new players.\nexport interface PresetSpecSettings<SpecType extends Spec> {\n\tspec: Spec,\n\trotation: SpecRotation<SpecType>,\n\ttalents: SavedTalents,\n\tspecOptions: SpecOptions<SpecType>,\n\tconsumes: Consumes,\n\n\tdefaultName: string,\n\tdefaultFactionRaces: Record<Faction, Race>,\n\tdefaultGear: Record<Faction, Record<number, EquipmentSpec>>,\n\totherDefaults?: OtherDefaults,\n\n\ttooltip: string,\n\ticonUrl: string,\n}\n\n// Configuration necessary for creating new BuffBots.\nexport interface BuffBotSettings {\n\t// The value of this field must never change, to preserve local storage data.\n\tbuffBotId: string,\n\n\t// Set this to true to remove a buff bot option after launching a real sim.\n\t// This will allow users with saved settings to properly load the buffbot but\n\t// also remove the buffbot as an option from the UI.\n\tdeprecated?: boolean,\n\n\tspec: Spec,\n\tname: string,\n\ttooltip: string,\n\ticonUrl: string,\n\n\t// Callback to apply buffs from this buff bot.\n\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => void,\n}\n\nexport const playerPresets: Array<PresetSpecSettings<any>> = [\n\t{\n\t\tspec: Spec.SpecDeathknight,\n\t\trotation: DeathknightPresets.DefaultFrostRotation,\n\t\ttalents: DeathknightPresets.FrostTalents.data,\n\t\tspecOptions: DeathknightPresets.DefaultFrostOptions,\n\t\tconsumes: DeathknightPresets.DefaultConsumes,\n\t\tdefaultName: 'Frost DK',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: DeathknightPresets.P1_FROST_BIS_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: DeathknightPresets.P1_FROST_BIS_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: DeathknightPresets.OtherDefaults,\n\t\ttooltip: 'Frost Death Knight',\n\t\ticonUrl: talentTreeIcons[Class.ClassDeathknight][1],\n\t},\n\t{\n\t\tspec: Spec.SpecDeathknight,\n\t\trotation: DeathknightPresets.DefaultUnholyRotation,\n\t\ttalents: DeathknightPresets.UnholyDualWieldTalents.data,\n\t\tspecOptions: DeathknightPresets.DefaultUnholyOptions,\n\t\tconsumes: DeathknightPresets.DefaultConsumes,\n\t\tdefaultName: 'DW Unholy DK',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: DeathknightPresets.P1_UNHOLY_DW_BIS_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: DeathknightPresets.P1_UNHOLY_DW_BIS_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: DeathknightPresets.OtherDefaults,\n\t\ttooltip: 'Dual Wield Unholy DK',\n\t\ticonUrl: talentTreeIcons[Class.ClassDeathknight][2],\n\t},\n\t//{\n\t//\tspec: Spec.SpecDeathknight,\n\t//\trotation: DeathknightPresets.DefaultBloodRotation,\n\t//\ttalents: DeathknightPresets.BloodTalents.data,\n\t//\tspecOptions: DeathknightPresets.DefaultBloodOptions,\n\t//\tconsumes: DeathknightPresets.DefaultConsumes,\n\t//\tdefaultName: 'Blood Dps DK',\n\t//\tdefaultFactionRaces: {\n\t//\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t//\t\t[Faction.Alliance]: Race.RaceHuman,\n\t//\t\t[Faction.Horde]: Race.RaceTroll,\n\t//\t},\n\t//\tdefaultGear: {\n\t//\t\t[Faction.Unknown]: {},\n\t//\t\t[Faction.Alliance]: {\n\t//\t\t\t1: DeathknightPresets.P1_UNHOLY_2H_BIS_PRESET.gear,\n\t//\t\t},\n\t//\t\t[Faction.Horde]: {\n\t//\t\t\t1: DeathknightPresets.P1_UNHOLY_2H_BIS_PRESET.gear,\n\t//\t\t},\n\t//\t},\n\t//\totherDefaults: DeathknightPresets.OtherDefaults,\n\t//\ttooltip: 'Blood Dps DK',\n\t//\ticonUrl: talentTreeIcons[Class.ClassDeathknight][0],\n\t//},\n\t{\n\t\tspec: Spec.SpecBalanceDruid,\n\t\trotation: BalanceDruidPresets.DefaultRotation,\n\t\ttalents: BalanceDruidPresets.StandardTalents.data,\n\t\tspecOptions: BalanceDruidPresets.DefaultOptions,\n\t\tconsumes: BalanceDruidPresets.DefaultConsumes,\n\t\tdefaultName: 'Balance Druid',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: BalanceDruidPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: BalanceDruidPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecBalanceDruid],\n\t\ticonUrl: specIconsLarge[Spec.SpecBalanceDruid],\n\t},\n\t{\n\t\tspec: Spec.SpecFeralDruid,\n\t\trotation: FeralDruidPresets.DefaultRotation,\n\t\ttalents: FeralDruidPresets.StandardTalents.data,\n\t\tspecOptions: FeralDruidPresets.DefaultOptions,\n\t\tconsumes: FeralDruidPresets.DefaultConsumes,\n\t\tdefaultName: 'Cat Druid',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: FeralDruidPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: FeralDruidPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecFeralDruid],\n\t\ticonUrl: specIconsLarge[Spec.SpecFeralDruid],\n\t},\n\t{\n\t\tspec: Spec.SpecFeralTankDruid,\n\t\trotation: FeralTankDruidPresets.DefaultRotation,\n\t\ttalents: FeralTankDruidPresets.StandardTalents.data,\n\t\tspecOptions: FeralTankDruidPresets.DefaultOptions,\n\t\tconsumes: FeralTankDruidPresets.DefaultConsumes,\n\t\tdefaultName: 'Bear Druid',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: FeralTankDruidPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: FeralTankDruidPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecFeralTankDruid],\n\t\ticonUrl: specIconsLarge[Spec.SpecFeralTankDruid],\n\t},\n\t{\n\t\tspec: Spec.SpecHunter,\n\t\trotation: HunterPresets.DefaultRotation,\n\t\ttalents: HunterPresets.BeastMasteryTalents.data,\n\t\tspecOptions: HunterPresets.BMDefaultOptions,\n\t\tconsumes: HunterPresets.DefaultConsumes,\n\t\tdefaultName: 'BM Hunter',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'BM Hunter',\n\t\ticonUrl: talentTreeIcons[Class.ClassHunter][0],\n\t},\n\t{\n\t\tspec: Spec.SpecHunter,\n\t\trotation: HunterPresets.DefaultRotation,\n\t\ttalents: HunterPresets.MarksmanTalents.data,\n\t\tspecOptions: HunterPresets.DefaultOptions,\n\t\tconsumes: HunterPresets.DefaultConsumes,\n\t\tdefaultName: 'MM Hunter',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'MM Hunter',\n\t\ticonUrl: talentTreeIcons[Class.ClassHunter][1],\n\t},\n\t{\n\t\tspec: Spec.SpecHunter,\n\t\trotation: HunterPresets.DefaultRotation,\n\t\ttalents: HunterPresets.SurvivalTalents.data,\n\t\tspecOptions: HunterPresets.DefaultOptions,\n\t\tconsumes: HunterPresets.DefaultConsumes,\n\t\tdefaultName: 'SV Hunter',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HunterPresets.SV_P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HunterPresets.SV_P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'SV Hunter',\n\t\ticonUrl: talentTreeIcons[Class.ClassHunter][2],\n\t},\n\t{\n\t\tspec: Spec.SpecMage,\n\t\trotation: MagePresets.DefaultArcaneRotation,\n\t\ttalents: MagePresets.ArcaneTalents.data,\n\t\tspecOptions: MagePresets.DefaultArcaneOptions,\n\t\tconsumes: MagePresets.DefaultArcaneConsumes,\n\t\tdefaultName: 'Arcane Mage',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: MagePresets.P1_ARCANE_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: MagePresets.P1_ARCANE_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Arcane Mage',\n\t\ticonUrl: talentTreeIcons[Class.ClassMage][0],\n\t},\n\t{\n\t\tspec: Spec.SpecMage,\n\t\trotation: MagePresets.DefaultFireRotation,\n\t\ttalents: MagePresets.FireTalents.data,\n\t\tspecOptions: MagePresets.DefaultFireOptions,\n\t\tconsumes: MagePresets.DefaultFireConsumes,\n\t\tdefaultName: 'Fire Mage',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: MagePresets.P1_FIRE_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: MagePresets.P1_FIRE_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Fire Mage',\n\t\ticonUrl: talentTreeIcons[Class.ClassMage][1],\n\t},\n\t{\n\t\tspec: Spec.SpecMage,\n\t\trotation: MagePresets.DefaultFrostRotation,\n\t\ttalents: MagePresets.FrostTalents.data,\n\t\tspecOptions: MagePresets.DefaultFrostOptions,\n\t\tconsumes: MagePresets.DefaultFrostConsumes,\n\t\tdefaultName: 'Frost Mage',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: MagePresets.P1_FROST_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: MagePresets.P1_FROST_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Frost Mage',\n\t\ticonUrl: talentTreeIcons[Class.ClassMage][2],\n\t},\n\t{\n\t\tspec: Spec.SpecRogue,\n\t\trotation: RoguePresets.DefaultRotation,\n\t\ttalents: RoguePresets.CombatTalents.data,\n\t\tspecOptions: RoguePresets.DefaultOptions,\n\t\tconsumes: RoguePresets.DefaultConsumes,\n\t\tdefaultName: 'Combat Rogue',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: RoguePresets.P1_PRESET_COMBAT.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: RoguePresets.P1_PRESET_COMBAT.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Combat Rogue',\n\t\ticonUrl: specIconsLarge[Spec.SpecRogue],\n\t},\n\t{\n\t\tspec: Spec.SpecElementalShaman,\n\t\trotation: ElementalShamanPresets.DefaultRotation,\n\t\ttalents: ElementalShamanPresets.StandardTalents.data,\n\t\tspecOptions: ElementalShamanPresets.DefaultOptions,\n\t\tconsumes: ElementalShamanPresets.DefaultConsumes,\n\t\tdefaultName: 'Ele Shaman',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDraenei,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: ElementalShamanPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: ElementalShamanPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecElementalShaman],\n\t\ticonUrl: specIconsLarge[Spec.SpecElementalShaman],\n\t},\n\t{\n\t\tspec: Spec.SpecEnhancementShaman,\n\t\trotation: EnhancementShamanPresets.DefaultRotation,\n\t\ttalents: EnhancementShamanPresets.StandardTalents.data,\n\t\tspecOptions: EnhancementShamanPresets.DefaultOptions,\n\t\tconsumes: EnhancementShamanPresets.DefaultConsumes,\n\t\tdefaultName: 'Enh Shaman',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDraenei,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: EnhancementShamanPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: EnhancementShamanPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecEnhancementShaman],\n\t\ticonUrl: specIconsLarge[Spec.SpecEnhancementShaman],\n\t},\n\t{\n\t\tspec: Spec.SpecShadowPriest,\n\t\trotation: ShadowPriestPresets.DefaultRotation,\n\t\ttalents: ShadowPriestPresets.StandardTalents.data,\n\t\tspecOptions: ShadowPriestPresets.DefaultOptions,\n\t\tconsumes: ShadowPriestPresets.DefaultConsumes,\n\t\tdefaultName: 'Shadow Priest',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: ShadowPriestPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: ShadowPriestPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecShadowPriest],\n\t\ticonUrl: specIconsLarge[Spec.SpecShadowPriest],\n\t},\n\t{\n\t\tspec: Spec.SpecSmitePriest,\n\t\trotation: SmitePriestPresets.DefaultRotation,\n\t\ttalents: SmitePriestPresets.StandardTalents.data,\n\t\tspecOptions: SmitePriestPresets.DefaultOptions,\n\t\tconsumes: SmitePriestPresets.DefaultConsumes,\n\t\tdefaultName: 'Smite Priest',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: SmitePriestPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: SmitePriestPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecSmitePriest],\n\t\ticonUrl: specIconsLarge[Spec.SpecSmitePriest],\n\t},\n\t{\n\t\tspec: Spec.SpecWarrior,\n\t\trotation: WarriorPresets.ArmsRotation,\n\t\ttalents: WarriorPresets.ArmsTalents.data,\n\t\tspecOptions: WarriorPresets.DefaultOptions,\n\t\tconsumes: WarriorPresets.DefaultConsumes,\n\t\tdefaultName: 'Arms Warrior',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarriorPresets.P1_ARMS_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarriorPresets.P1_ARMS_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Arms Warrior',\n\t\ticonUrl: talentTreeIcons[Class.ClassWarrior][0],\n\t},\n\t{\n\t\tspec: Spec.SpecWarrior,\n\t\trotation: WarriorPresets.DefaultRotation,\n\t\ttalents: WarriorPresets.FuryTalents.data,\n\t\tspecOptions: WarriorPresets.DefaultOptions,\n\t\tconsumes: WarriorPresets.DefaultConsumes,\n\t\tdefaultName: 'Fury Warrior',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarriorPresets.P1_FURY_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarriorPresets.P1_FURY_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Fury Warrior',\n\t\ticonUrl: talentTreeIcons[Class.ClassWarrior][1],\n\t},\n\t{\n\t\tspec: Spec.SpecProtectionWarrior,\n\t\trotation: ProtectionWarriorPresets.DefaultRotation,\n\t\ttalents: ProtectionWarriorPresets.StandardTalents.data,\n\t\tspecOptions: ProtectionWarriorPresets.DefaultOptions,\n\t\tconsumes: ProtectionWarriorPresets.DefaultConsumes,\n\t\tdefaultName: 'Prot Warrior',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: ProtectionWarriorPresets.P1_BALANCED_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: ProtectionWarriorPresets.P1_BALANCED_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Protection Warrior',\n\t\ticonUrl: talentTreeIcons[Class.ClassWarrior][2],\n\t},\n\t{\n\t\tspec: Spec.SpecRetributionPaladin,\n\t\trotation: RetributionPaladinPresets.DefaultRotation,\n\t\ttalents: RetributionPaladinPresets.AuraMasteryTalents.data,\n\t\tspecOptions: RetributionPaladinPresets.DefaultOptions,\n\t\tconsumes: RetributionPaladinPresets.DefaultConsumes,\n\t\tdefaultName: 'Ret Paladin',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: RetributionPaladinPresets.P1_PRESET.gear,\n\t\t\t\t2: RetributionPaladinPresets.P2_PRESET.gear,\n\t\t\t\t3: RetributionPaladinPresets.P3_PRESET.gear,\n\t\t\t\t4: RetributionPaladinPresets.P4_PRESET.gear,\n\t\t\t\t5: RetributionPaladinPresets.P5_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: RetributionPaladinPresets.P1_PRESET.gear,\n\t\t\t\t2: RetributionPaladinPresets.P2_PRESET.gear,\n\t\t\t\t3: RetributionPaladinPresets.P3_PRESET.gear,\n\t\t\t\t4: RetributionPaladinPresets.P4_PRESET.gear,\n\t\t\t\t5: RetributionPaladinPresets.P5_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Ret Paladin',\n\t\ticonUrl: talentTreeIcons[Class.ClassPaladin][2],\n\t},\n\t{\n\t\tspec: Spec.SpecProtectionPaladin,\n\t\trotation: ProtectionPaladinPresets.DefaultRotation,\n\t\ttalents: ProtectionPaladinPresets.GenericAoeTalents.data,\n\t\tspecOptions: ProtectionPaladinPresets.DefaultOptions,\n\t\tconsumes: ProtectionPaladinPresets.DefaultConsumes,\n\t\tdefaultName: 'Prot Paladin',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: ProtectionPaladinPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: ProtectionPaladinPresets.P1_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Protection Paladin',\n\t\ticonUrl: talentTreeIcons[Class.ClassPaladin][1],\n\t},\n\t{\n\t\tspec: Spec.SpecWarlock,\n\t\trotation: WarlockPresets.DestructionRotation,\n\t\ttalents: WarlockPresets.DestructionTalents.data,\n\t\tspecOptions: WarlockPresets.DestructionOptions,\n\t\tconsumes: WarlockPresets.DefaultConsumes,\n\t\tdefaultName: 'Destro Warlock',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_14.gear,\n\t\t\t},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_14.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_14.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: WarlockPresets.OtherDefaults,\n\t\ttooltip: 'Destruction Warlock: Adds Improved Soul Leech and Blood Pact',\n\t\ticonUrl: talentTreeIcons[Class.ClassWarlock][2],\n\t},\n\t{\n\t\tspec: Spec.SpecWarlock,\n\t\trotation: WarlockPresets.AfflictionRotation,\n\t\ttalents: WarlockPresets.AfflictionTalents.data,\n\t\tspecOptions: WarlockPresets.AfflictionOptions,\n\t\tconsumes: WarlockPresets.DefaultConsumes,\n\t\tdefaultName: 'Affli Warlock',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Affliction.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_11.gear,\n\t\t\t},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Affliction.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_11.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Affliction.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_11.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: WarlockPresets.OtherDefaults,\n\t\ttooltip: 'Affliction Warlock: Adds Improved Fel Intelligence',\n\t\ticonUrl: talentTreeIcons[Class.ClassWarlock][0],\n\t},\n\t{\n\t\tspec: Spec.SpecWarlock,\n\t\trotation: WarlockPresets.DemonologyRotation,\n\t\ttalents: WarlockPresets.DemonologyTalents.data,\n\t\tspecOptions: WarlockPresets.DemonologyOptions,\n\t\tconsumes: WarlockPresets.DefaultConsumes,\n\t\tdefaultName: 'Demo Warlock',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_14.gear,\n\t\t\t},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_14.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\n\t\t\t\t2: WarlockPresets.P1_PreBiS_14.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: WarlockPresets.OtherDefaults,\n\t\ttooltip: 'Demonology Warlock: Adds Demonic Pact',\n\t\ticonUrl: talentTreeIcons[Class.ClassWarlock][1],\n\t},\n];\n\nexport const implementedSpecs: Array<Spec> = [...new Set(playerPresets.map(preset => preset.spec))];\n\nexport const buffBotPresets: Array<BuffBotSettings> = [\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Bear',\n\t\tdeprecated: true,\n\t\tspec: Spec.SpecBalanceDruid,\n\t\tname: 'Bear',\n\t\ttooltip: 'Bear: Adds Gift of the Wild, an Innervate, Faerie Fire, and Leader of the Pack.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_racial_bearform.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.giftOfTheWild = Math.max(raidProto.buffs!.giftOfTheWild, TristateEffect.TristateEffectRegular);\n\t\t\traidProto.buffs!.thorns = Math.max(raidProto.buffs!.thorns, TristateEffect.TristateEffectRegular);\n\t\t\traidProto.debuffs!.faerieFire = Math.max(raidProto.debuffs!.faerieFire, TristateEffect.TristateEffectRegular);\n\t\t\traidProto.buffs!.leaderOfThePack = Math.max(raidProto.buffs!.leaderOfThePack, TristateEffect.TristateEffectRegular);\n\n\t\t\tconst innervateIndex = buffBot.getInnervateAssignment().targetIndex;\n\t\t\tif (innervateIndex != NO_TARGET) {\n\t\t\t\tconst partyIndex = Math.floor(innervateIndex / 5);\n\t\t\t\tconst playerIndex = innervateIndex % 5;\n\t\t\t\tconst playerProto = raidProto.parties[partyIndex].players[playerIndex];\n\t\t\t\tif (playerProto.buffs) {\n\t\t\t\t\tplayerProto.buffs.innervates++;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Resto Druid',\n\t\tspec: Spec.SpecBalanceDruid,\n\t\tname: 'Resto Druid',\n\t\ttooltip: 'Resto Druid: Adds Improved Gift of the Wild, and an Innervate.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingtouch.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.giftOfTheWild = TristateEffect.TristateEffectImproved;\n\t\t\traidProto.buffs!.thorns = Math.max(raidProto.buffs!.thorns, TristateEffect.TristateEffectRegular);\n\n\t\t\tconst innervateIndex = buffBot.getInnervateAssignment().targetIndex;\n\t\t\tif (innervateIndex != NO_TARGET) {\n\t\t\t\tconst partyIndex = Math.floor(innervateIndex / 5);\n\t\t\t\tconst playerIndex = innervateIndex % 5;\n\t\t\t\tconst playerProto = raidProto.parties[partyIndex].players[playerIndex];\n\t\t\t\tif (playerProto.buffs) {\n\t\t\t\t\tplayerProto.buffs.innervates++;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Dreamstate',\n\t\tspec: Spec.SpecBalanceDruid,\n\t\tname: 'Dreamstate',\n\t\ttooltip: 'Dreamstate: Adds Improved Gift of the Wild, an Innervate, and Improved Faerie Fire.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_faeriefire.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.giftOfTheWild = TristateEffect.TristateEffectImproved;\n\t\t\traidProto.buffs!.thorns = TristateEffect.TristateEffectImproved;\n\t\t\traidProto.debuffs!.faerieFire = TristateEffect.TristateEffectImproved;\n\n\t\t\tconst innervateIndex = buffBot.getInnervateAssignment().targetIndex;\n\t\t\tif (innervateIndex != NO_TARGET) {\n\t\t\t\tconst partyIndex = Math.floor(innervateIndex / 5);\n\t\t\t\tconst playerIndex = innervateIndex % 5;\n\t\t\t\tconst playerProto = raidProto.parties[partyIndex].players[playerIndex];\n\t\t\t\tif (playerProto.buffs) {\n\t\t\t\t\tplayerProto.buffs.innervates++;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Mage',\n\t\tdeprecated: true,\n\t\tspec: Spec.SpecMage,\n\t\tname: 'Mage',\n\t\ttooltip: 'Mage: Adds Arcane Brilliance.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_arcaneintellect.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.arcaneBrilliance = true;\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Paladin',\n\t\tspec: Spec.SpecRetributionPaladin,\n\t\tname: 'Holy Paladin',\n\t\ttooltip: 'Holy Paladin: Adds a set of blessings.',\n\t\ticonUrl: talentTreeIcons[Class.ClassPaladin][0],\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\t// Do nothing, blessings are handled elswhere.\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'JoW Paladin',\n\t\tspec: Spec.SpecRetributionPaladin,\n\t\tname: 'JoW Paladin',\n\t\ttooltip: 'JoW Paladin: Adds a set of blessings and Judgement of Wisdom.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_righteousnessaura.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\t// Blessings are handled elswhere.\n\t\t\traidProto.debuffs!.judgementOfWisdom = true;\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Holy Priest',\n\t\tspec: Spec.SpecShadowPriest,\n\t\tname: 'Holy Priest',\n\t\ttooltip: 'Holy Priest: Adds Improved PW Fortitude and Shadow Protection.',\n\t\ticonUrl: talentTreeIcons[Class.ClassPriest][1],\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.shadowProtection = true;\n\t\t\traidProto.buffs!.powerWordFortitude = TristateEffect.TristateEffectImproved;\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Divine Spirit Priest',\n\t\tspec: Spec.SpecShadowPriest,\n\t\tname: 'Disc Priest',\n\t\ttooltip: 'Disc Priest: Adds Improved PW Fort, Shadow Protection, Improved Divine Spirit and a Power Infusion.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/medium/spell_holy_powerinfusion.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.shadowProtection = true;\n\t\t\traidProto.buffs!.powerWordFortitude = TristateEffect.TristateEffectImproved;\n\t\t\traidProto.buffs!.divineSpirit = true;\n\n\t\t\tconst powerInfusionIndex = buffBot.getPowerInfusionAssignment().targetIndex;\n\t\t\tif (powerInfusionIndex != NO_TARGET) {\n\t\t\t\tconst partyIndex = Math.floor(powerInfusionIndex / 5);\n\t\t\t\tconst playerIndex = powerInfusionIndex % 5;\n\t\t\t\tconst playerProto = raidProto.parties[partyIndex].players[playerIndex];\n\t\t\t\tif (playerProto.buffs) {\n\t\t\t\t\tplayerProto.buffs.powerInfusions++;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Rogue',\n\t\tspec: Spec.SpecShadowPriest,\n\t\tname: 'Rogue',\n\t\ttooltip: 'Rogue: Adds TotT.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_tricksofthetrade.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\tconst tricksOfTheTradeIndex = buffBot.getTricksOfTheTradeAssignment().targetIndex;\n\t\t\tif (tricksOfTheTradeIndex != NO_TARGET) {\n\t\t\t\tconst partyIndex = Math.floor(tricksOfTheTradeIndex / 5);\n\t\t\t\tconst playerIndex = tricksOfTheTradeIndex % 5;\n\t\t\t\tconst playerProto = raidProto.parties[partyIndex].players[playerIndex];\n\t\t\t\tif (playerProto.buffs) {\n\t\t\t\t\tplayerProto.buffs.tricksOfTheTrades++;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Resto Shaman',\n\t\tspec: Spec.SpecElementalShaman,\n\t\tname: 'Resto Shaman',\n\t\ttooltip: 'Resto Shaman: Adds Bloodlust, Mana Spring Totem, Mana Tide Totem, Strength of Earth Totem. Chooses air totem based on party composition.',\n\t\ticonUrl: talentTreeIcons[Class.ClassShaman][2],\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.bloodlust = true;\n\t\t\traidProto.buffs!.manaSpringTotem = TristateEffect.TristateEffectImproved;\n\t\t\tpartyProto.buffs!.manaTideTotems++;\n\n\t\t\t// Choose which air totem to drop based on party composition.\n\t\t\tconst woaSpecs = [\n\t\t\t\tSpec.SpecBalanceDruid,\n\t\t\t\tSpec.SpecMage,\n\t\t\t\tSpec.SpecShadowPriest,\n\t\t\t\tSpec.SpecSmitePriest,\n\t\t\t\tSpec.SpecEnhancementShaman,\n\t\t\t\tSpec.SpecElementalShaman,\n\t\t\t\tSpec.SpecWarlock,\n\t\t\t];\n\t\t\tconst wfSpecs = [\n\t\t\t\tSpec.SpecRetributionPaladin,\n\t\t\t\tSpec.SpecRogue,\n\t\t\t\tSpec.SpecWarrior,\n\t\t\t\tSpec.SpecProtectionWarrior,\n\t\t\t\tSpec.SpecFeralDruid,\n\t\t\t\tSpec.SpecFeralTankDruid,\n\t\t\t];\n\t\t\tconst [woaVotes, wfVotes] = [woaSpecs, wfSpecs]\n\t\t\t\t.map(specs => partyProto.players\n\t\t\t\t\t.filter(player => player.class != Class.ClassUnknown)\n\t\t\t\t\t.map(player => playerToSpec(player))\n\t\t\t\t\t.filter(playerSpec => specs.includes(playerSpec))\n\t\t\t\t\t.length);\n\n\t\t\tif (woaVotes >= wfVotes) {\n\t\t\t\traidProto.buffs!.wrathOfAirTotem = true;\n\t\t\t} else {\n\t\t\t\traidProto.buffs!.windfuryTotem = TristateEffect.TristateEffectRegular;\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Arms Warrior',\n\t\tdeprecated: true,\n\t\tspec: Spec.SpecWarrior,\n\t\tname: 'Arms Warrior',\n\t\ttooltip: 'Arms Warrior: Adds Sunder Armor, Blood Frenzy, and Improved Battle Shout.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/medium/ability_warrior_savageblow.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.battleShout = TristateEffect.TristateEffectImproved;\n\t\t\tconst debuffs = raidProto.debuffs!;\n\t\t\tdebuffs.sunderArmor = true;\n\t\t\tdebuffs.bloodFrenzy = true;\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Fury Warrior',\n\t\tdeprecated: true,\n\t\tspec: Spec.SpecWarrior,\n\t\tname: 'Fury Warrior',\n\t\ttooltip: 'Fury Warrior: Adds Sunder Armor and Improved Battle Shout.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/medium/ability_warrior_innerrage.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\traidProto.buffs!.battleShout = TristateEffect.TristateEffectImproved;\n\t\t\tconst debuffs = raidProto.debuffs!;\n\t\t\tdebuffs.sunderArmor = true;\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Prot Warrior',\n\t\tdeprecated: true,\n\t\tspec: Spec.SpecWarrior,\n\t\tname: 'Prot Warrior',\n\t\ttooltip: 'Prot Warrior: Adds Sunder Armor.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/medium/inv_shield_06.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\tconst debuffs = raidProto.debuffs!;\n\t\t\tdebuffs.sunderArmor = true;\n\t\t},\n\t},\n\t{\n\t\t// The value of this field must never change, to preserve local storage data.\n\t\tbuffBotId: 'Unholy Frenzy Dk',\n\t\tspec: Spec.SpecDeathknight,\n\t\tname: 'Blood DK',\n\t\ttooltip: 'Deathknight: Adds Unholy Frenzy.',\n\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_bladedarmor.jpg',\n\t\tmodifyRaidProto: (buffBot: BuffBot, raidProto: RaidProto, partyProto: PartyProto) => {\n\t\t\tconst unholyFrenzyIndex = buffBot.getUnholyFrenzyAssignment().targetIndex;\n\t\t\tif (unholyFrenzyIndex != NO_TARGET) {\n\t\t\t\tconst partyIndex = Math.floor(unholyFrenzyIndex / 5);\n\t\t\t\tconst playerIndex = unholyFrenzyIndex % 5;\n\t\t\t\tconst playerProto = raidProto.parties[partyIndex].players[playerIndex];\n\t\t\t\tif (playerProto.buffs) {\n\t\t\t\t\tplayerProto.buffs.unholyFrenzy++;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n];\n","import { Class } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { BuffBot as BuffBotProto } from '../core/proto/ui.js';\nimport { classColors } from '../core/proto_utils/utils.js';\nimport { emptyRaidTarget } from '../core/proto_utils/utils.js';\nimport { specToClass } from '../core/proto_utils/utils.js';\nimport { Sim } from '../core/sim.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { BuffBotSettings, buffBotPresets } from './presets.js';\n\nexport const NO_ASSIGNMENT = -1;\n\n// Represents a buff bot in a raid.\nexport class BuffBot {\n\tsettings: BuffBotSettings;\n\tspec: Spec = 0;\n\tname: string = '';\n\n\tprivate raidIndex: number = NO_ASSIGNMENT;\n\tprivate innervateAssignment: RaidTarget = emptyRaidTarget();\n\tprivate powerInfusionAssignment: RaidTarget = emptyRaidTarget();\n\tprivate tricksOfTheTradeAssignment: RaidTarget = emptyRaidTarget();\n\tprivate unholyFrenzyAssignment: RaidTarget = emptyRaidTarget();\n\n\treadonly raidIndexChangeEmitter = new TypedEvent<void>();\n\treadonly innervateAssignmentChangeEmitter = new TypedEvent<void>();\n\treadonly powerInfusionAssignmentChangeEmitter = new TypedEvent<void>();\n\treadonly tricksOfTheTradeAssignmentChangeEmitter = new TypedEvent<void>();\n\treadonly unholyFrenzyAssignmentChangeEmitter = new TypedEvent<void>();\n\treadonly changeEmitter = new TypedEvent<void>();\n\n\tprivate readonly sim: Sim;\n\n\tconstructor(id: string, sim: Sim) {\n\t\tconst settings = buffBotPresets.find(preset => preset.buffBotId == id);\n\t\tif (!settings) {\n\t\t\tthrow new Error('No buff bot config with id \\'' + id + '\\'!');\n\t\t}\n\n\t\tthis.sim = sim;\n\t\tthis.settings = settings;\n\t\tthis.updateSettings();\n\n\t\t[\n\t\t\tthis.raidIndexChangeEmitter,\n\t\t\tthis.innervateAssignmentChangeEmitter,\n\t\t\tthis.powerInfusionAssignmentChangeEmitter,\n\t\t\tthis.tricksOfTheTradeAssignmentChangeEmitter,\n\t\t\tthis.unholyFrenzyAssignmentChangeEmitter,\n\t\t].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n\n\t\tthis.changeEmitter.on(eventID => sim.raid.getParty(this.getPartyIndex()).changeEmitter.emit(eventID));\n\t}\n\n\tprivate updateSettings() {\n\t\tthis.spec = this.settings.spec;\n\t\tthis.name = this.settings.name;\n\t}\n\n\tgetLabel(): string {\n\t\treturn `${this.name} (#${this.getRaidIndex() + 1})`;\n\t}\n\n\tgetClass(): Class {\n\t\treturn specToClass[this.settings.spec];\n\t}\n\n\tgetClassColor(): string {\n\t\treturn classColors[this.getClass()];\n\t}\n\n\tgetRaidIndex(): number {\n\t\treturn this.raidIndex;\n\t}\n\tsetRaidIndex(eventID: EventID, newRaidIndex: number) {\n\t\tif (newRaidIndex != this.raidIndex) {\n\t\t\tthis.raidIndex = newRaidIndex;\n\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\tthis.raidIndexChangeEmitter.emit(eventID);\n\t\t\t\tthis.sim.raid.compChangeEmitter.emit(eventID);\n\t\t\t});\n\t\t}\n\t}\n\n\tgetPartyIndex(): number {\n\t\treturn Math.floor(this.getRaidIndex() / 5);\n\t}\n\n\tgetInnervateAssignment(): RaidTarget {\n\t\t// Defensive copy.\n\t\treturn RaidTarget.clone(this.innervateAssignment);\n\t}\n\tsetInnervateAssignment(eventID: EventID, newInnervateAssignment: RaidTarget) {\n\t\tif (RaidTarget.equals(newInnervateAssignment, this.innervateAssignment))\n\t\t\treturn;\n\n\t\t// Defensive copy.\n\t\tthis.innervateAssignment = RaidTarget.clone(newInnervateAssignment);\n\t\tthis.innervateAssignmentChangeEmitter.emit(eventID);\n\t}\n\n\tgetPowerInfusionAssignment(): RaidTarget {\n\t\t// Defensive copy.\n\t\treturn RaidTarget.clone(this.powerInfusionAssignment);\n\t}\n\tsetPowerInfusionAssignment(eventID: EventID, newPowerInfusionAssignment: RaidTarget) {\n\t\tif (RaidTarget.equals(newPowerInfusionAssignment, this.powerInfusionAssignment))\n\t\t\treturn;\n\n\t\t// Defensive copy.\n\t\tthis.powerInfusionAssignment = RaidTarget.clone(newPowerInfusionAssignment);\n\t\tthis.powerInfusionAssignmentChangeEmitter.emit(eventID);\n\t}\n\n\tgetTricksOfTheTradeAssignment(): RaidTarget {\n\t\t// Defensive copy.\n\t\treturn RaidTarget.clone(this.tricksOfTheTradeAssignment);\n\t}\n\tsetTricksOfTheTradeAssignment(eventID: EventID, newTricksOfTheTradeAssignment: RaidTarget) {\n\t\tif (RaidTarget.equals(newTricksOfTheTradeAssignment, this.tricksOfTheTradeAssignment))\n\t\t\treturn;\n\n\t\t// Defensive copy.\n\t\tthis.tricksOfTheTradeAssignment = RaidTarget.clone(newTricksOfTheTradeAssignment);\n\t\tthis.tricksOfTheTradeAssignmentChangeEmitter.emit(eventID);\n\t}\n\n\tgetUnholyFrenzyAssignment(): RaidTarget {\n\t\t// Defensive copy.\n\t\treturn RaidTarget.clone(this.unholyFrenzyAssignment);\n\t}\n\tsetUnholyFrenzyAssignment(eventID: EventID, newUnholyFrenzyAssignment: RaidTarget) {\n\t\tif (RaidTarget.equals(newUnholyFrenzyAssignment, this.unholyFrenzyAssignment))\n\t\t\treturn;\n\n\t\t// Defensive copy.\n\t\tthis.unholyFrenzyAssignment = RaidTarget.clone(newUnholyFrenzyAssignment);\n\t\tthis.unholyFrenzyAssignmentChangeEmitter.emit(eventID);\n\t}\n\n\ttoProto(): BuffBotProto {\n\t\treturn BuffBotProto.create({\n\t\t\tid: this.settings.buffBotId,\n\t\t\traidIndex: this.getRaidIndex(),\n\t\t\tinnervateAssignment: this.getInnervateAssignment(),\n\t\t\tpowerInfusionAssignment: this.getPowerInfusionAssignment(),\n\t\t\ttricksOfTheTradeAssignment: this.getTricksOfTheTradeAssignment(),\n\t\t\tunholyFrenzyAssignment: this.getUnholyFrenzyAssignment(),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: BuffBotProto) {\n\t\tconst settings = buffBotPresets.find(preset => preset.buffBotId == proto.id);\n\t\tif (!settings) {\n\t\t\tthrow new Error('No buff bot config with id \\'' + proto.id + '\\'!');\n\t\t}\n\t\tthis.settings = settings;\n\t\tthis.updateSettings();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setRaidIndex(eventID, proto.raidIndex);\n\t\t\tthis.setInnervateAssignment(eventID, proto.innervateAssignment || emptyRaidTarget());\n\t\t\tthis.setPowerInfusionAssignment(eventID, proto.powerInfusionAssignment || emptyRaidTarget());\n\t\t\tthis.setTricksOfTheTradeAssignment(eventID, proto.tricksOfTheTradeAssignment || emptyRaidTarget());\n\t\t\tthis.setUnholyFrenzyAssignment(eventID, proto.unholyFrenzyAssignment || emptyRaidTarget());\n\t\t});\n\t}\n\n\tclone(eventID: EventID): BuffBot {\n\t\tconst newBuffBot = new BuffBot(this.settings.buffBotId, this.sim);\n\t\tnewBuffBot.fromProto(eventID, this.toProto());\n\t\treturn newBuffBot;\n\t}\n}\n","import { Component } from '../core/components/component.js';\nimport { Input, InputConfig } from '../core/components/input.js';\nimport { RaidTargetPicker } from '../core/components/raid_target_picker.js';\nimport { Player } from '../core/player.js';\nimport { Raid } from '../core/raid.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { Class } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { getEnumValues } from '../core/utils.js';\nimport { wait } from '../core/utils.js';\nimport { emptyRaidTarget } from '../core/proto_utils/utils.js';\n\nimport { BuffBot } from './buff_bot.js';\nimport { RaidSimUI } from './raid_sim_ui.js';\n\ndeclare var tippy: any;\n\nexport class AssignmentsPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\n\n\tprivate readonly innervatesPicker: InnervatesPicker;\n\tprivate readonly powerInfusionsPicker: PowerInfusionsPicker;\n\tprivate readonly tricksOfTheTradesPicker: TricksOfTheTradesPicker;\n\tprivate readonly unholyFrenzyPicker: UnholyFrenzyPicker;\n\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parentElem, 'assignments-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\t\tthis.innervatesPicker = new InnervatesPicker(this.rootElem, raidSimUI);\n\t\tthis.powerInfusionsPicker = new PowerInfusionsPicker(this.rootElem, raidSimUI);\n\t\tthis.tricksOfTheTradesPicker = new TricksOfTheTradesPicker(this.rootElem, raidSimUI);\n\t\tthis.unholyFrenzyPicker = new UnholyFrenzyPicker(this.rootElem, raidSimUI);\n\t}\n}\n\ninterface AssignmentTargetPicker {\n\tplayerOrBot: Player<any> | BuffBot,\n\ttargetPicker: RaidTargetPicker<Player<any>> | RaidTargetPicker<BuffBot>,\n\ttargetPlayer: Player<any> | null;\n};\n\nabstract class AssignedBuffPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\n\n\tprivate readonly playersContainer: HTMLElement;\n\n\tprivate targetPickers: Array<AssignmentTargetPicker>;\n\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parentElem, 'assigned-buff-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\t\tthis.targetPickers = [];\n\n\t\tthis.playersContainer = document.createElement('fieldset');\n\t\tthis.playersContainer.classList.add('assigned-buff-players-container', 'settings-section');\n\t\tthis.rootElem.appendChild(this.playersContainer);\n\n\t\tthis.update();\n\t\tthis.raidSimUI.changeEmitter.on(eventID => {\n\t\t\tthis.update();\n\t\t});\n\t}\n\n\tprivate update() {\n\t\tthis.playersContainer.innerHTML = `\n\t\t\t<legend>${this.getTitle().toUpperCase()}</legend>\n\t\t`;\n\n\t\tconst sourcePlayers = this.getSourcePlayers();\n\t\tif (sourcePlayers.length == 0) {\n\t\t\tthis.rootElem.style.display = 'none';\n\t\t} else {\n\t\t\tthis.rootElem.style.display = 'initial';\n\t\t}\n\n\t\tthis.targetPickers = sourcePlayers.map((sourcePlayer, sourcePlayerIndex) => {\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('assigned-buff-player');\n\t\t\tthis.playersContainer.appendChild(row);\n\n\t\t\tconst sourceElem = RaidTargetPicker.makeOptionElem({\n\t\t\t\ticonUrl: sourcePlayer instanceof Player ? sourcePlayer.getTalentTreeIcon() : sourcePlayer.settings.iconUrl,\n\t\t\t\ttext: sourcePlayer.getLabel(),\n\t\t\t\tcolor: sourcePlayer.getClassColor(),\n\t\t\t\tisDropdown: false,\n\t\t\t});\n\t\t\tsourceElem.classList.add('raid-target-picker-root');\n\t\t\trow.appendChild(sourceElem);\n\n\t\t\tconst arrow = document.createElement('span');\n\t\t\tarrow.classList.add('assigned-buff-arrow', 'fa', 'fa-arrow-right');\n\t\t\trow.appendChild(arrow);\n\n\t\t\tlet raidTargetPicker: RaidTargetPicker<Player<any>> | RaidTargetPicker<BuffBot> | null = null;\n\t\t\tif (sourcePlayer instanceof Player) {\n\t\t\t\traidTargetPicker = new RaidTargetPicker<Player<any>>(row, this.raidSimUI.sim.raid, sourcePlayer, {\n\t\t\t\t\textraCssClasses: [\n\t\t\t\t\t\t'assigned-buff-target-picker',\n\t\t\t\t\t],\n\t\t\t\t\tnoTargetLabel: 'Unassigned',\n\t\t\t\t\tcompChangeEmitter: this.raidSimUI.sim.raid.compChangeEmitter,\n\n\t\t\t\t\tchangedEvent: (player: Player<any>) => player.specOptionsChangeEmitter,\n\t\t\t\t\tgetValue: (player: Player<any>) => this.getPlayerValue(player),\n\t\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: RaidTarget) => this.setPlayerValue(eventID, player, newValue),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\traidTargetPicker = new RaidTargetPicker<BuffBot>(row, this.raidSimUI.sim.raid, sourcePlayer, {\n\t\t\t\t\textraCssClasses: [\n\t\t\t\t\t\t'assigned-buff-target-picker',\n\t\t\t\t\t],\n\t\t\t\t\tnoTargetLabel: 'Unassigned',\n\t\t\t\t\tcompChangeEmitter: this.raidSimUI.sim.raid.compChangeEmitter,\n\n\t\t\t\t\tchangedEvent: (buffBot: BuffBot) => buffBot.changeEmitter,\n\t\t\t\t\tgetValue: (buffBot: BuffBot) => this.getBuffBotValue(buffBot),\n\t\t\t\t\tsetValue: (eventID: EventID, buffBot: BuffBot, newValue: RaidTarget) => this.setBuffBotValue(eventID, buffBot, newValue),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst targetPickerData = {\n\t\t\t\tplayerOrBot: sourcePlayer,\n\t\t\t\ttargetPicker: raidTargetPicker!,\n\t\t\t\ttargetPlayer: this.raidSimUI.sim.raid.getPlayerFromRaidTarget(raidTargetPicker!.getInputValue()),\n\t\t\t};\n\n\t\t\traidTargetPicker!.changeEmitter.on(eventID => {\n\t\t\t\ttargetPickerData.targetPlayer = this.raidSimUI.sim.raid.getPlayerFromRaidTarget(raidTargetPicker!.getInputValue());\n\t\t\t});\n\n\t\t\treturn targetPickerData;\n\t\t});\n\t}\n\n\tabstract getTitle(): string;\n\tabstract getSourcePlayers(): Array<Player<any> | BuffBot>;\n\n\tabstract getPlayerValue(player: Player<any>): RaidTarget;\n\tabstract setPlayerValue(eventID: EventID, player: Player<any>, newValue: RaidTarget): void;\n\n\tabstract getBuffBotValue(buffBot: BuffBot): RaidTarget;\n\tabstract setBuffBotValue(eventID: EventID, buffBot: BuffBot, newValue: RaidTarget): void;\n}\n\nclass InnervatesPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Innervates';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any> | BuffBot> {\n\t\treturn this.raidSimUI.getPlayersAndBuffBots().filter(playerOrBot => playerOrBot?.getClass() == Class.ClassDruid) as Array<Player<any> | BuffBot>;\n\t}\n\n\tgetPlayerValue(player: Player<any>): RaidTarget {\n\t\treturn (player as Player<Spec.SpecBalanceDruid>).getSpecOptions().innervateTarget || emptyRaidTarget();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: RaidTarget) {\n\t\tconst newOptions = (player as Player<Spec.SpecBalanceDruid>).getSpecOptions();\n\t\tnewOptions.innervateTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n\n\tgetBuffBotValue(buffBot: BuffBot): RaidTarget {\n\t\treturn buffBot.getInnervateAssignment();\n\t}\n\n\tsetBuffBotValue(eventID: EventID, buffBot: BuffBot, newValue: RaidTarget) {\n\t\tbuffBot.setInnervateAssignment(eventID, newValue);\n\t}\n}\n\nclass PowerInfusionsPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Power Infusions';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any> | BuffBot> {\n\t\treturn this.raidSimUI.getPlayersAndBuffBots()\n\t\t\t.filter(playerOrBot => playerOrBot?.getClass() == Class.ClassPriest)\n\t\t\t.filter(playerOrBot => {\n\t\t\t\tif (playerOrBot instanceof BuffBot) {\n\t\t\t\t\treturn playerOrBot.settings.buffBotId == 'Divine Spirit Priest';\n\t\t\t\t} else {\n\t\t\t\t\tconst player = playerOrBot as Player<any>;\n\t\t\t\t\tif (!(player as Player<Spec.SpecSmitePriest>).getTalents().powerInfusion) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// Don't include shadow priests even if they have the talent, because they\n\t\t\t\t\t// don't have a raid target option for this.\n\t\t\t\t\treturn player.spec == Spec.SpecSmitePriest;\n\t\t\t\t}\n\t\t\t}) as Array<Player<any> | BuffBot>;\n\t}\n\n\tgetPlayerValue(player: Player<any>): RaidTarget {\n\t\treturn (player as Player<Spec.SpecSmitePriest>).getSpecOptions().powerInfusionTarget || emptyRaidTarget();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: RaidTarget) {\n\t\tconst newOptions = (player as Player<Spec.SpecSmitePriest>).getSpecOptions();\n\t\tnewOptions.powerInfusionTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n\n\tgetBuffBotValue(buffBot: BuffBot): RaidTarget {\n\t\treturn buffBot.getPowerInfusionAssignment();\n\t}\n\n\tsetBuffBotValue(eventID: EventID, buffBot: BuffBot, newValue: RaidTarget) {\n\t\tbuffBot.setPowerInfusionAssignment(eventID, newValue);\n\t}\n}\n\nclass TricksOfTheTradesPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Tricks of the Trades';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any> | BuffBot> {\n\t\treturn this.raidSimUI.getPlayersAndBuffBots().filter(playerOrBot => playerOrBot?.getClass() == Class.ClassRogue) as Array<Player<any> | BuffBot>;\n\t}\n\n\tgetPlayerValue(player: Player<any>): RaidTarget {\n\t\treturn (player as Player<Spec.SpecRogue>).getSpecOptions().tricksOfTheTradeTarget || emptyRaidTarget();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: RaidTarget) {\n\t\tconst newOptions = (player as Player<Spec.SpecRogue>).getSpecOptions();\n\t\tnewOptions.tricksOfTheTradeTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n\n\tgetBuffBotValue(buffBot: BuffBot): RaidTarget {\n\t\treturn buffBot.getTricksOfTheTradeAssignment();\n\t}\n\n\tsetBuffBotValue(eventID: EventID, buffBot: BuffBot, newValue: RaidTarget) {\n\t\tbuffBot.setTricksOfTheTradeAssignment(eventID, newValue);\n\t}\n}\n\nclass UnholyFrenzyPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Unholy Frenzy';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any> | BuffBot> {\n\t\treturn this.raidSimUI.getPlayersAndBuffBots()\n\t\t\t.filter(playerOrBot => playerOrBot?.getClass() == Class.ClassDeathknight)\n\t\t\t.filter(playerOrBot => {\n\t\t\t\tif (playerOrBot instanceof BuffBot) {\n\t\t\t\t\treturn playerOrBot.settings.buffBotId == 'Unholy Frenzy Dk';\n\t\t\t\t} else {\n\t\t\t\t\tconst player = playerOrBot as Player<Spec.SpecDeathknight>;\n\t\t\t\t\treturn player.getTalents().hysteria;\n\t\t\t\t}\n\t\t\t}) as Array<Player<any> | BuffBot>;\n\t}\n\n\tgetPlayerValue(player: Player<any>): RaidTarget {\n\t\treturn (player as Player<Spec.SpecDeathknight>).getSpecOptions().unholyFrenzyTarget || emptyRaidTarget();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: RaidTarget) {\n\t\tconst newOptions = (player as Player<Spec.SpecDeathknight>).getSpecOptions();\n\t\tnewOptions.unholyFrenzyTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n\n\tgetBuffBotValue(buffBot: BuffBot): RaidTarget {\n\t\treturn buffBot.getUnholyFrenzyAssignment();\n\t}\n\n\tsetBuffBotValue(eventID: EventID, buffBot: BuffBot, newValue: RaidTarget) {\n\t\tbuffBot.setUnholyFrenzyAssignment(eventID, newValue);\n\t}\n}\n","import { Component } from '../core/components/component.js';\nimport { IconEnumPicker } from '../core/components/icon_enum_picker.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { Class } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Blessings } from '../core/proto/paladin.js';\nimport { BlessingsAssignment } from '../core/proto/ui.js';\nimport { BlessingsAssignments } from '../core/proto/ui.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { memeSpecs } from '../core/launched_sims.js';\nimport {\n\tmakeDefaultBlessings,\n\tclassColors,\n\tnaturalSpecOrder,\n\tspecNames,\n\ttitleIcons,\n} from '../core/proto_utils/utils.js';\nimport { getEnumValues } from '../core/utils.js';\n\nimport { RaidSimUI } from './raid_sim_ui.js';\nimport { implementedSpecs } from './presets.js';\n\ndeclare var tippy: any;\n\nconst MAX_PALADINS = 4;\n\nexport class BlessingsPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\n\n\tprivate readonly rows: Array<HTMLTableRowElement>;\n\tprivate readonly cols: Array<Array<HTMLElement>>;\n\n\tprivate assignments: BlessingsAssignments;\n\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parentElem, 'blessings-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\t\tthis.assignments = BlessingsAssignments.clone(makeDefaultBlessings(4));\n\n\t\tthis.rootElem.innerHTML = `\n\t\t<table class=\"blessings-table\">\n\t\t\t<tbody class=\"blessings-table-body\">\n\t\t\t</tbody>\n\t\t</table>\n\t\t`;\n\n\t\tconst headerRow = this.rootElem.getElementsByClassName('blessings-table-header-row')[0] as HTMLTableRowElement;\n\t\tconst bodyElem = this.rootElem.getElementsByClassName('blessings-table-body')[0] as HTMLTableSectionElement;\n\n\t\tconst specs = naturalSpecOrder\n\t\t\t.filter(spec => implementedSpecs.includes(spec))\n\t\t\t.filter(spec => !memeSpecs.includes(spec));\n\t\tconst paladinIndexes = [...Array(MAX_PALADINS).keys()];\n\n\t\tthis.cols = [];\n\t\tthis.rows = specs.map(spec => {\n\t\t\tconst row = document.createElement('tr');\n\t\t\trow.classList.add('blessings-table-row');\n\t\t\tbodyElem.appendChild(row);\n\n\t\t\tconst headerCell = document.createElement('th');\n\t\t\theaderCell.classList.add('blessings-table-header-cell');\n\t\t\trow.appendChild(headerCell);\n\n\t\t\tconst icon = document.createElement('img');\n\t\t\ticon.src = titleIcons[spec];\n\t\t\theaderCell.appendChild(icon);\n\n\t\t\ttippy(icon, {\n\t\t\t\t'content': specNames[spec],\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\n\t\t\tpaladinIndexes.forEach(paladinIdx => {\n\t\t\t\tconst cell = document.createElement('td');\n\t\t\t\tcell.classList.add('blessings-table-cell');\n\t\t\t\trow.appendChild(cell);\n\n\t\t\t\tif (!this.cols[paladinIdx]) {\n\t\t\t\t\tthis.cols.push([]);\n\t\t\t\t}\n\t\t\t\tthis.cols[paladinIdx].push(cell);\n\n\t\t\t\tconst blessingPicker = new IconEnumPicker(cell, this, {\n\t\t\t\t\textraCssClasses: [\n\t\t\t\t\t\t'blessing-picker',\n\t\t\t\t\t],\n\t\t\t\t\tnumColumns: 1,\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{ color: classColors[Class.ClassPaladin], value: Blessings.BlessingUnknown },\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(25898), value: Blessings.BlessingOfKings },\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(48934), value: Blessings.BlessingOfMight },\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(48938), value: Blessings.BlessingOfWisdom },\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(25899), value: Blessings.BlessingOfSanctuary },\n\t\t\t\t\t],\n\t\t\t\t\tequals: (a: Blessings, b: Blessings) => a == b,\n\t\t\t\t\tzeroValue: Blessings.BlessingUnknown,\n\t\t\t\t\tchangedEvent: (picker: BlessingsPicker) => picker.changeEmitter,\n\t\t\t\t\tgetValue: (picker: BlessingsPicker) => picker.assignments.paladins[paladinIdx]?.blessings[spec] || Blessings.BlessingUnknown,\n\t\t\t\t\tsetValue: (eventID: EventID, picker: BlessingsPicker, newValue: number) => {\n\t\t\t\t\t\tconst currentValue = picker.assignments.paladins[paladinIdx].blessings[spec];\n\t\t\t\t\t\tif (currentValue != newValue) {\n\t\t\t\t\t\t\tpicker.assignments.paladins[paladinIdx].blessings[spec] = newValue;\n\t\t\t\t\t\t\tthis.changeEmitter.emit(eventID);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn row;\n\t\t});\n\n\t\tthis.setNumPaladins(raidSimUI.getClassCount(Class.ClassPaladin));\n\t\traidSimUI.compChangeEmitter.on(eventID => {\n\t\t\tthis.setNumPaladins(raidSimUI.getClassCount(Class.ClassPaladin));\n\t\t});\n\t}\n\n\tprivate setNumPaladins(numPaladins: number) {\n\t\tnumPaladins = Math.min(numPaladins, MAX_PALADINS);\n\n\t\tfor (let i = 0; i < numPaladins; i++) {\n\t\t\tthis.cols[i].forEach(elem => elem.classList.add('paladin-active'));\n\t\t}\n\t\tfor (let i = numPaladins; i < MAX_PALADINS; i++) {\n\t\t\tthis.cols[i].forEach(elem => elem.classList.remove('paladin-active'));\n\t\t}\n\t}\n\n\tgetAssignments(): BlessingsAssignments {\n\t\t// Defensive copy.\n\t\treturn BlessingsAssignments.clone(this.assignments);\n\t}\n\n\tsetAssignments(eventID: EventID, newAssignments: BlessingsAssignments) {\n\t\tthis.assignments = BlessingsAssignments.clone(newAssignments);\n\t\tthis.changeEmitter.emit(eventID);\n\t}\n}\n","import { CloseButton } from '../core/components/close_button.js';\nimport { Component } from '../core/components/component.js';\nimport { EnumPicker } from '../core/components/enum_picker.js';\nimport { makePhaseSelector } from '../core/components/other_inputs.js';\nimport { Raid } from '../core/raid.js';\nimport { MAX_PARTY_SIZE } from '../core/party.js';\nimport { Party } from '../core/party.js';\nimport { Player } from '../core/player.js';\nimport { Player as PlayerProto } from '../core/proto/api.js';\nimport { Encounter as EncounterProto } from '../core/proto/common.js';\nimport { Raid as RaidProto } from '../core/proto/api.js';\nimport { Party as PartyProto } from '../core/proto/api.js';\nimport { Class } from '../core/proto/common.js';\nimport { Profession } from '../core/proto/common.js';\nimport { Race } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Faction } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { BuffBot as BuffBotProto } from '../core/proto/ui.js';\nimport { playerToSpec, specNames } from '../core/proto_utils/utils.js';\nimport { classColors } from '../core/proto_utils/utils.js';\nimport { isTankSpec } from '../core/proto_utils/utils.js';\nimport { specToClass } from '../core/proto_utils/utils.js';\nimport { newRaidTarget } from '../core/proto_utils/utils.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { camelToSnakeCase } from '../core/utils.js';\nimport { formatDeltaTextElem } from '../core/utils.js';\nimport { getEnumValues } from '../core/utils.js';\nimport { hexToRgba } from '../core/utils.js';\n\nimport { BuffBot } from './buff_bot.js';\nimport { RaidSimUI } from './raid_sim_ui.js';\nimport { buffBotPresets, playerPresets, specSimFactories } from './presets.js';\n\nimport { BalanceDruid_Options as BalanceDruidOptions } from '../core/proto/druid.js';\nimport { SmitePriest_Options as SmitePriestOptions } from '../core/proto/priest.js';\nimport { MessageType } from '@protobuf-ts/runtime';\n\ndeclare var tippy: any;\ndeclare var $: any;\n\nconst NEW_PLAYER: number = -1;\n\nenum DragType {\n\tNone,\n\tNew,\n\tMove,\n\tSwap,\n\tCopy,\n}\n\nexport class RaidPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\treadonly raid: Raid;\n\treadonly partyPickers: Array<PartyPicker>;\n\treadonly newPlayerPicker: NewPlayerPicker;\n\n\t// Hold data about the player being dragged while the drag is happening.\n\tcurrentDragPlayer: Player<any> | BuffBot | null = null;\n\tcurrentDragPlayerFromIndex: number = NEW_PLAYER;\n\tcurrentDragType: DragType = DragType.New;\n\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parent, 'raid-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\t\tthis.raid = raidSimUI.sim.raid;\n\n\t\tconst raidViewer = document.createElement('div');\n\t\traidViewer.classList.add('current-raid-viewer');\n\t\tthis.rootElem.appendChild(raidViewer);\n\t\traidViewer.innerHTML = `\n\t\t\t<div class=\"parties-container\">\n\t\t\t</div>\n\t\t`;\n\n\t\tconst partiesContainer = this.rootElem.getElementsByClassName('parties-container')[0] as HTMLDivElement;\n\t\tthis.partyPickers = this.raid.getParties().map((party, i) => new PartyPicker(partiesContainer, party, i, this));\n\n\t\tconst newPlayerPickerRoot = document.createElement('div');\n\t\tnewPlayerPickerRoot.classList.add('new-player-picker');\n\t\tthis.rootElem.appendChild(newPlayerPickerRoot);\n\n\t\tthis.newPlayerPicker = new NewPlayerPicker(newPlayerPickerRoot, this);\n\n\t\tthis.rootElem.ondragend = event => {\n\t\t\t// Uncomment to remove player when dropped 'off' the raid.\n\t\t\t//if (this.currentDragPlayerFromIndex != NEW_PLAYER) {\n\t\t\t//\tconst playerPicker = this.getPlayerPicker(this.currentDragPlayerFromIndex);\n\t\t\t//\tplayerPicker.setPlayer(null, null, DragType.None);\n\t\t\t//}\n\n\t\t\tthis.clearDragPlayer();\n\t\t};\n\t}\n\n\tgetCurrentFaction(): Faction {\n\t\treturn this.raid.sim.getFaction();\n\t}\n\n\tgetCurrentPhase(): number {\n\t\treturn this.raid.sim.getPhase();\n\t}\n\n\tgetPlayerPicker(raidIndex: number): PlayerPicker {\n\t\treturn this.partyPickers[Math.floor(raidIndex / MAX_PARTY_SIZE)].playerPickers[raidIndex % MAX_PARTY_SIZE];\n\t}\n\n\tgetPlayerPickers(): Array<PlayerPicker> {\n\t\treturn [...new Array(25).keys()].map(i => this.getPlayerPicker(i));\n\t}\n\n\tgetBuffBots(): Array<BuffBot> {\n\t\treturn this.getPlayerPickers()\n\t\t\t.filter(picker => picker.player instanceof BuffBot)\n\t\t\t.map(picker => picker.player as BuffBot);\n\t}\n\n\tsetBuffBots(eventID: EventID, newBuffBotProtos: Array<BuffBotProto>) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.getBuffBots().forEach(buffBot => this.getPlayerPicker(buffBot.getRaidIndex()).setPlayer(eventID, null, DragType.None));\n\n\t\t\tnewBuffBotProtos.forEach(buffBotProto => {\n\t\t\t\tconst settings = buffBotPresets.find(preset => preset.buffBotId == buffBotProto.id);\n\t\t\t\tif (!settings) {\n\t\t\t\t\tconsole.warn('Invalid buff bot ID: ' + buffBotProto.id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst buffBot = new BuffBot(buffBotProto.id, this.raid.sim);\n\t\t\t\tbuffBot.fromProto(eventID, buffBotProto);\n\t\t\t\tthis.getPlayerPicker(buffBotProto.raidIndex).setPlayer(eventID, buffBot, DragType.None);\n\t\t\t});\n\t\t});\n\t}\n\n\tsetDragPlayer(player: Player<any> | BuffBot, fromIndex: number, type: DragType) {\n\t\tthis.clearDragPlayer();\n\n\t\tthis.currentDragPlayer = player;\n\t\tthis.currentDragPlayerFromIndex = fromIndex;\n\t\tthis.currentDragType = type;\n\n\t\tif (fromIndex != NEW_PLAYER) {\n\t\t\tconst playerPicker = this.getPlayerPicker(fromIndex);\n\t\t\tplayerPicker.rootElem.classList.add('dragFrom');\n\t\t}\n\t}\n\n\tclearDragPlayer() {\n\t\tif (this.currentDragPlayerFromIndex != NEW_PLAYER) {\n\t\t\tconst playerPicker = this.getPlayerPicker(this.currentDragPlayerFromIndex);\n\t\t\tplayerPicker.rootElem.classList.remove('dragFrom');\n\t\t}\n\n\t\tthis.currentDragPlayer = null;\n\t\tthis.currentDragPlayerFromIndex = NEW_PLAYER;\n\t\tthis.currentDragType = DragType.New;\n\t}\n}\n\nexport class PartyPicker extends Component {\n\treadonly party: Party;\n\treadonly index: number;\n\treadonly raidPicker: RaidPicker;\n\treadonly playerPickers: Array<PlayerPicker>;\n\n\tconstructor(parent: HTMLElement, party: Party, index: number, raidPicker: RaidPicker) {\n\t\tsuper(parent, 'party-picker-root');\n\t\tthis.party = party;\n\t\tthis.index = index;\n\t\tthis.raidPicker = raidPicker;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"party-header\">\n\t\t\t\t<span>Group ${index + 1}</span>\n\t\t\t\t<div class=\"party-results\">\n\t\t\t\t\t<span class=\"party-results-dps\"></span>\n\t\t\t\t\t<span class=\"party-results-reference-delta\"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"players-container\">\n\t\t\t</div>\n\t\t`;\n\n\t\tconst playersContainer = this.rootElem.getElementsByClassName('players-container')[0] as HTMLDivElement;\n\t\tthis.playerPickers = [...Array(MAX_PARTY_SIZE).keys()].map(i => new PlayerPicker(playersContainer, this, i));\n\n\t\tconst dpsResultElem = this.rootElem.getElementsByClassName('party-results-dps')[0] as HTMLElement;\n\t\tconst referenceDeltaElem = this.rootElem.getElementsByClassName('party-results-reference-delta')[0] as HTMLElement;\n\n\t\tthis.raidPicker.raidSimUI.referenceChangeEmitter.on(() => {\n\t\t\tconst currentData = this.raidPicker.raidSimUI.getCurrentData();\n\t\t\tconst referenceData = this.raidPicker.raidSimUI.getReferenceData();\n\n\t\t\tconst partyDps = currentData?.simResult.raidMetrics.parties[this.index].dps.avg || 0;\n\t\t\tconst referenceDps = referenceData?.simResult.raidMetrics.parties[this.index].dps.avg || 0;\n\n\t\t\tif (partyDps == 0 && referenceDps == 0) {\n\t\t\t\tdpsResultElem.textContent = '';\n\t\t\t\treferenceDeltaElem.textContent = '';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdpsResultElem.textContent = partyDps.toFixed(1);\n\n\t\t\tif (!referenceData) {\n\t\t\t\treferenceDeltaElem.textContent = '';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tformatDeltaTextElem(referenceDeltaElem, referenceDps, partyDps, 1);\n\t\t});\n\t}\n}\n\nexport class PlayerPicker extends Component {\n\t// Index of this player within its party (0-4).\n\treadonly index: number;\n\n\t// Index of this player within the whole raid (0-24).\n\treadonly raidIndex: number;\n\n\tplayer: Player<any> | BuffBot | null;\n\n\treadonly partyPicker: PartyPicker;\n\treadonly raidPicker: RaidPicker;\n\n\tprivate readonly labelElem: HTMLElement;\n\tprivate readonly iconElem: HTMLImageElement;\n\tprivate readonly nameElem: HTMLSpanElement;\n\tprivate readonly resultsElem: HTMLElement;\n\tprivate readonly dpsResultElem: HTMLElement;\n\tprivate readonly referenceDeltaElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, partyPicker: PartyPicker, index: number) {\n\t\tsuper(parent, 'player-picker-root');\n\t\tthis.index = index;\n\t\tthis.raidIndex = partyPicker.index * MAX_PARTY_SIZE + index;\n\t\tthis.player = null;\n\t\tthis.partyPicker = partyPicker;\n\t\tthis.raidPicker = partyPicker.raidPicker;\n\n\t\tthis.partyPicker.party.compChangeEmitter.on(eventID => {\n\t\t\tconst newPlayer = this.partyPicker.party.getPlayer(this.index);\n\t\t\tif (newPlayer != this.player && !(newPlayer == null && this.player instanceof BuffBot)) {\n\t\t\t\tthis.setPlayer(eventID, newPlayer, DragType.None);\n\t\t\t}\n\t\t});\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"player-label\">\n\t\t\t\t<img class=\"player-icon\"></img>\n\t\t\t\t<span class=\"player-name\" contenteditable></span>\n\t\t\t</div>\n\t\t\t<div class=\"player-spacer\">\n\t\t\t</div>\n\t\t\t<div class=\"player-options\">\n\t\t\t\t<span class=\"player-edit fa fa-edit\"></span>\n\t\t\t\t<span class=\"player-copy fa fa-copy\" draggable=\"true\"></span>\n\t\t\t\t<span class=\"player-delete fa fa-times\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"player-results\">\n\t\t\t\t<span class=\"player-results-dps\"></span>\n\t\t\t\t<span class=\"player-results-reference-delta\"></span>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.labelElem = this.rootElem.getElementsByClassName('player-label')[0] as HTMLElement;\n\t\tthis.iconElem = this.rootElem.getElementsByClassName('player-icon')[0] as HTMLImageElement;\n\t\tthis.nameElem = this.rootElem.getElementsByClassName('player-name')[0] as HTMLSpanElement;\n\t\tthis.resultsElem = this.rootElem.getElementsByClassName('player-results')[0] as HTMLElement;\n\t\tthis.dpsResultElem = this.rootElem.getElementsByClassName('player-results-dps')[0] as HTMLElement;\n\t\tthis.referenceDeltaElem = this.rootElem.getElementsByClassName('player-results-reference-delta')[0] as HTMLElement;\n\n\t\tthis.nameElem.addEventListener('input', event => {\n\t\t\tif (this.player instanceof Player) {\n\t\t\t\tthis.player.setName(TypedEvent.nextEventID(), this.nameElem.textContent || '');\n\t\t\t}\n\t\t});\n\n\t\tconst maxLength = 15;\n\t\tthis.nameElem.addEventListener('keydown', event => {\n\t\t\t// 9 is tab, 13 is enter\n\t\t\tif (event.keyCode == 9 || event.keyCode == 13) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst realPlayerPickers = this.raidPicker.getPlayerPickers().filter(pp => pp.player instanceof Player);\n\t\t\t\tconst indexOfThis = realPlayerPickers.indexOf(this);\n\t\t\t\tif (indexOfThis != -1 && realPlayerPickers.length > indexOfThis + 1) {\n\t\t\t\t\trealPlayerPickers[indexOfThis + 1].nameElem.focus();\n\t\t\t\t} else {\n\t\t\t\t\tthis.nameElem.blur();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// escape\n\t\t\tif (event.keyCode == 27) {\n\t\t\t\tthis.nameElem.blur();\n\t\t\t}\n\n\t\t\t// 8 is backspace, 46 is delete, \n\t\t\tif ((event.keyCode != 8 && event.keyCode != 46) && (this.nameElem.textContent?.length || 0) >= maxLength) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tconst emptyName = 'Unnamed';\n\t\tthis.nameElem.addEventListener('focusin', event => {\n\t\t\tconst selection = window.getSelection();\n\t\t\tif (selection) {\n\t\t\t\tconst range = document.createRange();\n\t\t\t\trange.selectNodeContents(this.nameElem);\n\t\t\t\tselection.removeAllRanges();\n\t\t\t\tselection.addRange(range);\n\t\t\t}\n\t\t});\n\t\tthis.nameElem.addEventListener('focusout', event => {\n\t\t\tif (!this.nameElem.textContent) {\n\t\t\t\tthis.nameElem.textContent = emptyName;\n\t\t\t\tif (this.player instanceof Player) {\n\t\t\t\t\tthis.player.setName(TypedEvent.nextEventID(), emptyName);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst dragStart = (event: DragEvent, type: DragType) => {\n\t\t\tif (this.player == null) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tevent.dataTransfer!.dropEffect = 'move';\n\t\t\tevent.dataTransfer!.effectAllowed = 'all';\n\n\t\t\tconst iconSrc = this.iconElem.src;\n\t\t\tconst dragImage = new Image();\n\t\t\tdragImage.src = iconSrc;\n\t\t\tevent.dataTransfer!.setDragImage(dragImage, 30, 30);\n\t\t\tif (this.player instanceof Player) {\n\t\t\t\tvar playerDataProto = this.player.toProto(true);\n\t\t\t\tevent.dataTransfer!.setData(\"text/plain\", btoa(String.fromCharCode(...PlayerProto.toBinary(playerDataProto))));\n\t\t\t}\n\t\t\tthis.raidPicker.setDragPlayer(this.player, this.raidIndex, type);\n\t\t};\n\n\t\tthis.labelElem.ondragstart = event => {\n\t\t\tdragStart(event, DragType.Swap);\n\t\t};\n\t\tthis.resultsElem.ondragstart = event => {\n\t\t\tdragStart(event, DragType.Swap);\n\t\t};\n\n\t\tconst copyElem = this.rootElem.getElementsByClassName('player-copy')[0] as HTMLSpanElement;\n\t\ttippy(copyElem, {\n\t\t\t'content': 'Drag to Copy',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\tcopyElem.ondragstart = event => {\n\t\t\tdragStart(event, DragType.Copy);\n\t\t};\n\n\t\tconst deleteElem = this.rootElem.getElementsByClassName('player-delete')[0] as HTMLSpanElement;\n\t\ttippy(deleteElem, {\n\t\t\t'content': 'Click to Delete',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\tdeleteElem.addEventListener('click', event => {\n\t\t\tthis.setPlayer(TypedEvent.nextEventID(), null, DragType.None);\n\t\t});\n\n\t\tlet dragEnterCounter = 0;\n\t\tthis.rootElem.ondragenter = event => {\n\t\t\tevent.preventDefault();\n\t\t\tdragEnterCounter++;\n\t\t\tthis.rootElem.classList.add('dragto');\n\t\t};\n\t\tthis.rootElem.ondragleave = event => {\n\t\t\tevent.preventDefault();\n\t\t\tdragEnterCounter--;\n\t\t\tif (dragEnterCounter <= 0) {\n\t\t\t\tthis.rootElem.classList.remove('dragto');\n\t\t\t}\n\t\t};\n\t\tthis.rootElem.ondragover = event => {\n\t\t\tevent.preventDefault();\n\t\t};\n\t\tthis.rootElem.ondrop = event => {\n\t\t\tvar dropData = event.dataTransfer!.getData(\"text/plain\");\n\n\t\t\tevent.preventDefault();\n\t\t\tdragEnterCounter = 0;\n\t\t\tthis.rootElem.classList.remove('dragto');\n\n\t\t\tconst eventID = TypedEvent.nextEventID();\n\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\tif (this.raidPicker.currentDragPlayer == null && dropData.length == 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.raidPicker.currentDragPlayerFromIndex == this.raidIndex) {\n\t\t\t\t\tthis.raidPicker.clearDragPlayer();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst dragType = this.raidPicker.currentDragType;\n\n\t\t\t\tif (this.raidPicker.currentDragPlayerFromIndex != NEW_PLAYER) {\n\t\t\t\t\tconst fromPlayerPicker = this.raidPicker.getPlayerPicker(this.raidPicker.currentDragPlayerFromIndex);\n\t\t\t\t\tif (dragType == DragType.Swap) {\n\t\t\t\t\t\tfromPlayerPicker.setPlayer(eventID, this.player, dragType);\n\t\t\t\t\t\tvar myicon = this.iconElem.src\n\t\t\t\t\t\tthis.iconElem.src = fromPlayerPicker.iconElem.src;\n\t\t\t\t\t\tfromPlayerPicker.iconElem.src = myicon;\n\t\t\t\t\t} else if (dragType == DragType.Move) {\n\t\t\t\t\t\tthis.iconElem.src = fromPlayerPicker.iconElem.src;\n\t\t\t\t\t\tfromPlayerPicker.setPlayer(eventID, null, dragType);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.raidPicker.currentDragPlayer == null) {\n\t\t\t\t\t// This would be a copy from another window.\n\t\t\t\t\tconst binary = atob(dropData);\n\t\t\t\t\tconst bytes = new Uint8Array(binary.length);\n\t\t\t\t\tfor (let i = 0; i < bytes.length; i++) {\n\t\t\t\t\t\tbytes[i] = binary.charCodeAt(i);\n\t\t\t\t\t}\n\t\t\t\t\tconst playerProto = PlayerProto.fromBinary(bytes);\n\n\t\t\t\t\tvar localPlayer = new Player(playerToSpec(playerProto), this.raidPicker.raidSimUI.sim);\n\t\t\t\t\tlocalPlayer.fromProto(eventID, playerProto);\n\t\t\t\t\tthis.raidPicker.currentDragPlayer = localPlayer;\n\t\t\t\t}\n\n\t\t\t\tif (dragType == DragType.Copy) {\n\t\t\t\t\tthis.setPlayer(eventID, this.raidPicker.currentDragPlayer!.clone(eventID), dragType);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setPlayer(eventID, this.raidPicker.currentDragPlayer, dragType);\n\t\t\t\t}\n\n\t\t\t\tif (this.iconElem.src == \"\") {\n\t\t\t\t\tthis.iconElem.src = playerPresets.filter(preset => {\n\t\t\t\t\t\treturn preset.spec == localPlayer.spec;\n\t\t\t\t\t})[0].iconUrl;\n\t\t\t\t}\n\n\t\t\t\tthis.raidPicker.clearDragPlayer();\n\t\t\t});\n\t\t};\n\n\t\tconst editElem = this.rootElem.getElementsByClassName('player-edit')[0] as HTMLSpanElement;\n\t\ttippy(editElem, {\n\t\t\t'content': 'Edit',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\teditElem.addEventListener('click', event => {\n\t\t\tif (this.player instanceof Player) {\n\t\t\t\tnew PlayerEditorModal(this.player);\n\t\t\t}\n\t\t});\n\n\t\tthis.raidPicker.raidSimUI.referenceChangeEmitter.on(() => {\n\t\t\tconst currentData = this.raidPicker.raidSimUI.getCurrentData();\n\t\t\tconst referenceData = this.raidPicker.raidSimUI.getReferenceData();\n\n\t\t\tconst playerDps = currentData?.simResult.getPlayerWithRaidIndex(this.raidIndex)?.dps.avg || 0;\n\t\t\tconst referenceDps = referenceData?.simResult.getPlayerWithRaidIndex(this.raidIndex)?.dps.avg || 0;\n\n\t\t\tif (playerDps == 0 && referenceDps == 0) {\n\t\t\t\tthis.dpsResultElem.textContent = '';\n\t\t\t\tthis.referenceDeltaElem.textContent = '';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.dpsResultElem.textContent = playerDps.toFixed(1);\n\n\t\t\tif (!referenceData) {\n\t\t\t\tthis.referenceDeltaElem.textContent = '';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tformatDeltaTextElem(this.referenceDeltaElem, referenceDps, playerDps, 1);\n\t\t});\n\n\t\tthis.update();\n\t}\n\n\tsetPlayer(eventID: EventID, newPlayer: Player<any> | BuffBot | null, dragType: DragType) {\n\t\tif (newPlayer == this.player) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dpsResultElem.textContent = '';\n\t\tthis.referenceDeltaElem.textContent = '';\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.player = newPlayer;\n\t\t\tif (newPlayer instanceof BuffBot) {\n\t\t\t\tthis.partyPicker.party.setPlayer(eventID, this.index, null);\n\t\t\t\tnewPlayer.setRaidIndex(eventID, this.raidIndex);\n\t\t\t} else if (newPlayer instanceof Player) {\n\t\t\t\tthis.partyPicker.party.setPlayer(eventID, this.index, newPlayer);\n\n\t\t\t\tif (dragType == DragType.New) {\n\t\t\t\t\tif (isTankSpec(newPlayer.spec)) {\n\t\t\t\t\t\tconst tanks = this.raidPicker.raid.getTanks();\n\t\t\t\t\t\tconst emptyIdx = tanks.findIndex(tank => this.raidPicker.raid.getPlayerFromRaidTarget(tank) == null);\n\t\t\t\t\t\tif (emptyIdx == -1) {\n\t\t\t\t\t\t\tif (tanks.length < 3) {\n\t\t\t\t\t\t\t\tthis.raidPicker.raid.setTanks(eventID, tanks.concat([newPlayer.makeRaidTarget()]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttanks[emptyIdx] = newPlayer.makeRaidTarget();\n\t\t\t\t\t\t\tthis.raidPicker.raid.setTanks(eventID, tanks);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// On creation, boomies should default to innervating themselves.\n\t\t\t\t\tif (newPlayer.spec == Spec.SpecBalanceDruid) {\n\t\t\t\t\t\tsetBalanceDruidSelfInnervate(eventID, newPlayer);\n\t\t\t\t\t} else if (newPlayer.spec == Spec.SpecSmitePriest) {\n\t\t\t\t\t\tsetSmitePriestSelfPI(eventID, newPlayer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.partyPicker.party.setPlayer(eventID, this.index, newPlayer);\n\t\t\t\tthis.partyPicker.party.compChangeEmitter.emit(eventID);\n\t\t\t}\n\t\t});\n\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tif (this.player == null) {\n\t\t\tthis.rootElem.classList.add('empty');\n\t\t\tthis.rootElem.classList.remove('buff-bot');\n\t\t\tthis.rootElem.style.backgroundColor = 'black';\n\t\t\tthis.labelElem.setAttribute('draggable', 'false');\n\t\t\tthis.resultsElem.setAttribute('draggable', 'false');\n\t\t\tthis.nameElem.textContent = '';\n\t\t\tthis.nameElem.removeAttribute('contenteditable');\n\t\t} else if (this.player instanceof BuffBot) {\n\t\t\tthis.rootElem.classList.remove('empty');\n\t\t\tthis.rootElem.classList.add('buff-bot');\n\t\t\tthis.rootElem.style.backgroundColor = classColors[specToClass[this.player.spec]];\n\t\t\tthis.labelElem.setAttribute('draggable', 'true');\n\t\t\tthis.resultsElem.setAttribute('draggable', 'true');\n\t\t\tthis.nameElem.textContent = this.player.name;\n\t\t\tthis.nameElem.removeAttribute('contenteditable');\n\t\t\tthis.iconElem.src = this.player.settings.iconUrl;\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('empty');\n\t\t\tthis.rootElem.classList.remove('buff-bot');\n\t\t\tthis.rootElem.style.backgroundColor = this.player.getClassColor();\n\t\t\tthis.labelElem.setAttribute('draggable', 'true');\n\t\t\tthis.resultsElem.setAttribute('draggable', 'true');\n\t\t\tthis.nameElem.textContent = this.player.getName();\n\t\t\tthis.nameElem.setAttribute('contenteditable', '');\n\t\t\tthis.iconElem.src = this.player.getTalentTreeIcon();\n\t\t}\n\t}\n}\n\nclass PlayerEditorModal extends Component {\n\tconstructor(player: Player<any>) {\n\t\tsuper(document.body, 'player-editor-modal');\n\n\t\tthis.rootElem.id = 'playerEditorModal';\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"player-editor within-raid-sim\">\n\t\t\t</div>\n\t\t`;\n\n\t\tnew CloseButton(this.rootElem, () => {\n\t\t\t$('#playerEditorModal').bPopup().close();\n\t\t\tthis.rootElem.remove();\n\t\t});\n\n\t\tconst editorRoot = this.rootElem.getElementsByClassName('player-editor')[0] as HTMLElement;\n\t\tconst individualSim = specSimFactories[player.spec]!(editorRoot, player);\n\n\t\t$('#playerEditorModal').bPopup({\n\t\t\tcloseClass: 'player-editor-close',\n\t\t\tonClose: () => {\n\t\t\t\tthis.rootElem.remove();\n\t\t\t},\n\t\t});\n\t}\n}\n\nclass NewPlayerPicker extends Component {\n\treadonly raidPicker: RaidPicker;\n\n\tconstructor(parent: HTMLElement, raidPicker: RaidPicker) {\n\t\tsuper(parent, 'new-player-picker-root');\n\t\tthis.raidPicker = raidPicker;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"new-player-picker-controls\">\n\t\t\t\t<div class=\"faction-selector\"></div>\n\t\t\t\t<div class=\"phase-selector\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"presets-container\"></div>\n\t\t\t<div class=\"buff-bots-container\">\n\t\t\t\t<div class=\"buff-bots-title\">\n\t\t\t\t\t<span class=\"buff-bots-title-text\">Buff Bots</span>\n\t\t\t\t\t<span class=\"buff-bots-tooltip fa fa-info-circle\"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst factionSelector = new EnumPicker<NewPlayerPicker>(this.rootElem.getElementsByClassName('faction-selector')[0] as HTMLElement, this, {\n\t\t\tlabel: 'Faction',\n\t\t\tlabelTooltip: 'Default faction for newly-created players.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Alliance', value: Faction.Alliance },\n\t\t\t\t{ name: 'Horde', value: Faction.Horde },\n\t\t\t],\n\t\t\tchangedEvent: (picker: NewPlayerPicker) => this.raidPicker.raid.sim.factionChangeEmitter,\n\t\t\tgetValue: (picker: NewPlayerPicker) => this.raidPicker.raid.sim.getFaction(),\n\t\t\tsetValue: (eventID: EventID, picker: NewPlayerPicker, newValue: Faction) => {\n\t\t\t\tthis.raidPicker.raid.sim.setFaction(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst phaseSelector = new EnumPicker<NewPlayerPicker>(this.rootElem.getElementsByClassName('phase-selector')[0] as HTMLElement, this, {\n\t\t\tlabel: 'Phase',\n\t\t\tlabelTooltip: 'Newly-created players will start with approximate BIS gear from this phase.',\n\t\t\tvalues: [\n\t\t\t\t{ name: '1', value: 1 },\n\t\t\t\t// Presets aren't filled for most roles so disable these options for now.\n\t\t\t\t//{ name: '2', value: 2 },\n\t\t\t\t//{ name: '3', value: 3 },\n\t\t\t\t//{ name: '4', value: 4 },\n\t\t\t\t//{ name: '5', value: 5 },\n\t\t\t],\n\t\t\tchangedEvent: (picker: NewPlayerPicker) => this.raidPicker.raid.sim.phaseChangeEmitter,\n\t\t\tgetValue: (picker: NewPlayerPicker) => this.raidPicker.raid.sim.getPhase(),\n\t\t\tsetValue: (eventID: EventID, picker: NewPlayerPicker, newValue: number) => {\n\t\t\t\tthis.raidPicker.raid.sim.setPhase(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst presetsContainer = this.rootElem.getElementsByClassName('presets-container')[0] as HTMLElement;\n\t\tgetEnumValues(Class).forEach(wowClass => {\n\t\t\tif (wowClass == Class.ClassUnknown) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingPresets = playerPresets.filter(preset => specToClass[preset.spec] == wowClass);\n\t\t\tif (matchingPresets.length == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst classPresetsContainer = document.createElement('div');\n\t\t\tclassPresetsContainer.classList.add('class-presets-container');\n\t\t\tpresetsContainer.appendChild(classPresetsContainer);\n\t\t\tclassPresetsContainer.style.backgroundColor = hexToRgba(classColors[wowClass as Class], 0.5);\n\n\t\t\tmatchingPresets.forEach(matchingPreset => {\n\t\t\t\tconst presetElem = document.createElement('div');\n\t\t\t\tpresetElem.classList.add('preset-picker');\n\t\t\t\tclassPresetsContainer.appendChild(presetElem);\n\n\t\t\t\tconst presetIconElem = document.createElement('img');\n\t\t\t\tpresetIconElem.classList.add('preset-picker-icon');\n\t\t\t\tpresetElem.appendChild(presetIconElem);\n\t\t\t\tpresetIconElem.src = matchingPreset.iconUrl;\n\t\t\t\ttippy(presetIconElem, {\n\t\t\t\t\t'content': matchingPreset.tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\n\t\t\t\tpresetElem.setAttribute('draggable', 'true');\n\t\t\t\tpresetElem.ondragstart = event => {\n\t\t\t\t\tconst eventID = TypedEvent.nextEventID();\n\t\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\t\tconst dragImage = new Image();\n\t\t\t\t\t\tdragImage.src = matchingPreset.iconUrl;\n\t\t\t\t\t\tevent.dataTransfer!.setDragImage(dragImage, 30, 30);\n\t\t\t\t\t\tevent.dataTransfer!.setData(\"text/plain\", \"\");\n\t\t\t\t\t\tevent.dataTransfer!.dropEffect = 'copy';\n\n\n\t\t\t\t\t\tconst newPlayer = new Player(matchingPreset.spec, this.raidPicker.raid.sim);\n\t\t\t\t\t\tnewPlayer.applySharedDefaults(eventID);\n\t\t\t\t\t\tnewPlayer.setRace(eventID, matchingPreset.defaultFactionRaces[this.raidPicker.getCurrentFaction()]);\n\t\t\t\t\t\tnewPlayer.setRotation(eventID, matchingPreset.rotation);\n\t\t\t\t\t\tnewPlayer.setTalentsString(eventID, matchingPreset.talents.talentsString);\n\t\t\t\t\t\tnewPlayer.setGlyphs(eventID, matchingPreset.talents.glyphs || Glyphs.create());\n\t\t\t\t\t\tnewPlayer.setSpecOptions(eventID, matchingPreset.specOptions);\n\t\t\t\t\t\tnewPlayer.setConsumes(eventID, matchingPreset.consumes);\n\t\t\t\t\t\tnewPlayer.setName(eventID, matchingPreset.defaultName);\n\t\t\t\t\t\tnewPlayer.setProfession1(eventID, matchingPreset.otherDefaults?.profession1 || Profession.Engineering);\n\t\t\t\t\t\tnewPlayer.setProfession2(eventID, matchingPreset.otherDefaults?.profession2 || Profession.Jewelcrafting);\n\t\t\t\t\t\tnewPlayer.setDistanceFromTarget(eventID, matchingPreset.otherDefaults?.distanceFromTarget || 0);\n\n\t\t\t\t\t\t// Need to wait because the gear might not be loaded yet.\n\t\t\t\t\t\tthis.raidPicker.raid.sim.waitForInit().then(() => {\n\t\t\t\t\t\t\tnewPlayer.setGear(\n\t\t\t\t\t\t\t\teventID,\n\t\t\t\t\t\t\t\tthis.raidPicker.raid.sim.db.lookupEquipmentSpec(\n\t\t\t\t\t\t\t\t\tmatchingPreset.defaultGear[this.raidPicker.getCurrentFaction()][this.raidPicker.getCurrentPhase()]));\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.raidPicker.setDragPlayer(newPlayer, NEW_PLAYER, DragType.New);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\n\t\tconst buffbotsTooltip = this.rootElem.getElementsByClassName('buff-bots-tooltip')[0] as HTMLElement;\n\t\ttippy(buffbotsTooltip, {\n\t\t\t'content': 'Buff bots do not do DPS or any actions at all, except to buff their raid/party members. They are used as placeholders for classes we haven\\'t implemented yet, or never will (e.g. healers) so that a proper raid environment can still be simulated.',\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst buffbotsContainer = this.rootElem.getElementsByClassName('buff-bots-container')[0] as HTMLElement;\n\t\tgetEnumValues(Class).forEach(wowClass => {\n\t\t\tif (wowClass == Class.ClassUnknown) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingBuffBots = buffBotPresets\n\t\t\t\t.filter(buffBot => specToClass[buffBot.spec] == wowClass)\n\t\t\t\t.filter(buffBot => !buffBot.deprecated);\n\t\t\tif (matchingBuffBots.length == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst classPresetsContainer = document.createElement('div');\n\t\t\tclassPresetsContainer.classList.add('class-presets-container');\n\t\t\tbuffbotsContainer.appendChild(classPresetsContainer);\n\t\t\tclassPresetsContainer.style.backgroundColor = hexToRgba(classColors[wowClass as Class], 0.5);\n\n\t\t\tmatchingBuffBots.forEach(matchingBuffBot => {\n\t\t\t\tconst presetElem = document.createElement('div');\n\t\t\t\tpresetElem.classList.add('preset-picker');\n\t\t\t\tpresetElem.classList.add('preset-picker-buff-bot');\n\t\t\t\tclassPresetsContainer.appendChild(presetElem);\n\n\t\t\t\tconst presetIconElem = document.createElement('img');\n\t\t\t\tpresetIconElem.classList.add('preset-picker-icon');\n\t\t\t\tpresetElem.appendChild(presetIconElem);\n\t\t\t\tpresetIconElem.src = matchingBuffBot.iconUrl;\n\t\t\t\ttippy(presetIconElem, {\n\t\t\t\t\t'content': matchingBuffBot.tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\n\t\t\t\tpresetElem.setAttribute('draggable', 'true');\n\t\t\t\tpresetElem.ondragstart = event => {\n\t\t\t\t\tconst dragImage = new Image();\n\t\t\t\t\tdragImage.src = matchingBuffBot.iconUrl;\n\t\t\t\t\tevent.dataTransfer!.setDragImage(dragImage, 30, 30);\n\t\t\t\t\tevent.dataTransfer!.setData(\"text/plain\", \"\");\n\t\t\t\t\tevent.dataTransfer!.dropEffect = 'copy';\n\n\t\t\t\t\tthis.raidPicker.setDragPlayer(new BuffBot(matchingBuffBot.buffBotId, this.raidPicker.raidSimUI.sim), NEW_PLAYER, DragType.New);\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n}\n\nfunction setBalanceDruidSelfInnervate(eventID: EventID, player: Player<any>) {\n\tconst newOptions = player.getSpecOptions() as BalanceDruidOptions;\n\tnewOptions.innervateTarget = newRaidTarget(player.getRaidIndex());\n\tplayer.setSpecOptions(eventID, newOptions);\n}\nfunction setSmitePriestSelfPI(eventID: EventID, player: Player<any>) {\n\tconst newOptions = player.getSpecOptions() as SmitePriestOptions;\n\tnewOptions.powerInfusionTarget = newRaidTarget(player.getRaidIndex());\n\tplayer.setSpecOptions(eventID, newOptions);\n}\n","import { Component } from '../core/components/component.js';\nimport { Input, InputConfig } from '../core/components/input.js';\nimport { RaidTargetPicker } from '../core/components/raid_target_picker.js';\nimport { Player } from '../core/player.js';\nimport { Raid } from '../core/raid.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { Class } from '../core/proto/common.js';\nimport { RaidTarget } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { emptyRaidTarget } from '../core/proto_utils/utils.js';\n\nimport { RaidSimUI } from './raid_sim_ui.js';\n\ndeclare var tippy: any;\n\nconst MAX_TANKS = 4;\n\nexport class TanksPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parentElem, 'tanks-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<fieldset class=\"tanks-picker-container settings-section\">\n\t\t\t\t<legend>TANKS</legend>\n\t\t\t</fieldset>\n\t\t`;\n\n\t\tconst tanksContainer = this.rootElem.getElementsByClassName('tanks-picker-container')[0] as HTMLElement;\n\t\tconst raid = this.raidSimUI.sim.raid;\n\n\t\tfor (let i = 0; i < MAX_TANKS; i++) {\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('tank-picker-row');\n\t\t\ttanksContainer.appendChild(row);\n\n\t\t\tconst sourceElem = document.createElement('span');\n\t\t\tsourceElem.textContent = i == 0 ? 'MAIN TANK' : `TANK ${i + 1}`;\n\t\t\tsourceElem.classList.add('tank-picker-label');\n\t\t\trow.appendChild(sourceElem);\n\n\t\t\tconst arrow = document.createElement('span');\n\t\t\tarrow.classList.add('fa', 'fa-arrow-right');\n\t\t\trow.appendChild(arrow);\n\n\t\t\tconst tankIndex = i;\n\t\t\tconst raidTargetPicker = new RaidTargetPicker<Raid>(row, raid, raid, {\n\t\t\t\textraCssClasses: [\n\t\t\t\t\t'tank-picker',\n\t\t\t\t],\n\t\t\t\tnoTargetLabel: 'Unassigned',\n\t\t\t\tcompChangeEmitter: raid.compChangeEmitter,\n\n\t\t\t\tchangedEvent: (raid: Raid) => raid.tanksChangeEmitter,\n\t\t\t\tgetValue: (raid: Raid) => raid.getTanks()[tankIndex] || emptyRaidTarget(),\n\t\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: RaidTarget) => {\n\t\t\t\t\tconst tanks = raid.getTanks();\n\t\t\t\t\tfor (let i = 0; i < tankIndex; i++) {\n\t\t\t\t\t\tif (!tanks[i]) {\n\t\t\t\t\t\t\ttanks.push(emptyRaidTarget());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttanks[tankIndex] = newValue;\n\t\t\t\t\traid.setTanks(eventID, tanks);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n}\n","import { Exporter } from '../core/components/exporters.js';\nimport { Importer } from '../core/components/importers.js';\nimport { MAX_PARTY_SIZE } from '../core/party.js';\nimport { BuffBot, RaidSimSettings } from '../core/proto/ui.js';\nimport { TypedEvent } from '../core/typed_event.js';\nimport { Party as PartyProto, Player as PlayerProto, Raid as RaidProto } from '../core/proto/api.js';\nimport { Encounter as EncounterProto, EquipmentSpec, ItemSpec, MobType, Spec, Target as TargetProto, RaidTarget, Faction } from '../core/proto/common.js';\nimport { nameToClass } from '../core/proto_utils/names.js';\nimport { makeDefaultBlessings, specTypeFunctions, withSpecProto, isTankSpec, playerToSpec } from '../core/proto_utils/utils.js';\nimport { MAX_NUM_PARTIES } from '../core/raid.js';\nimport { Player } from '../core/player.js';\nimport { Target } from '../core/target.js';\n\nimport { playerPresets, PresetSpecSettings } from './presets.js';\nimport { RaidSimUI } from './raid_sim_ui.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class RaidJsonImporter extends Importer {\n\tprivate readonly simUI: RaidSimUI;\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\n\t\tsuper(parent, 'JSON Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from a JSON text file, which can be created using the JSON Export feature of this site.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the JSON text below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst settings = RaidSimSettings.fromJsonString(data);\n\t\tthis.simUI.fromProto(TypedEvent.nextEventID(), settings);\n\t\tthis.close();\n\t}\n}\n\nexport class RaidJsonExporter extends Exporter {\n\tprivate readonly simUI: RaidSimUI;\n\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\n\t\tsuper(parent, 'JSON Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn JSON.stringify(RaidSimSettings.toJson(this.simUI.toProto()), null, 2);\n\t}\n}\n\nexport class RaidWCLImporter extends Importer {\n\n\tprivate queryCounter: number = 0;\n\n\tprivate readonly simUI: RaidSimUI;\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\n\t\tsuper(parent, 'WCL Import', false);\n\t\tthis.simUI = simUI;\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport entire raid from a WCL report.<br>\n\t\t\t\tParties are a best guess based on buffs.<br>\n\t\t\t\tDouble check innervate/PI and paladin buffs in the settings after import.<br>\n\t\t\t\tDoes not support fight=last currently (will default any non-numeric fight ID to be 0)<br>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the WCL report and fight link (https://classic.warcraftlogs.com/reports/REPORTID#fight=FIGHTID).<br>\n\t\t\t\tInclude the fight ID or else first found fight will be used.<br>\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tprivate getWCLBearerToken(): Promise<string> {\n\n\t\treturn fetch('https://classic.warcraftlogs.com/oauth/token', {\n\t\t\t'method': 'POST',\n\t\t\t'headers': {\n\t\t\t\t'Authorization': 'Basic ' + btoa('963d31c8-7efa-4dde-87cf-1b254a8a2f8c:lRJVhujEEnF96xfUoxVHSpnqKN9v8bTqGEjutsO3'),\n\t\t\t},\n\t\t\tbody: new URLSearchParams({\n\t\t\t\t'grant_type': 'client_credentials',\n\t\t\t}),\n\t\t}).then(response => response.json())\n\t\t\t.then(res => res.access_token)\n\t\t\t.catch(err => { // TODO: handle error\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}\n\n\tprivate queryWCL(query: string, token: string): Promise<any> {\n\t\tconst headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Bearer ${token}`,\n\t\t\t'Accept': 'application/json',\n\t\t};\n\n\t\tconst queryURL = `https://classic.warcraftlogs.com/api/v2/client?query=${query}`;\n\n\t\tthis.queryCounter++;\n\n\t\t// Query WCL\n\t\treturn fetch(encodeURI(queryURL), {\n\t\t\t'method': 'GET',\n\t\t\t'headers': headers,\n\t\t}).then(res => res.json());\n\t}\n\n\tprivate getURLInfo(url: string): { reportID: string; fightID: string } {\n\n\t\tlet urlInfo = { reportID: '', fightID: '0' };\n\n\t\tif (!url.includes('warcraftlogs.com')) {\n\t\t\tconsole.error('Invalid WCL URL', url, 'must be from warcraftlogs.com');\n\t\t\treturn urlInfo;\n\t\t}\n\n\t\tlet fightIDIndex = url.indexOf('fight=');\n\t\tlet reportIDIndex = url.indexOf('/reports/');\n\n\t\tif (reportIDIndex === -1) {\n\t\t\tconsole.error('Could not find report ID in URL', url);\n\t\t\treturn urlInfo;\n\t\t}\n\n\t\treportIDIndex += 9; // 9 = length of '/reports/'\n\t\tconst reportIDLength = 16;\n\n\t\tif (fightIDIndex !== -1) {\n\t\t\tfightIDIndex += 6; // 6 = length of 'fight='\n\n\t\t\tlet fightID = parseInt(url.substring(fightIDIndex), 10);\n\n\t\t\tif (isNaN(fightID)) {\n\t\t\t\tfightID = 0;\n\t\t\t}\n\n\t\t\turlInfo.fightID = fightID.toString();\n\t\t} else {\n\t\t\tconsole.warn('Could not find fight ID in URL', url, 'defaulting to fight 0');\n\t\t}\n\n\t\turlInfo.reportID = url.substring(reportIDIndex, reportIDIndex + reportIDLength) ?? '';\n\n\t\treturn urlInfo\n\t}\n\n\tprivate getRateLimit(token: string): Promise<wclRateLimitData> {\n\t\tconst query = `\n\t  {\n\t    rateLimitData {\n\t      limitPerHour, pointsSpentThisHour, pointsResetIn\n\t    }\n\t  }`;\n\t\treturn this.queryWCL(query, token)\n\t\t\t.then((res) => res['data']['rateLimitData'] as wclRateLimitData);\n\t}\n\n\tasync onImport(importLink: string) {\n\t\tthis.importButton.disabled = true;\n\t\tthis.rootElem.style.cursor = 'wait';\n\t\tthis.doImport(importLink).then(() => {\n\t\t\tthis.importButton.disabled = false\n\t\t\tthis.rootElem.style.removeProperty('cursor');\n\t\t})\n\t}\n\n\tasync doImport(importLink: string) {\n\t\tif (!importLink.length) {\n\t\t\tconsole.error('No import link provided!');\n\t\t\treturn;\n\t\t}\n\n\t\tlet urlInfo = this.getURLInfo(importLink);\n\n\t\tconst reportID = urlInfo.reportID;\n\t\tconst fightID = urlInfo.fightID;\n\n\t\tif (!reportID.length) {\n\t\t\tconsole.error('Could not find report ID in URL', importLink);\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear the raid out to avoid any taint issues.\n\t\tthis.simUI.clearRaid(TypedEvent.nextEventID());\n\n\t\tconst token = await this.getWCLBearerToken();\n\n\t\tconst rateLimitBuffer = 30; // WCL Query point buffer\n\t\tconst rateLimitStart: wclRateLimitData = await this.getRateLimit(token);\n\n\t\t// Slower but more accurate way to generate the raid sim.\n\t\t// Generates players into the groups that they were in during the fight.\n\t\t// If the rate limit is close to max, then it will create the raid parties 'randomly'.\n\t\tlet experimentalGenerateParties: boolean = rateLimitStart.pointsSpentThisHour + rateLimitBuffer < rateLimitStart.limitPerHour;\n\n\t\tconsole.info('Importing WCL report', reportID, 'fight', fightID, 'Generate Parties:', experimentalGenerateParties);\n\n\t\tconst reportDataQuery = `\n\t\t\t\t{\n\t\t\t\t\treportData {\n\t\t\t\t\t\treport(code: \"${reportID}\") {\n\t\t\t\t\t\t\tguild {\n\t\t\t\t\t\t\t\tname faction {id}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tplayerDetails: table(fightIDs: [${fightID}], endTime: 99999999, dataType: Casts, killType: All, viewBy: Default)\n\t\t\t\t\t\t\tfights(fightIDs: [${fightID}]) {\n\t\t\t\t\t\t\t\tstartTime, endTime, id, name\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinnervates: table(fightIDs: [${fightID}], dataType:Casts, endTime: 99999999, sourceClass: \"Druid\", abilityID: 29166),\n\t\t\t\t\t\t\tpowerInfusion: table(fightIDs: [${fightID}], dataType:Casts, endTime: 99999999, sourceClass: \"Priest\", abilityID: 10060)\n\t\t\t\t\t\t\ttricksOfTheTrade: table(fightIDs: [${fightID}], dataType:Casts, endTime: 99999999, sourceClass: \"Rogue\", abilityID: 57933)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t`;\n\n\t\tconst reportData = await this.queryWCL(reportDataQuery, token);\n\t\tif (reportData.errors != undefined && reportData.errors != null && reportData.errors.length) {\n\t\t\tconst errorData = reportData.errors.reduce((accumulator: string, error: any) => {\n\t\t\t\treturn accumulator + error.message;\n\t\t\t}, \"\");\n\t\t\talert(\"Failed to import: \" + errorData);\n\t\t\treturn;\n\t\t}\n\t\t// Process the report data.\n\t\tconst wclData = reportData.data.reportData.report; // TODO: Typings?\n\n\t\tconst guildData = wclData.guild;\n\t\tconst playerData: wclPlayer[] = wclData.playerDetails.data.entries;\n\t\tconst innervateData: wclBuffCastsData[] = wclData.innervates.data.entries;\n\t\tconst powerInfusionData: wclBuffCastsData[] = wclData.powerInfusion.data.entries;\n\t\tconst tricksOfTheTradeData: wclBuffCastsData[] = wclData.tricksOfTheTrade.data.entries;\n\n\t\t// Set up the general variables we need for import to be successful.\n\t\tconst fight: { startTime: number, endTime: number, id: number, name: string } = wclData.fights[0];\n\t\tconst startTime: number = fight.startTime;\n\t\tconst endTime: number = fight.endTime;\n\n\t\t// Default to UI setting\n\t\tlet faction = this.simUI.raidPicker?.getCurrentFaction();\n\n\t\t// If defined in log, use that faction.\n\t\tif (guildData != null) {\n\t\t\tfaction = guildData.faction.id as Faction;\n\t\t}\n\n\t\t// Fallback if UI is broken and log has no faction.\n\t\tif (faction == undefined) {\n\t\t\tfaction = Faction.Horde;\n\t\t}\n\n\t\tconst encounter = EncounterProto.create();\n\t\tencounter.duration = (endTime - startTime) / 1000;\n\n\t\tencounter.targets = new Array<TargetProto>();\n\n\t\tlet closestEncounterPreset = this.simUI.sim.db.getAllPresetEncounters().find((enc) => enc.path.includes(fight.name));\n\n\t\t// Use the preset encounter if it exists.\n\t\tif (closestEncounterPreset && closestEncounterPreset.targets.length) {\n\t\t\tclosestEncounterPreset.targets\n\t\t\t\t.map((mob) => mob.target as TargetProto)\n\t\t\t\t.filter((target) => target !== undefined)\n\t\t\t\t.forEach((target) => encounter.targets.push(target));\n\t\t}\n\n\t\t// Build a manual target list if no preset encounter exists.\n\t\tif (encounter.targets.length === 0) {\n\t\t\tencounter.targets.push(Target.defaultProto());\n\t\t}\n\n\t\tconst settings = RaidSimSettings.create();\n\t\tsettings.encounter = encounter;\n\n\t\tconst raid = RaidProto.create();\n\t\traid.parties = new Array<PartyProto>();\n\t\tsettings.raid = raid;\n\n\t\tconst buffBots = new Array<BuffBot>();\n\n\t\t// Raid index of players that received innervates\n\t\tconst wclIDtoRaidIndex = new Map<number, number>();\n\n\t\tconst numPaladins = playerData.filter((player) => player.type === 'Paladin').length;\n\n\t\t// Generate an empty set of 3 dimensional arrays for each party. [ party ][ player or buffBot ][ player ]\n\t\tlet tempParties: WCLSimPlayer[][] = Array.from({ length: MAX_NUM_PARTIES }).map(() => []);\n\n\t\t// Generate the default 5 raid parties & temp parties.\n\t\ttempParties.forEach(() => raid.parties.push(PartyProto.create()));\n\n\t\t// Sorts an objectArray by a property. Returns a new array.\n\t\t// Can be called recursively.\n\t\tconst sortByProperty = (objArray: any[], prop: string) => {\n\t\t\tif (!Array.isArray(objArray)) throw new Error('FIRST ARGUMENT NOT AN ARRAY');\n\t\t\tconst clone = objArray.slice(0);\n\t\t\tconst direct = arguments.length > 2 ? arguments[2] : 1; //Default to ascending\n\t\t\tconst propPath = (prop.constructor === Array) ? prop : prop.split('.');\n\t\t\tclone.sort(function(a, b) {\n\t\t\t\tfor (let p in propPath) {\n\t\t\t\t\tif (a[propPath[p]] && b[propPath[p]]) {\n\t\t\t\t\t\ta = a[propPath[p]];\n\t\t\t\t\t\tb = b[propPath[p]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// convert numeric strings to integers\n\t\t\t\ta = a.toString().match(/^\\d+$/) ? +a : a;\n\t\t\t\tb = b.toString().match(/^\\d+$/) ? +b : b;\n\t\t\t\treturn ((a < b) ? -1 * direct : ((a > b) ? 1 * direct : 0));\n\t\t\t});\n\t\t\treturn clone;\n\t\t}\n\n\t\tconst mappedPlayers = playerData\n\t\t\t.map((wclPlayer) => new WCLSimPlayer(wclPlayer, this.simUI, faction));\n\n\t\tconst processBuffCastData = (buffCastData: wclBuffCastsData[]): { player: WCLSimPlayer, target: string }[] => {\n\t\t\tconst playerCasts: { player: WCLSimPlayer, target: string }[] = [];\n\t\t\tif (buffCastData.length) {\n\t\t\t\tbuffCastData.forEach((cast) => {\n\t\t\t\t\tconst sourcePlayer = mappedPlayers.find((player) => player.name === cast.name);\n\t\t\t\t\tconst targetPlayer = mappedPlayers.find((player) => player.name === cast.targets[0].name);\n\n\t\t\t\t\t// Buff bots do not get PI/Innervates.\n\t\t\t\t\tif (sourcePlayer && targetPlayer && !targetPlayer.isBuffBot) {\n\t\t\t\t\t\tplayerCasts.push({ player: sourcePlayer, target: targetPlayer.name });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn playerCasts;\n\t\t}\n\n\t\tprocessBuffCastData(innervateData).forEach((cast) => cast.player.innervateTarget = cast.target);\n\t\tprocessBuffCastData(powerInfusionData).forEach((cast) => cast.player.powerInfusionTarget = cast.target);\n\t\tprocessBuffCastData(tricksOfTheTradeData).forEach((cast) => cast.player.tricksOfTheTradeTarget = cast.target);\n\n\t\tconst wclPlayers: WCLSimPlayer[] = sortByProperty(sortByProperty(mappedPlayers, 'type'), 'sortPriority');\n\n\t\tlet raidIndex = 0;\n\n\t\t// Sorts buff bots to the end of the array to prevent overwriting them later on.\n\t\tconst sortBuffBotsLast = (a: WCLSimPlayer, b: WCLSimPlayer) => a.isBuffBot ? 1 : b.isBuffBot ? 1 : 0;\n\n\t\t// Reusable function to add a player to the raid.parties[raidIndex] array.\n\t\tconst assignPlayerToParty = (player: WCLSimPlayer, raidParty: PartyProto, missing = false) => {\n\n\t\t\tif (!player) {\n\t\t\t\tconsole.error('Cannot assign player to party because player is undefined!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!raidParty) {\n\t\t\t\tconsole.error('Cannot assign player to party because party is undefined!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (raidParty.players.length === MAX_PARTY_SIZE) {\n\t\t\t\tconsole.error('Cannot assign player to party because party is full!', player, raidParty.players);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (missing) {\n\t\t\t\tconsole.warn(`Could not locate a group for ${player.name}, assigning them to an open group.`);\n\t\t\t}\n\n\t\t\tlet buffBot = player.getBuffBot();\n\t\t\tlet simPlayer = player.getPlayer();\n\n\t\t\tif (!buffBot && !simPlayer) {\n\t\t\t\tconsole.error('Cannot assign player to party because player data is undefined!', player);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twclIDtoRaidIndex.set(player.id, raidIndex);\n\n\t\t\tif (buffBot) {\n\t\t\t\tbuffBot.raidIndex = raidIndex;\n\t\t\t\tbuffBots.push(buffBot);\n\t\t\t\traidParty.players.push(PlayerProto.create());\n\t\t\t} else if (simPlayer) {\n\t\t\t\traidParty.players.push(simPlayer);\n\t\t\t\tif (isTankSpec(playerToSpec(simPlayer))) {\n\t\t\t\t\tlet rt = RaidTarget.create();\n\t\t\t\t\trt.targetIndex = wclIDtoRaidIndex.get(player.id)!;\n\t\t\t\t\tsettings.raid!.tanks.push(rt);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Just in case this did not get set previously.\n\t\t\tplayer.partyAssigned = true;\n\n\t\t\traidIndex++;\n\t\t}\n\n\t\t// if experimental_generate_parties is true, we will generate parties based on the party buffers\n\t\tif (experimentalGenerateParties) {\n\n\t\t\t// We only care about the players who can provide party buffs on logs.\n\t\t\tconst partyBuffPlayers = wclPlayers.filter((player) => player.isPartyBuffer);\n\n\t\t\t// Can't be a forEach because we need to wait for the query to finish on each iteration later on.\n\t\t\tfor (const player of partyBuffPlayers) {\n\n\t\t\t\tconst partyFull = player.partyMembers.length >= MAX_PARTY_SIZE;\n\n\t\t\t\t// Skip players that have already been assigned to a party.\n\t\t\t\t// player.partyAssigned || player.partyFound || player.partyMembers.length > 0\n\t\t\t\tif (partyFull) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst auraIDs: number[] = player.getPartyAuraIds();\n\n\t\t\t\tif (!auraIDs.length) {\n\t\t\t\t\tconsole.warn('No party aura ids found for partyBuff player ' + player.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet auraBuffQueries = auraIDs.map((auraID) => `\n\t\t\t\t{\n\t\t\t\t\treportData {\n\t\t\t\t\t\treport(code: \"${reportID}\") {\n\t\t\t\t\ttable(startTime: ${startTime}, endTime: ${endTime}, sourceID: ${player.id}, abilityID: ${auraID}, fightIDs: [${fightID}],dataType:Buffs,viewBy:Target,hostilityType:Friendlies)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}`);\n\n\t\t\t\tlet auraTargets: wclAura[] = [];\n\n\t\t\t\t// Can't be a forEach because we need to await each query.\n\t\t\t\tfor (let i = 0; i < auraBuffQueries.length; i++) {\n\n\t\t\t\t\tif (auraTargets.length >= MAX_PARTY_SIZE || partyFull) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet auraQueryRes = await this.queryWCL(auraBuffQueries[i], token);\n\t\t\t\t\tif (auraQueryRes) {\n\t\t\t\t\t\tlet playerAuras: wclAura[] = auraQueryRes.data?.reportData?.report?.table?.data?.auras ?? [];\n\t\t\t\t\t\tif (playerAuras.length) {\n\n\t\t\t\t\t\t\tplayerAuras = playerAuras.filter((auraTarget) => auraTarget.type !== 'Pet')\n\t\t\t\t\t\t\t\t.sort((a, b) => a.bands[0].startTime - b.bands[0].startTime)\n\t\t\t\t\t\t\t\t.filter((auraTarget, index) => index < 5);\n\n\t\t\t\t\t\t\tconst uniqueAuraTargets = playerAuras.filter((auraTarget) => !auraTargets.some((target) => target.name === auraTarget.name));\n\t\t\t\t\t\t\tauraTargets.push(...uniqueAuraTargets);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (auraTargets.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tplayer.partyFound = true;\n\n\t\t\t\t// Only need the member names at this point.\n\t\t\t\tplayer.partyMembers = auraTargets.map((auraTarget) => auraTarget.name);\n\n\t\t\t\tlet partyMembers = wclPlayers\n\t\t\t\t\t.filter((raidMember) => player.partyMembers.includes(raidMember.name))\n\t\t\t\t\t.filter((raidMember) => !raidMember.partyAssigned);\n\n\t\t\t\tconst totalPartyMembers = partyMembers.length;\n\n\t\t\t\t// Find an empty temp party to assign the members to.\n\t\t\t\tlet partyIndex: number = tempParties.findIndex((party) => party.length < MAX_PARTY_SIZE && party.length < totalPartyMembers);\n\n\t\t\t\t// Try and see if any of the parties have your party members in it without you.\n\t\t\t\tif (partyIndex === -1) {\n\t\t\t\t\tconsole.warn('No empty temp party found for player ' + player.name);\n\t\t\t\t\tpartyIndex = tempParties\n\t\t\t\t\t\t.filter((party) => party.length < MAX_PARTY_SIZE)\n\t\t\t\t\t\t.findIndex((party) => party.some((member) => player.partyMembers.includes(member.name)));\n\t\t\t\t\tconsole.info('Found party with members in it: ' + partyIndex);\n\t\t\t\t}\n\n\t\t\t\tlet party: WCLSimPlayer[] = tempParties[partyIndex];\n\n\t\t\t\tpartyMembers.forEach((partyMember) => {\n\n\t\t\t\t\tconst isUndefined = party === undefined;\n\t\t\t\t\tconst isFull = party.length === MAX_PARTY_SIZE;\n\n\t\t\t\t\tif (isUndefined || isFull) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tpartyMember.partyAssigned = true;\n\t\t\t\t\tpartyMember.partyMembers = player.partyMembers;\n\n\t\t\t\t\tparty.push(partyMember);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Process the temp groups into the sim raid groups.\n\t\t\ttempParties.forEach((party, partyIndex) => {\n\n\t\t\t\tlet raidParty = raid.parties[partyIndex];\n\n\t\t\t\tparty\n\t\t\t\t\t.sort(sortBuffBotsLast)\n\t\t\t\t\t.forEach((player) => assignPlayerToParty(player, raidParty));\n\t\t\t});\n\t\t}\n\n\t\t// Process the players who didn't get assigned a group yet.\n\t\twclPlayers\n\t\t\t.filter((player) => !player.partyAssigned)\n\t\t\t.sort(sortBuffBotsLast)\n\t\t\t.map((player) => {\n\t\t\t\tlet raidParty = raid.parties.filter((party) => party.players.length < MAX_PARTY_SIZE)[0];\n\t\t\t\tassignPlayerToParty(player, raidParty, true);\n\t\t\t});\n\n\t\t// Insert the innervate / PI buffs into the options for the raid.\n\t\twclPlayers\n\t\t\t.filter((player) => player.innervateTarget || player.powerInfusionTarget || player.tricksOfTheTradeTarget)\n\t\t\t.forEach((player) => {\n\n\t\t\t\tconst target: wclSimPlayer | undefined = wclPlayers.find((wclPlayer) => wclPlayer.name === player.innervateTarget || player.name === player.powerInfusionTarget || player.name === player.tricksOfTheTradeTarget);\n\n\t\t\t\tif (!target) {\n\t\t\t\t\tconsole.warn('Could not find target assignment player');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst targetID: number = target.id;\n\t\t\t\tconst targetRaidIndex: number | undefined = wclIDtoRaidIndex.get(targetID);\n\n\t\t\t\tif (!targetRaidIndex) {\n\t\t\t\t\tconsole.warn(`Could not find ${target.name} raid index!`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (player.isBuffBot) {\n\t\t\t\t\tconst playerID: number = player.id;\n\t\t\t\t\tconst playerRaidIndex: number | undefined = wclIDtoRaidIndex.get(playerID);\n\t\t\t\t\tconst buffBot = buffBots.find((buffBot) => buffBot.raidIndex === playerRaidIndex);\n\t\t\t\t\tif (buffBot) {\n\t\t\t\t\t\tif (player.innervateTarget) {\n\t\t\t\t\t\t\tbuffBot.innervateAssignment = RaidTarget.create();\n\t\t\t\t\t\t\tbuffBot.innervateAssignment.targetIndex = targetRaidIndex\n\t\t\t\t\t\t} else if (player.powerInfusionTarget) {\n\t\t\t\t\t\t\tbuffBot.powerInfusionAssignment = RaidTarget.create();\n\t\t\t\t\t\t\tbuffBot.powerInfusionAssignment.targetIndex = targetRaidIndex\n\t\t\t\t\t\t} else if (player.tricksOfTheTradeTarget) {\n\t\t\t\t\t\t\tbuffBot.tricksOfTheTradeAssignment = RaidTarget.create();\n\t\t\t\t\t\t\tbuffBot.tricksOfTheTradeAssignment.targetIndex = targetRaidIndex\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Regular players.\n\n\t\t\t\tconst raidParty = raid.parties.filter((party) => party.players.some((raidPlayer) => raidPlayer.name === player.name))[0];\n\n\t\t\t\tif (!raidParty) {\n\t\t\t\t\tconsole.warn('Could not find raiding party for player ' + player.name);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst raidPlayer = raidParty.players.find((raidPlayer) => raidPlayer.name === player.name);\n\n\t\t\t\tif (!raidPlayer) {\n\t\t\t\t\tconsole.warn('Could not find raid player ' + player.name + ' in raid party ' + raidParty);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (player.innervateTarget) {\n\t\t\t\t\tif (raidPlayer.spec.oneofKind == 'balanceDruid') {\n\t\t\t\t\t\traidPlayer.spec.balanceDruid.options!.innervateTarget = RaidTarget.create();\n\t\t\t\t\t\traidPlayer.spec.balanceDruid.options!.innervateTarget.targetIndex = targetRaidIndex;\n\t\t\t\t\t} else if (raidPlayer.spec.oneofKind == 'feralDruid') {\n\t\t\t\t\t\traidPlayer.spec.feralDruid.options!.innervateTarget = RaidTarget.create();\n\t\t\t\t\t\traidPlayer.spec.feralDruid.options!.innervateTarget.targetIndex = targetRaidIndex;\n\t\t\t\t\t} else if (raidPlayer.spec.oneofKind == 'feralTankDruid') {\n\t\t\t\t\t\traidPlayer.spec.feralTankDruid.options!.innervateTarget = RaidTarget.create();\n\t\t\t\t\t\traidPlayer.spec.feralTankDruid.options!.innervateTarget.targetIndex = targetRaidIndex;\n\t\t\t\t\t}\n\t\t\t\t} else if (player.powerInfusionTarget) {\n\t\t\t\t\t// Pretty sure there is no shadow priest that has PI\n\t\t\t\t} else if (player.tricksOfTheTradeTarget) {\n\t\t\t\t\t// TODO: I'm not sure what I'm supposed to do here\n\t\t\t\t}\n\t\t\t});\n\n\t\twclPlayers\n\t\t\t.filter((player) => !player.partyAssigned)\n\t\t\t.forEach((player) => {\n\t\t\t\tconsole.error(`${player.name} is not in a party!`, player);\n\t\t\t});\n\n\t\tsettings.blessings = makeDefaultBlessings(numPaladins);\n\n\t\tthis.simUI.fromProto(TypedEvent.nextEventID(), settings);\n\t\tthis.simUI.setBuffBots(TypedEvent.nextEventID(), buffBots);\n\n\t\tif (!experimentalGenerateParties) {\n\t\t\tconst rateLimitEnd: wclRateLimitData = await this.getRateLimit(token);\n\t\t\tconsole.debug(`Rate Limit resets in ${rateLimitEnd.pointsResetIn} seconds.`);\n\t\t}\n\n\t\tthis.close();\n\t}\n}\n\nclass WCLSimPlayer implements wclSimPlayer {\n\tpublic gear: wclGear[];\n\tpublic icon: string;\n\tpublic id: number;\n\tpublic name: string;\n\tpublic type: string;\n\tpublic talents: wclTalents[];\n\tpublic wclSpec: string;\n\n\tpublic partyAssigned: boolean = false;\n\tpublic partyFound: boolean = false;\n\tpublic partyMembers: string[] = [];\n\n\tpublic isPartyBuffer: boolean = false;\n\tpublic isBuffBot: boolean = false;\n\tpublic sortPriority: number = 99;\n\n\tpublic innervateTarget: string | undefined;\n\tpublic powerInfusionTarget: string | undefined;\n\tpublic tricksOfTheTradeTarget: string | undefined;\n\n\tprivate simUI: RaidSimUI;\n\tprivate spec: Spec;\n\tprivate specType: string;\n\tprivate faction: Faction;\n\n\tconstructor(data: wclPlayer, simUI: RaidSimUI, faction: Faction = Faction.Unknown) {\n\t\tthis.simUI = simUI;\n\n\t\tthis.name = data.name;\n\t\tthis.gear = data.gear;\n\t\tthis.icon = data.icon;\n\t\tthis.id = data.id;\n\t\tthis.type = data.type;\n\t\tthis.talents = data.talents;\n\t\tthis.wclSpec = data.icon.split('-')[1];\n\t\tthis.faction = faction;\n\n\t\t// Prot Paladin's occasionally have a specType of 'Protection' instead of 'Justicar'?\n\t\tif (this.type === 'Paladin' && this.wclSpec === 'Protection') {\n\t\t\tthis.wclSpec = 'Justicar';\n\t\t}\n\n\t\tthis.spec = specNames[this.wclSpec];\n\t\tthis.specType = this.wclSpec + this.type;\n\n\t\tthis.isBuffBot = this.spec === undefined;\n\n\t\tthis.isPartyBuffer = this.getPartyAuraIds().length > 1;\n\n\t\tthis.sortPriority = specSortPriority[this.wclSpec] ?? 99;\n\t}\n\n\tpublic getPlayer(): PlayerProto | undefined {\n\n\t\tif (this.isBuffBot) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet player = PlayerProto.create();\n\n\t\tconst specFuncs = specTypeFunctions[this.spec];\n\n\t\tconst matchingPreset = this.getMatchingPreset();\n\n\t\tif (matchingPreset === undefined) {\n\t\t\tconsole.error('Could not find matching preset for non buff bot', {\n\t\t\t\t'name': this.name,\n\t\t\t\t'spec': this.spec,\n\t\t\t\t'type': this.type,\n\t\t\t\t'talents': this.talents,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tplayer = withSpecProto(this.spec, player, matchingPreset.rotation, specFuncs.talentsCreate(), matchingPreset.specOptions);\n\n\t\tplayer.talentsString = matchingPreset.talents.talentsString;\n\t\tplayer.glyphs = matchingPreset.talents.glyphs;\n\t\tplayer.consumes = matchingPreset.consumes;\n\n\t\tplayer.name = this.name;\n\t\tplayer.class = nameToClass(this.type);\n\t\tplayer.equipment = this.getEquipment();\n\t\tplayer.race = matchingPreset.defaultFactionRaces[this.faction];\n\n\t\tPlayer.applySharedDefaultsToProto(player);\n\n\t\treturn player;\n\t}\n\n\tpublic getBuffBot(): BuffBot | undefined {\n\n\t\tif (!this.isBuffBot) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst botID = buffBotNames[this.specType];\n\n\t\tif (botID == null) {\n\t\t\tconsole.error('Buff Bot Spec not implemented: ', this.specType);\n\t\t\treturn;\n\t\t}\n\n\t\tconst bot = BuffBot.create();\n\t\tbot.id = botID;\n\t\tbot.raidIndex = -1; // Default it for now. // numPlayers\n\n\t\treturn bot;\n\t}\n\n\tpublic getPartyAuraIds() {\n\n\t\tconst allSpecClassAuras: any = {\n\t\t\t'Paladin': [\n\t\t\t\t19746, // Concentration Aura\n\t\t\t\t27149, // Devotion Aura,\n\t\t\t\t27150, // Retribution Aura\n\t\t\t],\n\t\t\t'Warrior': [\n\t\t\t\t2048,  // Battle Shout\n\t\t\t\t469, // Commanding Shout\n\t\t\t],\n\t\t\t'Warlock': [\n\t\t\t\t27268, // Pet Imp: Blood Pact\n\t\t\t\t18696, // Improved Imp: Blood Pact\n\t\t\t],\n\t\t};\n\n\t\t// Reused for the plethora of Feral specs.\n\t\tconst feralDruidSpecAuras = [\n\t\t\t24932, // Improved Leader of the Pack // at least 0,32,0\n\t\t\t// 17007, // Leader of the Pack // at least 0,31,0\n\t\t];\n\n\t\t// TODO: Could additionally filter out buff IDs based on minimum req talent strings?\n\t\tconst specSpecificAuras: any = {\n\t\t\t'RetributionPaladin': [\n\t\t\t\t20092, // Improved Retribution Aura // at least 0,0,16\n\t\t\t\t20218, // Sanctity Aura // at least 0,0,21\n\t\t\t\t31870, // Improved Sanctity Aura // at least 0,0,22\n\t\t\t],\n\t\t\t'GuardianDruid': [...feralDruidSpecAuras],\n\t\t\t'WardenDruid': [...feralDruidSpecAuras],\n\t\t\t'FeralDruid': [...feralDruidSpecAuras],\n\t\t\t'BalanceDruid': [\n\t\t\t\t24907, // Moonkin Aura // at least 31,0,0\n\t\t\t],\n\t\t\t'RestorationDruid': [\n\t\t\t\t34123, // Tree of Life // at least 0,0,41\n\t\t\t],\n\t\t\t'MarksmanHunter': [\n\t\t\t\t27066, // Trueshot Aura // at least 0,32,0\n\t\t\t],\n\t\t\t'EnhancementShaman': [\n\t\t\t\t30811, // Unleashed Rage // at least 0,36,0\n\t\t\t],\n\t\t\t// 'ElementalShaman': [] // Totem buffs do not show up in logs. Leaving for future reference.\n\t\t};\n\n\t\tconst consumableAuras = [\n\t\t\t351355, // Greater Drums of Battle\n\t\t];\n\n\t\tconst classAuras = allSpecClassAuras[this.type] ?? [];\n\t\tconst specAuras = specSpecificAuras[this.specType] ?? [];\n\n\t\tconst reliableAuras = [\n\t\t\t...specAuras, ...classAuras, ...consumableAuras,\n\t\t];\n\n\t\tif (this.type === 'Shaman') {\n\t\t\t// Shamans get moved around a lot, so Heroism isn't a good reference for what group they are in.\n\t\t\treturn [\n\t\t\t\t...reliableAuras,\n\t\t\t\t32182, // Heroism\n\t\t\t];\n\t\t}\n\t\treturn reliableAuras;\n\t}\n\n\tprivate getMatchingPreset(): PresetSpecSettings<Spec> {\n\t\tconst matchingPresets = playerPresets.filter((preset) => preset.spec === this.spec);\n\t\tlet presetIdx = 0;\n\n\t\tif (matchingPresets && matchingPresets.length > 1) {\n\t\t\tlet distance = 100;\n\t\t\t// Search talents and find the preset that the players talents most closely match.\n\t\t\tmatchingPresets.forEach((preset, i) => {\n\t\t\t\tlet presetTalents = [0, 0, 0];\n\t\t\t\tlet talentIdx = 0;\n\t\t\t\t// First sum up the number of talents per tree for preset.\n\t\t\t\tArray.from(preset.talents.talentsString).forEach((v) => {\n\t\t\t\t\tif (v == '-') {\n\t\t\t\t\t\ttalentIdx++;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tpresetTalents[talentIdx] += parseInt(v);\n\t\t\t\t});\n\n\t\t\t\t// Diff the distance to the preset.\n\n\t\t\t\tconst newDistance = presetTalents.reduce((acc, v, i) => acc += Math.abs(this.talents[i]?.guid - presetTalents[i]), 0);\n\n\t\t\t\t// If this is the best distance, assign this preset.\n\t\t\t\tif (newDistance < distance) {\n\t\t\t\t\tpresetIdx = i;\n\t\t\t\t\tdistance = newDistance;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn matchingPresets[presetIdx];\n\t}\n\n\tprivate getEquipment(): EquipmentSpec {\n\t\tlet equipment = EquipmentSpec.create();\n\t\tequipment.items = new Array<ItemSpec>();\n\n\t\tthis.gear.forEach((gear) => {\n\t\t\tconst item = ItemSpec.create();\n\t\t\titem.id = gear.id;\n\t\t\titem.enchant = gear.permanentEnchant;\n\t\t\tif (gear.gems) {\n\t\t\t\titem.gems = new Array<number>();\n\t\t\t\tgear.gems.forEach((gemInfo) => item.gems.push(gemInfo.id));\n\t\t\t}\n\t\t\tequipment!.items.push(item);\n\t\t});\n\t\treturn equipment;\n\t}\n\n}\n\n\n// Maps WCL spec to sorting priority for party makeup checks. Lower the number, the more likely the query will be successful.\nconst specSortPriority: Record<string, number> = {\n\t'Warden': 0,\n\t'Guardian': 1,\n\t'Feral': 2,\n\t'Balance': 3,\n\t'Justicar': 4,\n\t'Retribution': 5,\n\t'Fury': 6,\n\t'Arms': 7,\n\t'Protection': 8,\n\t'Enhancement': 9,\n\t'Destruction': 10,\n\t'Affliction': 11,\n\t'Demonology': 12,\n\t'Marksman': 13,\n};\n\n// Maps WCL spec names to internal Spec enum.\nconst specNames: Record<string, Spec> = {\n\t'Balance': Spec.SpecBalanceDruid,\n\t'Elemental': Spec.SpecElementalShaman,\n\t'Enhancement': Spec.SpecEnhancementShaman,\n\t'Feral': Spec.SpecFeralDruid,\n\t'Warden': Spec.SpecFeralTankDruid,\n\t'Guardian': Spec.SpecFeralTankDruid,\n\t'Survival': Spec.SpecHunter,\n\t'BeastMastery': Spec.SpecHunter,\n\t'Arcane': Spec.SpecMage,\n\t'Fire': Spec.SpecMage,\n\t'Frost': Spec.SpecMage,\n\t'Assassination': Spec.SpecRogue,\n\t'Combat': Spec.SpecRogue,\n\t'Retribution': Spec.SpecRetributionPaladin,\n\t'Justicar': Spec.SpecProtectionPaladin,\n\t'Shadow': Spec.SpecShadowPriest,\n\t'Smite': Spec.SpecSmitePriest,\n\t'Destruction': Spec.SpecWarlock,\n\t'Affliction': Spec.SpecWarlock,\n\t'Demonology': Spec.SpecWarlock,\n\t'Arms': Spec.SpecWarrior,\n\t'Fury': Spec.SpecWarrior,\n\t'Champion': Spec.SpecWarrior,\n\t'Warrior': Spec.SpecWarrior,\n\t'Gladiator': Spec.SpecWarrior,\n\t'Protection': Spec.SpecProtectionWarrior,\n};\n\n// Maps WCL spec+type to internal buff bot IDs.\nconst buffBotNames: Record<string, string> = {\n\t// Healers\n\t'HolyPaladin': 'Paladin',\n\t'HolyPriest': 'Holy Priest',\n\t'DisciplinePriest': 'Divine Spirit Priest',\n\t'RestorationDruid': 'Resto Druid',\n\t'DreamstateDruid': 'Resto Druid',\n\t'RestorationShaman': 'Resto Shaman',\n};\n\ninterface wclBuffCastsData {\n\tname: string;\n\ttargets: {\n\t\tname: string;\n\t\ttype: string;\n\t}[];\n}\n\ninterface wclRateLimitData {\n\tlimitPerHour: number,\n\tpointsSpentThisHour: number,\n\tpointsResetIn: number\n}\n\n// Typed interface for WCL talents\ninterface wclTalents {\n\tname: string;\n\tguid: number;\n\ttype: number;\n\tabilityIcon: string;\n}\n\n// Typed interface for WCL Gems\ninterface wclGems {\n\tid: number;\n\titemLevel: number;\n\ticon: string;\n}\n\n// Typed interface for WCL Gear\ninterface wclGear {\n\tid: number;\n\tslot: number;\n\tquality: number;\n\ticon: string;\n\tname: string;\n\titemLevel: number;\n\tpermanentEnchant: number;\n\tpermanentEnchantName: string;\n\ttemporaryEnchant: number;\n\tgems?: wclGems[];\n}\n\n// Typed interface for WCL Player Data\ninterface wclPlayer {\n\tname: string;\n\tid: number;\n\tguid?: number;\n\ttype: string; // Paladin, Mage, etc.\n\ticon: string; // Paladin-Justicar, Mage-Fire, etc.\n\titemLevel?: number;\n\ttotal?: number;\n\tactiveTime?: number;\n\tactiveTimeReduced?: number;\n\tabilities?: unknown[]; // Don't care about abilities.\n\tdamageAbilities?: unknown[];\n\ttargets?: unknown[];\n\ttalents: wclTalents[];\n\tgear: wclGear[];\n}\n\n// Typed interface for WoWSimPlayer class\ninterface wclSimPlayer extends wclPlayer {\n\twclSpec: string;\n\tpartyAssigned: boolean;\n\tisPartyBuffer: boolean;\n\tpartyMembers: string[];\n\tisBuffBot: boolean;\n}\n\ninterface wclAura {\n\tname: string;\n\tid: number;\n\tguid: number;\n\ttype: string;\n\ticon: string;\n\ttotalUptime: number;\n\ttotalUses: number;\n\tbands: {\n\t\tstartTime: number,\n\t\tendTime: number,\n\t}[];\n}\n","import { BooleanPicker } from \"../core/components/boolean_picker.js\";\nimport { DetailedResults } from \"../core/components/detailed_results.js\";\nimport { EncounterPicker } from \"../core/components/encounter_picker.js\";\nimport { LogRunner } from \"../core/components/log_runner.js\";\nimport { addRaidSimAction, RaidSimResultsManager, ReferenceData } from \"../core/components/raid_sim_action.js\";\nimport { SavedDataManager } from \"../core/components/saved_data_manager.js\";\nimport { SettingsMenu } from \"../core/components/settings_menu.js\";\n\nimport * as Tooltips from \"../core/constants/tooltips.js\";\nimport { Encounter } from \"../core/encounter.js\";\nimport { Player } from \"../core/player.js\";\nimport { Raid as RaidProto } from \"../core/proto/api.js\";\nimport { Class, Encounter as EncounterProto, Faction, Stat, TristateEffect } from \"../core/proto/common.js\";\nimport { Blessings } from \"../core/proto/paladin.js\";\nimport { BlessingsAssignments, BuffBot as BuffBotProto, RaidSimSettings, SavedEncounter, SavedRaid } from \"../core/proto/ui.js\";\nimport { playerToSpec } from \"../core/proto_utils/utils.js\";\nimport { Raid } from \"../core/raid.js\";\nimport { Sim } from \"../core/sim.js\";\nimport { SimUI } from \"../core/sim_ui.js\";\nimport { LaunchStatus, raidSimLaunched } from '../core/launched_sims.js';\nimport { EventID, TypedEvent } from \"../core/typed_event.js\";\n\nimport { AssignmentsPicker } from \"./assignments_picker.js\";\nimport { BlessingsPicker } from \"./blessings_picker.js\";\nimport { BuffBot } from \"./buff_bot.js\";\nimport { implementedSpecs } from \"./presets.js\";\nimport { RaidPicker } from \"./raid_picker.js\";\nimport { TanksPicker } from \"./tanks_picker.js\";\n\nimport * as ImportExport from \"./import_export.js\";\n\ndeclare var Muuri: any;\ndeclare var tippy: any;\ndeclare var pako: any;\n\nexport interface RaidSimConfig {\n\tknownIssues?: Array<string>,\n}\n\nconst extraKnownIssues: Array<string> = [\n\t//'We\\'re still missing implementations for many specs. If you\\'d like to help us out, check out our <a href=\"https://github.com/wowsims/wotlk\">Github project</a> or <a href=\"https://discord.gg/jJMPr9JWwx\">join our discord</a>!',\n];\n\nexport class RaidSimUI extends SimUI {\n\tprivate readonly config: RaidSimConfig;\n\tprivate raidSimResultsManager: RaidSimResultsManager | null = null;\n\tpublic raidPicker: RaidPicker | null = null;\n\tprivate blessingsPicker: BlessingsPicker | null = null;\n\n\t// Emits when the raid comp changes. Includes changes to buff bots.\n\treadonly compChangeEmitter = new TypedEvent<void>();\n\treadonly changeEmitter = new TypedEvent<void>();\n\n\treadonly referenceChangeEmitter = new TypedEvent<void>();\n\n\tprivate settingsMuuri: any;\n\n\tconstructor(parentElem: HTMLElement, config: RaidSimConfig) {\n\t\tsuper(parentElem, new Sim(), {\n\t\t\tspec: null,\n\t\t\tlaunchStatus: raidSimLaunched ? LaunchStatus.Launched : LaunchStatus.Unlaunched,\n\t\t\tknownIssues: (config.knownIssues || []).concat(extraKnownIssues),\n\t\t});\n\t\tthis.rootElem.classList.add('raid-sim-ui');\n\n\t\tthis.config = config;\n\t\tthis.settingsMuuri = null;\n\n\t\tthis.sim.raid.compChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\n\t\tthis.sim.setModifyRaidProto(raidProto => this.modifyRaidProto(raidProto));\n\n\t\t[\n\t\t\tthis.compChangeEmitter,\n\t\t\tthis.sim.changeEmitter,\n\t\t].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n\n\t\tthis.sim.waitForInit().then(() => this.loadSettings());\n\n\t\tthis.addSidebarComponents();\n\t\tthis.addTopbarComponents();\n\t\tthis.addRaidTab();\n\t\tthis.addSettingsTab();\n\t\tthis.addDetailedResultsTab();\n\t\tthis.addLogTab();\n\n\t\tthis.changeEmitter.on(() => this.recomputeSettingsLayout());\n\t}\n\n\tprivate loadSettings() {\n\t\tconst initEventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tlet loadedSettings = false;\n\n\t\t\tconst savedSettings = window.localStorage.getItem(this.getSettingsStorageKey());\n\t\t\tif (savedSettings != null) {\n\t\t\t\ttry {\n\t\t\t\t\tconst settings = RaidSimSettings.fromJsonString(savedSettings);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t\tloadedSettings = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse saved settings: ' + e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!loadedSettings) {\n\t\t\t\tthis.applyDefaults(initEventID);\n\t\t\t}\n\n\t\t\t// This needs to go last so it doesn't re-store things as they are initialized.\n\t\t\tthis.changeEmitter.on(eventID => {\n\t\t\t\tconst jsonStr = RaidSimSettings.toJsonString(this.toProto());\n\t\t\t\twindow.localStorage.setItem(this.getSettingsStorageKey(), jsonStr);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate addSidebarComponents() {\n\t\tthis.raidSimResultsManager = addRaidSimAction(this);\n\t\tthis.raidSimResultsManager.changeEmitter.on(eventID => this.referenceChangeEmitter.emit(eventID));\n\t}\n\n\tprivate addTopbarComponents() {\n\t\tthis.simHeader.addImportLink('JSON', parent => new ImportExport.RaidJsonImporter(parent, this));\n\t\tthis.simHeader.addImportLink('WCL', parent => new ImportExport.RaidWCLImporter(parent, this));\n\n\t\tthis.simHeader.addExportLink('JSON', parent => new ImportExport.RaidJsonExporter(parent, this));\n\t}\n\n\tprivate addRaidTab() {\n\t\tthis.addTab('RAID', 'raid-tab', `\n\t\t\t<div class=\"raid-picker\">\n\t\t\t</div>\n\t\t\t<div class=\"saved-raids-div\">\n\t\t\t\t<div class=\"saved-raids-manager\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.raidPicker = new RaidPicker(this.rootElem.getElementsByClassName('raid-picker')[0] as HTMLElement, this);\n\n\t\tconst savedRaidManager = new SavedDataManager<RaidSimUI, SavedRaid>(this.rootElem.getElementsByClassName('saved-raids-manager')[0] as HTMLElement, this, {\n\t\t\tlabel: 'Raid',\n\t\t\tstorageKey: this.getSavedRaidStorageKey(),\n\t\t\tgetData: (raidSimUI: RaidSimUI) => SavedRaid.create({\n\t\t\t\traid: this.sim.raid.toProto(),\n\t\t\t\tbuffBots: this.getBuffBots().map(b => b.toProto()),\n\t\t\t\tblessings: this.blessingsPicker!.getAssignments(),\n\t\t\t\tfaction: this.sim.getFaction(),\n\t\t\t\tphase: this.sim.getPhase(),\n\t\t\t}),\n\t\t\tsetData: (eventID: EventID, raidSimUI: RaidSimUI, newRaid: SavedRaid) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tthis.sim.raid.fromProto(eventID, newRaid.raid || RaidProto.create());\n\t\t\t\t\tthis.raidPicker!.setBuffBots(eventID, newRaid.buffBots);\n\t\t\t\t\tthis.blessingsPicker!.setAssignments(eventID, newRaid.blessings || BlessingsAssignments.create());\n\t\t\t\t\tif (newRaid.faction) this.sim.setFaction(eventID, newRaid.faction);\n\t\t\t\t\tif (newRaid.phase) this.sim.setPhase(eventID, newRaid.phase);\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.changeEmitter, this.sim.changeEmitter],\n\t\t\tequals: (a: SavedRaid, b: SavedRaid) => {\n\t\t\t\treturn SavedRaid.equals(a, b);\n\t\t\t},\n\t\t\ttoJson: (a: SavedRaid) => SavedRaid.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedRaid.fromJson(obj),\n\t\t});\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedRaidManager.loadUserData();\n\t\t});\n\t}\n\n\tprivate addSettingsTab() {\n\t\tthis.addTab('SETTINGS', 'raid-settings-tab', `\n\t\t\t<div class=\"raid-settings-sections\">\n\t\t\t\t<div class=\"settings-section-container raid-settings-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section raid-encounter-section\">\n\t\t\t\t\t\t<legend>Encounter</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container blessings-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section blessings-section\">\n\t\t\t\t\t\t<legend>Blessings</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container assignments-section-container\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container tanks-section-container\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container raid-settings-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section other-options-section\">\n\t\t\t\t\t\t<legend>Other Options</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"settings-bottom-bar\">\n\t\t\t\t<div class=\"saved-encounter-manager\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst encounterSectionElem = this.rootElem.getElementsByClassName('raid-encounter-section')[0] as HTMLElement;\n\t\tnew EncounterPicker(encounterSectionElem, this.sim.encounter, {\n\t\t\tshowExecuteProportion: true,\n\t\t}, this);\n\t\tconst savedEncounterManager = new SavedDataManager<Encounter, SavedEncounter>(this.rootElem.getElementsByClassName('saved-encounter-manager')[0] as HTMLElement, this.sim.encounter, {\n\t\t\tlabel: 'Encounter',\n\t\t\tstorageKey: this.getSavedEncounterStorageKey(),\n\t\t\tgetData: (encounter: Encounter) => SavedEncounter.create({ encounter: encounter.toProto() }),\n\t\t\tsetData: (eventID: EventID, encounter: Encounter, newEncounter: SavedEncounter) => encounter.fromProto(eventID, newEncounter.encounter!),\n\t\t\tchangeEmitters: [this.sim.encounter.changeEmitter],\n\t\t\tequals: (a: SavedEncounter, b: SavedEncounter) => SavedEncounter.equals(a, b),\n\t\t\ttoJson: (a: SavedEncounter) => SavedEncounter.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedEncounter.fromJson(obj),\n\t\t});\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedEncounterManager.loadUserData();\n\t\t});\n\n\t\tconst blessingsSection = this.rootElem.getElementsByClassName('blessings-section')[0] as HTMLElement;\n\t\tthis.blessingsPicker = new BlessingsPicker(blessingsSection, this);\n\t\tthis.blessingsPicker.changeEmitter.on(eventID => this.changeEmitter.emit(eventID));\n\t\ttippy(blessingsSection, {\n\t\t\tcontent: Tooltips.BLESSINGS_SECTION,\n\t\t\tallowHTML: true,\n\t\t\tplacement: 'left',\n\t\t});\n\n\t\tconst assignmentsPicker = new AssignmentsPicker(this.rootElem.getElementsByClassName('assignments-section-container')[0] as HTMLElement, this);\n\t\tconst tanksPicker = new TanksPicker(this.rootElem.getElementsByClassName('tanks-section-container')[0] as HTMLElement, this);\n\n\t\tconst otherOptionsSectionElem = this.rootElem.getElementsByClassName('other-options-section')[0] as HTMLElement;\n\t\totherOptionsSectionElem.classList.add('hide');\n\t\t//new BooleanPicker(otherOptionsSectionElem, this.sim.raid, {\n\t\t//\tlabel: 'Stagger Stormstrikes',\n\t\t//\tlabelTooltip: 'When there are multiple Enhancement Shaman in the raid, causes them to coordinate their Stormstrike casts for optimal SS charge usage.',\n\t\t//\tchangedEvent: (raid: Raid) => raid.staggerStormstrikesChangeEmitter,\n\t\t//\tgetValue: (raid: Raid) => raid.getStaggerStormstrikes(),\n\t\t//\tsetValue: (eventID: EventID, raid: Raid, newValue: boolean) => {\n\t\t//\t\traid.setStaggerStormstrikes(eventID, newValue);\n\t\t//\t},\n\t\t//});\n\n\t\t// Init Muuri layout only when settings tab is clicked, because it needs the elements\n\t\t// to be shown so it can calculate sizes.\n\t\t(this.rootElem.getElementsByClassName('raid-settings-tab-tab')[0] as HTMLElement)!.addEventListener('click', event => {\n\t\t\tif (this.settingsMuuri == null) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.settingsMuuri = new Muuri('.raid-settings-sections');\n\t\t\t\t}, 200); // Magic amount of time before Muuri init seems to work\n\t\t\t}\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.recomputeSettingsLayout();\n\t\t\t}, 200);\n\t\t});\n\t}\n\n\tprivate addDetailedResultsTab() {\n\t\tthis.addTab('DETAILED RESULTS', 'detailed-results-tab', `\n\t\t\t<div class=\"detailed-results\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst detailedResults = new DetailedResults(this.rootElem.getElementsByClassName('detailed-results')[0] as HTMLElement, this, this.raidSimResultsManager!);\n\t}\n\n\tprivate addLogTab() {\n\t\tthis.addTab('LOG', 'log-tab', `\n\t\t\t<div class=\"log-runner\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst logRunner = new LogRunner(this.rootElem.getElementsByClassName('log-runner')[0] as HTMLElement, this);\n\t}\n\n\tprivate recomputeSettingsLayout() {\n\t\tif (this.settingsMuuri) {\n\t\t\t//this.settingsMuuri.refreshItems();\n\t\t}\n\t\twindow.dispatchEvent(new Event('resize'));\n\t}\n\n\tprivate modifyRaidProto(raidProto: RaidProto) {\n\t\t// Invoke all the buff bot callbacks.\n\t\tthis.getBuffBots().forEach(buffBot => {\n\t\t\tconst partyProto = raidProto.parties[buffBot.getPartyIndex()];\n\t\t\tif (!partyProto) {\n\t\t\t\tthrow new Error('No party proto for party index: ' + buffBot.getPartyIndex());\n\t\t\t}\n\t\t\tbuffBot.settings.modifyRaidProto(buffBot, raidProto, partyProto);\n\t\t});\n\n\t\t// Apply blessings.\n\t\tconst numPaladins = this.getClassCount(Class.ClassPaladin);\n\t\tconst blessingsAssignments = this.blessingsPicker!.getAssignments();\n\t\timplementedSpecs.forEach(spec => {\n\t\t\tconst playerProtos = raidProto.parties\n\t\t\t\t.map(party => party.players.filter(player => player.class != Class.ClassUnknown && playerToSpec(player) == spec))\n\t\t\t\t.flat();\n\n\t\t\tblessingsAssignments.paladins.forEach((paladin, i) => {\n\t\t\t\tif (i >= numPaladins) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (paladin.blessings[spec] == Blessings.BlessingOfKings) {\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfKings = true);\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfMight) {\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfMight = TristateEffect.TristateEffectImproved);\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfWisdom) {\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfWisdom = TristateEffect.TristateEffectImproved);\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfSanctuary) {\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfSanctuary = true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tgetCurrentData(): ReferenceData | null {\n\t\tif (this.raidSimResultsManager) {\n\t\t\treturn this.raidSimResultsManager.getCurrentData();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetReferenceData(): ReferenceData | null {\n\t\tif (this.raidSimResultsManager) {\n\t\t\treturn this.raidSimResultsManager.getReferenceData();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetClassCount(playerClass: Class): number {\n\t\treturn this.sim.raid.getClassCount(playerClass)\n\t\t\t+ this.getBuffBots()\n\t\t\t\t.filter(buffBot => buffBot.getClass() == playerClass).length;\n\t}\n\n\tgetBuffBots(): Array<BuffBot> {\n\t\treturn this.raidPicker!.getBuffBots();\n\t}\n\n\tsetBuffBots(eventID: EventID, buffBotProtos: BuffBotProto[]): void {\n\t\tthis.raidPicker!.setBuffBots(eventID, buffBotProtos);\n\t}\n\n\tclearBuffBots(eventID: EventID): void {\n\t\tthis.raidPicker!.setBuffBots(eventID, []);\n\t}\n\n\tgetPlayersAndBuffBots(): Array<Player<any> | BuffBot | null> {\n\t\tconst players = this.sim.raid.getPlayers();\n\t\tconst buffBots = this.getBuffBots();\n\n\t\tconst playersAndBuffBots: Array<Player<any> | BuffBot | null> = players.slice();\n\t\tbuffBots.forEach(buffBot => {\n\t\t\tplayersAndBuffBots[buffBot.getRaidIndex()] = buffBot;\n\t\t});\n\n\t\treturn playersAndBuffBots;\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.sim.raid.fromProto(eventID, RaidProto.create());\n\t\t\tthis.sim.encounter.applyDefaults(eventID);\n\t\t\tthis.sim.applyDefaults(eventID, true, true);\n\t\t\tthis.sim.setShowDamageMetrics(eventID, true);\n\t\t});\n\t}\n\n\ttoProto(): RaidSimSettings {\n\t\treturn RaidSimSettings.create({\n\t\t\tsettings: this.sim.toProto(),\n\t\t\traid: this.sim.raid.toProto(true),\n\t\t\tbuffBots: this.getBuffBots().map(b => b.toProto()),\n\t\t\tblessings: this.blessingsPicker!.getAssignments(),\n\t\t\tencounter: this.sim.encounter.toProto(),\n\t\t});\n\t}\n\n\ttoLink(): string {\n\t\tconst proto = this.toProto();\n\t\t// When sharing links, people generally don't intend to share settings.\n\t\tproto.settings = undefined;\n\n\t\tconst protoBytes = RaidSimSettings.toBinary(proto);\n\t\tconst deflated = pako.deflate(protoBytes, { to: 'string' });\n\t\tconst encoded = btoa(String.fromCharCode(...deflated));\n\n\t\tconst linkUrl = new URL(window.location.href);\n\t\tlinkUrl.hash = encoded;\n\t\treturn linkUrl.toString();\n\t}\n\n\tfromProto(eventID: EventID, settings: RaidSimSettings) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (settings.settings) {\n\t\t\t\tthis.sim.fromProto(eventID, settings.settings);\n\t\t\t}\n\t\t\tthis.sim.raid.fromProto(eventID, settings.raid || RaidProto.create());\n\t\t\tthis.sim.encounter.fromProto(eventID, settings.encounter || EncounterProto.create());\n\t\t\tthis.raidPicker!.setBuffBots(eventID, settings.buffBots);\n\t\t\tthis.blessingsPicker!.setAssignments(eventID, settings.blessings || BlessingsAssignments.create());\n\t\t});\n\t}\n\n\tclearRaid(eventID: EventID) {\n\t\tthis.sim.raid.clear(eventID);\n\t\tthis.clearBuffBots(eventID);\n\t}\n\n\t// Returns the actual key to use for local storage, based on the given key part and the site context.\n\tgetStorageKey(keyPart: string): string {\n\t\treturn '__wotlk_raid__' + keyPart;\n\t}\n\n\tgetSavedRaidStorageKey(): string {\n\t\treturn this.getStorageKey('__savedRaid__');\n\t}\n}\n","import { RaidSimUI } from './raid_sim_ui.js';\n\nconst ui = new RaidSimUI(document.body, {});\n"],"names":["RaidTargetPicker","Input","constructor","parent","raid","modObj","config","super","this","rootElem","classList","add","curPlayer","getPlayerFromRaidTarget","getValue","curRaidTarget","getInputValue","noTargetOption","iconUrl","text","noTargetLabel","color","value","isDropdown","innerHTML","buttonElem","getElementsByClassName","dropdownElem","addEventListener","event","preventDefault","currentOptions","updateOptions","TypedEvent","nextEventID","compChangeEmitter","on","eventID","init","makeTargetOptions","playerOptions","getPlayers","filter","player","map","getTalentTreeIcon","getLabel","getClassColor","concat","forEach","option","appendChild","makeOption","prevRaidTarget","RaidTarget","equals","setInputValue","inputChanged","data","makeOptionElem","getInputElem","makeRaidTarget","emptyRaidTarget","newValue","clone","optionData","find","static","optionContainer","document","createElement","style","backgroundColor","icon","src","label","textContent","specSimFactories","Spec","SpecDeathknight","parentElem","DeathknightSimUI","SpecBalanceDruid","BalanceDruidSimUI","SpecFeralDruid","FeralDruidSimUI","SpecFeralTankDruid","FeralTankDruidSimUI","SpecElementalShaman","ElementalShamanSimUI","SpecEnhancementShaman","EnhancementShamanSimUI","SpecHunter","HunterSimUI","SpecMage","MageSimUI","SpecRogue","RogueSimUI","SpecRetributionPaladin","RetributionPaladinSimUI","SpecProtectionPaladin","ProtectionPaladinSimUI","SpecShadowPriest","ShadowPriestSimUI","SpecSmitePriest","SmitePriestSimUI","SpecWarrior","WarriorSimUI","SpecProtectionWarrior","ProtectionWarriorSimUI","SpecWarlock","WarlockSimUI","playerPresets","spec","rotation","DeathknightPresets.DefaultFrostRotation","talents","DeathknightPresets.FrostTalents","specOptions","DeathknightPresets.DefaultFrostOptions","consumes","DeathknightPresets.DefaultConsumes","defaultName","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceTroll","defaultGear","DeathknightPresets.P1_FROST_BIS_PRESET","gear","otherDefaults","DeathknightPresets.OtherDefaults","tooltip","talentTreeIcons","Class","ClassDeathknight","DeathknightPresets.DefaultUnholyRotation","DeathknightPresets.UnholyDualWieldTalents","DeathknightPresets.DefaultUnholyOptions","DeathknightPresets.P1_UNHOLY_DW_BIS_PRESET","BalanceDruidPresets.DefaultRotation","BalanceDruidPresets.StandardTalents","BalanceDruidPresets.DefaultOptions","BalanceDruidPresets.DefaultConsumes","RaceNightElf","RaceTauren","BalanceDruidPresets.P1_PRESET","specNames","specIconsLarge","FeralDruidPresets.DefaultRotation","FeralDruidPresets.StandardTalents","FeralDruidPresets.DefaultOptions","FeralDruidPresets.DefaultConsumes","FeralDruidPresets.P1_PRESET","FeralTankDruidPresets.DefaultRotation","FeralTankDruidPresets.StandardTalents","FeralTankDruidPresets.DefaultOptions","FeralTankDruidPresets.DefaultConsumes","FeralTankDruidPresets.P1_PRESET","HunterPresets.DefaultRotation","HunterPresets.BeastMasteryTalents","HunterPresets.BMDefaultOptions","HunterPresets.DefaultConsumes","RaceOrc","HunterPresets.MM_P1_PRESET","ClassHunter","HunterPresets.MarksmanTalents","HunterPresets.DefaultOptions","HunterPresets.SurvivalTalents","HunterPresets.SV_P1_PRESET","MagePresets.DefaultArcaneRotation","MagePresets.ArcaneTalents","MagePresets.DefaultArcaneOptions","MagePresets.DefaultArcaneConsumes","RaceGnome","MagePresets.P1_ARCANE_PRESET","ClassMage","MagePresets.DefaultFireRotation","MagePresets.FireTalents","MagePresets.DefaultFireOptions","MagePresets.DefaultFireConsumes","MagePresets.P1_FIRE_PRESET","MagePresets.DefaultFrostRotation","MagePresets.FrostTalents","MagePresets.DefaultFrostOptions","MagePresets.DefaultFrostConsumes","MagePresets.P1_FROST_PRESET","RoguePresets.DefaultRotation","RoguePresets.CombatTalents","RoguePresets.DefaultOptions","RoguePresets.DefaultConsumes","RoguePresets.P1_PRESET_COMBAT","ElementalShamanPresets.DefaultRotation","ElementalShamanPresets.StandardTalents","ElementalShamanPresets.DefaultOptions","ElementalShamanPresets.DefaultConsumes","RaceDraenei","ElementalShamanPresets.P1_PRESET","EnhancementShamanPresets.DefaultRotation","EnhancementShamanPresets.StandardTalents","EnhancementShamanPresets.DefaultOptions","EnhancementShamanPresets.DefaultConsumes","EnhancementShamanPresets.P1_PRESET","ShadowPriestPresets.DefaultRotation","ShadowPriestPresets.StandardTalents","ShadowPriestPresets.DefaultOptions","ShadowPriestPresets.DefaultConsumes","RaceDwarf","RaceUndead","ShadowPriestPresets.P1_PRESET","SmitePriestPresets.DefaultRotation","SmitePriestPresets.StandardTalents","SmitePriestPresets.DefaultOptions","SmitePriestPresets.DefaultConsumes","SmitePriestPresets.P1_PRESET","WarriorPresets.ArmsRotation","WarriorPresets.ArmsTalents","WarriorPresets.DefaultOptions","WarriorPresets.DefaultConsumes","WarriorPresets.P1_ARMS_PRESET","ClassWarrior","WarriorPresets.DefaultRotation","WarriorPresets.FuryTalents","WarriorPresets.P1_FURY_PRESET","ProtectionWarriorPresets.DefaultRotation","ProtectionWarriorPresets.StandardTalents","ProtectionWarriorPresets.DefaultOptions","ProtectionWarriorPresets.DefaultConsumes","ProtectionWarriorPresets.P1_BALANCED_PRESET","RetributionPaladinPresets.DefaultRotation","RetributionPaladinPresets.AuraMasteryTalents","RetributionPaladinPresets.DefaultOptions","RetributionPaladinPresets.DefaultConsumes","RaceBloodElf","RetributionPaladinPresets.P1_PRESET","RetributionPaladinPresets.P2_PRESET","RetributionPaladinPresets.P3_PRESET","RetributionPaladinPresets.P4_PRESET","RetributionPaladinPresets.P5_PRESET","ClassPaladin","ProtectionPaladinPresets.DefaultRotation","ProtectionPaladinPresets.GenericAoeTalents","ProtectionPaladinPresets.DefaultOptions","ProtectionPaladinPresets.DefaultConsumes","ProtectionPaladinPresets.P1_PRESET","WarlockPresets.DestructionRotation","WarlockPresets.DestructionTalents","WarlockPresets.DestructionOptions","WarlockPresets.DefaultConsumes","WarlockPresets.P1_Preset_Demo_Destro","WarlockPresets.P1_PreBiS_14","WarlockPresets.OtherDefaults","ClassWarlock","WarlockPresets.AfflictionRotation","WarlockPresets.AfflictionTalents","WarlockPresets.AfflictionOptions","WarlockPresets.P1_Preset_Affliction","WarlockPresets.P1_PreBiS_11","WarlockPresets.DemonologyRotation","WarlockPresets.DemonologyTalents","WarlockPresets.DemonologyOptions","implementedSpecs","Set","preset","buffBotPresets","buffBotId","deprecated","name","modifyRaidProto","buffBot","raidProto","partyProto","buffs","giftOfTheWild","Math","max","TristateEffect","TristateEffectRegular","thorns","debuffs","faerieFire","leaderOfThePack","innervateIndex","getInnervateAssignment","targetIndex","NO_TARGET","partyIndex","floor","playerIndex","playerProto","parties","players","innervates","TristateEffectImproved","arcaneBrilliance","judgementOfWisdom","ClassPriest","shadowProtection","powerWordFortitude","divineSpirit","powerInfusionIndex","getPowerInfusionAssignment","powerInfusions","tricksOfTheTradeIndex","getTricksOfTheTradeAssignment","tricksOfTheTrades","ClassShaman","bloodlust","manaSpringTotem","manaTideTotems","woaSpecs","wfSpecs","woaVotes","wfVotes","specs","class","ClassUnknown","playerToSpec","playerSpec","includes","length","wrathOfAirTotem","windfuryTotem","battleShout","sunderArmor","bloodFrenzy","unholyFrenzyIndex","getUnholyFrenzyAssignment","unholyFrenzy","BuffBot","id","sim","raidIndex","innervateAssignment","powerInfusionAssignment","tricksOfTheTradeAssignment","unholyFrenzyAssignment","raidIndexChangeEmitter","innervateAssignmentChangeEmitter","powerInfusionAssignmentChangeEmitter","tricksOfTheTradeAssignmentChangeEmitter","unholyFrenzyAssignmentChangeEmitter","changeEmitter","settings","Error","updateSettings","emitter","emit","getParty","getPartyIndex","getRaidIndex","getClass","specToClass","classColors","setRaidIndex","newRaidIndex","freezeAllAndDo","setInnervateAssignment","newInnervateAssignment","setPowerInfusionAssignment","newPowerInfusionAssignment","setTricksOfTheTradeAssignment","newTricksOfTheTradeAssignment","setUnholyFrenzyAssignment","newUnholyFrenzyAssignment","toProto","BuffBotProto","create","fromProto","proto","newBuffBot","AssignmentsPicker","Component","raidSimUI","innervatesPicker","InnervatesPicker","powerInfusionsPicker","PowerInfusionsPicker","tricksOfTheTradesPicker","TricksOfTheTradesPicker","unholyFrenzyPicker","UnholyFrenzyPicker","AssignedBuffPicker","targetPickers","playersContainer","update","getTitle","toUpperCase","sourcePlayers","getSourcePlayers","display","sourcePlayer","sourcePlayerIndex","row","sourceElem","Player","arrow","raidTargetPicker","extraCssClasses","changedEvent","specOptionsChangeEmitter","getPlayerValue","setValue","setPlayerValue","getBuffBotValue","setBuffBotValue","targetPickerData","playerOrBot","targetPicker","targetPlayer","getPlayersAndBuffBots","ClassDruid","getSpecOptions","innervateTarget","newOptions","setSpecOptions","getTalents","powerInfusion","powerInfusionTarget","ClassRogue","tricksOfTheTradeTarget","hysteria","unholyFrenzyTarget","BlessingsPicker","assignments","BlessingsAssignments","makeDefaultBlessings","bodyElem","naturalSpecOrder","memeSpecs","paladinIndexes","Array","keys","cols","rows","headerCell","titleIcons","tippy","content","allowHTML","paladinIdx","cell","push","IconEnumPicker","numColumns","values","Blessings","BlessingUnknown","actionId","ActionId","fromSpellId","BlessingOfKings","BlessingOfMight","BlessingOfWisdom","BlessingOfSanctuary","a","b","zeroValue","picker","paladins","blessings","setNumPaladins","getClassCount","numPaladins","min","i","elem","remove","getAssignments","setAssignments","newAssignments","RaidPicker","currentDragPlayer","currentDragPlayerFromIndex","currentDragType","raidViewer","partiesContainer","partyPickers","getParties","party","PartyPicker","newPlayerPickerRoot","newPlayerPicker","NewPlayerPicker","ondragend","clearDragPlayer","getCurrentFaction","getFaction","getCurrentPhase","getPhase","getPlayerPicker","MAX_PARTY_SIZE","playerPickers","getPlayerPickers","getBuffBots","setBuffBots","newBuffBotProtos","setPlayer","buffBotProto","console","warn","setDragPlayer","fromIndex","type","index","raidPicker","PlayerPicker","dpsResultElem","referenceDeltaElem","referenceChangeEmitter","currentData","getCurrentData","referenceData","getReferenceData","partyDps","simResult","raidMetrics","dps","avg","referenceDps","toFixed","formatDeltaTextElem","partyPicker","newPlayer","getPlayer","labelElem","iconElem","nameElem","resultsElem","setName","keyCode","realPlayerPickers","pp","indexOfThis","indexOf","focus","blur","emptyName","selection","window","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","dragStart","dataTransfer","dropEffect","effectAllowed","iconSrc","dragImage","Image","setDragImage","playerDataProto","setData","btoa","String","fromCharCode","PlayerProto","toBinary","ondragstart","copyElem","deleteElem","dragEnterCounter","ondragenter","ondragleave","ondragover","ondrop","dropData","getData","dragType","fromPlayerPicker","myicon","binary","atob","bytes","Uint8Array","charCodeAt","fromBinary","localPlayer","editElem","PlayerEditorModal","playerDps","getPlayerWithRaidIndex","isTankSpec","tanks","getTanks","emptyIdx","findIndex","tank","setTanks","newRaidTarget","setBalanceDruidSelfInnervate","setSmitePriestSelfPI","setAttribute","removeAttribute","getName","body","CloseButton","$","bPopup","close","editorRoot","closeClass","onClose","EnumPicker","labelTooltip","factionChangeEmitter","setFaction","phaseChangeEmitter","setPhase","presetsContainer","getEnumValues","wowClass","matchingPresets","classPresetsContainer","hexToRgba","matchingPreset","presetElem","presetIconElem","applySharedDefaults","setRace","setRotation","setTalentsString","talentsString","setGlyphs","glyphs","Glyphs","setConsumes","setProfession1","profession1","Profession","Engineering","setProfession2","profession2","Jewelcrafting","setDistanceFromTarget","distanceFromTarget","waitForInit","then","setGear","db","lookupEquipmentSpec","buffbotsTooltip","buffbotsContainer","matchingBuffBots","matchingBuffBot","TanksPicker","tanksContainer","tankIndex","tanksChangeEmitter","raid2","RaidJsonImporter","Importer","simUI","descriptionElem","onImport","RaidSimSettings","fromJsonString","RaidJsonExporter","Exporter","JSON","stringify","toJson","RaidWCLImporter","queryCounter","getWCLBearerToken","fetch","method","headers","Authorization","URLSearchParams","grant_type","response","json","res","access_token","catch","err","error","queryWCL","query","token","Accept","queryURL","encodeURI","getURLInfo","url","urlInfo","reportID","fightID","fightIDIndex","reportIDIndex","parseInt","substring","isNaN","toString","getRateLimit","async","importLink","importButton","disabled","cursor","doImport","removeProperty","clearRaid","rateLimitStart","experimentalGenerateParties","pointsSpentThisHour","limitPerHour","info","reportDataQuery","reportData","errors","errorData","reduce","accumulator","message","alert","wclData","report","guildData","guild","playerData","playerDetails","entries","innervateData","powerInfusionData","tricksOfTheTradeData","tricksOfTheTrade","fight","fights","startTime","endTime","faction","encounter","EncounterProto","duration","targets","closestEncounterPreset","getAllPresetEncounters","enc","path","mob","target","Target","defaultProto","RaidProto","buffBots","wclIDtoRaidIndex","Map","tempParties","from","MAX_NUM_PARTIES","PartyProto","sortByProperty","objArray","prop","isArray","slice","direct","arguments","propPath","split","sort","p","match","mappedPlayers","wclPlayer","WCLSimPlayer","processBuffCastData","buffCastData","playerCasts","cast","isBuffBot","wclPlayers","sortBuffBotsLast","assignPlayerToParty","raidParty","missing","getBuffBot","simPlayer","set","rt","get","partyAssigned","partyBuffPlayers","isPartyBuffer","partyFull","partyMembers","auraIDs","getPartyAuraIds","auraBuffQueries","auraID","auraTargets","auraQueryRes","playerAuras","table","auras","auraTarget","bands","uniqueAuraTargets","some","partyFound","raidMember","totalPartyMembers","member","partyMember","isUndefined","isFull","targetID","targetRaidIndex","playerID","playerRaidIndex","raidPlayer","oneofKind","balanceDruid","options","feralDruid","feralTankDruid","rateLimitEnd","debug","pointsResetIn","sortPriority","wclSpec","specType","specSortPriority","specFuncs","specTypeFunctions","getMatchingPreset","withSpecProto","talentsCreate","nameToClass","equipment","getEquipment","race","applySharedDefaultsToProto","botID","buffBotNames","bot","feralDruidSpecAuras","specSpecificAuras","RetributionPaladin","GuardianDruid","WardenDruid","FeralDruid","BalanceDruid","RestorationDruid","MarksmanHunter","EnhancementShaman","classAuras","Paladin","Warrior","Warlock","reliableAuras","presetIdx","distance","presetTalents","talentIdx","v","newDistance","acc","abs","guid","EquipmentSpec","items","item","ItemSpec","enchant","permanentEnchant","gems","gemInfo","Warden","Guardian","Feral","Balance","Justicar","Retribution","Fury","Arms","Protection","Enhancement","Destruction","Affliction","Demonology","Marksman","Elemental","Survival","BeastMastery","Arcane","Fire","Frost","Assassination","Combat","Shadow","Smite","Champion","Gladiator","HolyPaladin","HolyPriest","DisciplinePriest","DreamstateDruid","RestorationShaman","extraKnownIssues","SimUI","Sim","launchStatus","LaunchStatus","Unlaunched","knownIssues","raidSimResultsManager","blessingsPicker","settingsMuuri","setModifyRaidProto","loadSettings","addSidebarComponents","addTopbarComponents","addRaidTab","addSettingsTab","addDetailedResultsTab","addLogTab","recomputeSettingsLayout","initEventID","loadedSettings","savedSettings","localStorage","getItem","getSettingsStorageKey","e","applyDefaults","jsonStr","toJsonString","setItem","addRaidSimAction","simHeader","addImportLink","ImportExport.RaidJsonImporter","ImportExport.RaidWCLImporter","addExportLink","ImportExport.RaidJsonExporter","addTab","savedRaidManager","SavedDataManager","storageKey","getSavedRaidStorageKey","SavedRaid","phase","newRaid","changeEmitters","fromJson","obj","loadUserData","encounterSectionElem","EncounterPicker","showExecuteProportion","savedEncounterManager","getSavedEncounterStorageKey","SavedEncounter","newEncounter","blessingsSection","Tooltips.BLESSINGS_SECTION","placement","setTimeout","Muuri","DetailedResults","LogRunner","dispatchEvent","Event","blessingsAssignments","playerProtos","flat","paladin","blessingOfKings","blessingOfMight","blessingOfWisdom","blessingOfSanctuary","playerClass","buffBotProtos","clearBuffBots","playersAndBuffBots","setShowDamageMetrics","toLink","protoBytes","deflated","pako","deflate","to","encoded","linkUrl","URL","location","href","hash","clear","getStorageKey","keyPart"],"mappings":"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"}